ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"UART_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	UART_1_initVar
  18              		.bss
  19              		.type	UART_1_initVar, %object
  20              		.size	UART_1_initVar, 1
  21              	UART_1_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.UART_1_Start,"ax",%progbits
  24              		.align	2
  25              		.global	UART_1_Start
  26              		.code	16
  27              		.thumb_func
  28              		.type	UART_1_Start, %function
  29              	UART_1_Start:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\UART_1.c"
   1:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/UART_1.c **** * File Name: UART_1.c
   3:.\Generated_Source\PSoC4/UART_1.c **** * Version 2.30
   4:.\Generated_Source\PSoC4/UART_1.c **** *
   5:.\Generated_Source\PSoC4/UART_1.c **** * Description:
   6:.\Generated_Source\PSoC4/UART_1.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC4/UART_1.c **** *
   8:.\Generated_Source\PSoC4/UART_1.c **** * Note:
   9:.\Generated_Source\PSoC4/UART_1.c **** *
  10:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
  11:.\Generated_Source\PSoC4/UART_1.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC4/UART_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC4/UART_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC4/UART_1.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC4/UART_1.c **** 
  17:.\Generated_Source\PSoC4/UART_1.c **** #include "UART_1.h"
  18:.\Generated_Source\PSoC4/UART_1.c **** #include "CyLib.h"
  19:.\Generated_Source\PSoC4/UART_1.c **** #if(UART_1_INTERNAL_CLOCK_USED)
  20:.\Generated_Source\PSoC4/UART_1.c ****     #include "UART_1_IntClock.h"
  21:.\Generated_Source\PSoC4/UART_1.c **** #endif /* End UART_1_INTERNAL_CLOCK_USED */
  22:.\Generated_Source\PSoC4/UART_1.c **** 
  23:.\Generated_Source\PSoC4/UART_1.c **** 
  24:.\Generated_Source\PSoC4/UART_1.c **** /***************************************
  25:.\Generated_Source\PSoC4/UART_1.c **** * Global data allocation
  26:.\Generated_Source\PSoC4/UART_1.c **** ***************************************/
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 2


  27:.\Generated_Source\PSoC4/UART_1.c **** 
  28:.\Generated_Source\PSoC4/UART_1.c **** uint8 UART_1_initVar = 0u;
  29:.\Generated_Source\PSoC4/UART_1.c **** #if( UART_1_TX_ENABLED && (UART_1_TXBUFFERSIZE > UART_1_FIFO_LENGTH))
  30:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_txBuffer[UART_1_TXBUFFERSIZE];
  31:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_txBufferRead = 0u;
  32:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_txBufferWrite = 0u;
  33:.\Generated_Source\PSoC4/UART_1.c **** #endif /* End UART_1_TX_ENABLED */
  34:.\Generated_Source\PSoC4/UART_1.c **** #if( ( UART_1_RX_ENABLED || UART_1_HD_ENABLED ) && \
  35:.\Generated_Source\PSoC4/UART_1.c ****      (UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH) )
  36:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBuffer[UART_1_RXBUFFERSIZE];
  37:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBufferRead = 0u;
  38:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBufferWrite = 0u;
  39:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBufferLoopDetect = 0u;
  40:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBufferOverflow = 0u;
  41:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RXHW_ADDRESS_ENABLED)
  42:.\Generated_Source\PSoC4/UART_1.c ****         volatile uint8 UART_1_rxAddressMode = UART_1_RXADDRESSMODE;
  43:.\Generated_Source\PSoC4/UART_1.c ****         volatile uint8 UART_1_rxAddressDetected = 0u;
  44:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End EnableHWAddress */
  45:.\Generated_Source\PSoC4/UART_1.c **** #endif /* End UART_1_RX_ENABLED */
  46:.\Generated_Source\PSoC4/UART_1.c **** 
  47:.\Generated_Source\PSoC4/UART_1.c **** 
  48:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
  49:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Start
  50:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
  51:.\Generated_Source\PSoC4/UART_1.c **** *
  52:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
  53:.\Generated_Source\PSoC4/UART_1.c **** *  Initialize and Enable the UART component.
  54:.\Generated_Source\PSoC4/UART_1.c **** *  Enable the clock input to enable operation.
  55:.\Generated_Source\PSoC4/UART_1.c **** *
  56:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
  57:.\Generated_Source\PSoC4/UART_1.c **** *  None.
  58:.\Generated_Source\PSoC4/UART_1.c **** *
  59:.\Generated_Source\PSoC4/UART_1.c **** * Return:
  60:.\Generated_Source\PSoC4/UART_1.c **** *  None.
  61:.\Generated_Source\PSoC4/UART_1.c **** *
  62:.\Generated_Source\PSoC4/UART_1.c **** * Global variables:
  63:.\Generated_Source\PSoC4/UART_1.c **** *  The UART_1_intiVar variable is used to indicate initial
  64:.\Generated_Source\PSoC4/UART_1.c **** *  configuration of this component. The variable is initialized to zero (0u)
  65:.\Generated_Source\PSoC4/UART_1.c **** *  and set to one (1u) the first time UART_Start() is called. This allows for
  66:.\Generated_Source\PSoC4/UART_1.c **** *  component initialization without re-initialization in all subsequent calls
  67:.\Generated_Source\PSoC4/UART_1.c **** *  to the UART_1_Start() routine.
  68:.\Generated_Source\PSoC4/UART_1.c **** *
  69:.\Generated_Source\PSoC4/UART_1.c **** * Reentrant:
  70:.\Generated_Source\PSoC4/UART_1.c **** *  No.
  71:.\Generated_Source\PSoC4/UART_1.c **** *
  72:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
  73:.\Generated_Source\PSoC4/UART_1.c **** void UART_1_Start(void) 
  74:.\Generated_Source\PSoC4/UART_1.c **** {
  32              		.loc 1 74 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 00AF     		add	r7, sp, #0
  40              	.LCFI1:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 3


  41              		.cfi_def_cfa_register 7
  75:.\Generated_Source\PSoC4/UART_1.c ****     /* If not Initialized then initialize all required hardware and software */
  76:.\Generated_Source\PSoC4/UART_1.c ****     if(UART_1_initVar == 0u)
  42              		.loc 1 76 0
  43 0004 064B     		ldr	r3, .L3
  44 0006 1B78     		ldrb	r3, [r3]
  45 0008 002B     		cmp	r3, #0
  46 000a 04D1     		bne	.L2
  77:.\Generated_Source\PSoC4/UART_1.c ****     {
  78:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_Init();
  47              		.loc 1 78 0
  48 000c FFF7FEFF 		bl	UART_1_Init
  79:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_initVar = 1u;
  49              		.loc 1 79 0
  50 0010 034B     		ldr	r3, .L3
  51 0012 0122     		mov	r2, #1
  52 0014 1A70     		strb	r2, [r3]
  53              	.L2:
  80:.\Generated_Source\PSoC4/UART_1.c ****     }
  81:.\Generated_Source\PSoC4/UART_1.c ****     UART_1_Enable();
  54              		.loc 1 81 0
  55 0016 FFF7FEFF 		bl	UART_1_Enable
  82:.\Generated_Source\PSoC4/UART_1.c **** }
  56              		.loc 1 82 0
  57 001a BD46     		mov	sp, r7
  58              		@ sp needed for prologue
  59 001c 80BD     		pop	{r7, pc}
  60              	.L4:
  61 001e C046     		.align	2
  62              	.L3:
  63 0020 00000000 		.word	UART_1_initVar
  64              		.cfi_endproc
  65              	.LFE0:
  66              		.size	UART_1_Start, .-UART_1_Start
  67              		.section	.text.UART_1_Init,"ax",%progbits
  68              		.align	2
  69              		.global	UART_1_Init
  70              		.code	16
  71              		.thumb_func
  72              		.type	UART_1_Init, %function
  73              	UART_1_Init:
  74              	.LFB1:
  83:.\Generated_Source\PSoC4/UART_1.c **** 
  84:.\Generated_Source\PSoC4/UART_1.c **** 
  85:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
  86:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Init
  87:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
  88:.\Generated_Source\PSoC4/UART_1.c **** *
  89:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
  90:.\Generated_Source\PSoC4/UART_1.c **** *  Initialize component's parameters to the parameters set by user in the
  91:.\Generated_Source\PSoC4/UART_1.c **** *  customizer of the component placed onto schematic. Usually called in
  92:.\Generated_Source\PSoC4/UART_1.c **** *  UART_1_Start().
  93:.\Generated_Source\PSoC4/UART_1.c **** *
  94:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
  95:.\Generated_Source\PSoC4/UART_1.c **** *  None.
  96:.\Generated_Source\PSoC4/UART_1.c **** *
  97:.\Generated_Source\PSoC4/UART_1.c **** * Return:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 4


  98:.\Generated_Source\PSoC4/UART_1.c **** *  None.
  99:.\Generated_Source\PSoC4/UART_1.c **** *
 100:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 101:.\Generated_Source\PSoC4/UART_1.c **** void UART_1_Init(void) 
 102:.\Generated_Source\PSoC4/UART_1.c **** {
  75              		.loc 1 102 0
  76              		.cfi_startproc
  77 0000 80B5     		push	{r7, lr}
  78              	.LCFI2:
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 7, -8
  81              		.cfi_offset 14, -4
  82 0002 00AF     		add	r7, sp, #0
  83              	.LCFI3:
  84              		.cfi_def_cfa_register 7
 103:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 104:.\Generated_Source\PSoC4/UART_1.c **** 
 105:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_RX_INTERRUPT_ENABLED && (UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH))
 106:.\Generated_Source\PSoC4/UART_1.c ****             /* Set the RX Interrupt. */
 107:.\Generated_Source\PSoC4/UART_1.c ****             (void)CyIntSetVector(UART_1_RX_VECT_NUM, &UART_1_RXISR);
 108:.\Generated_Source\PSoC4/UART_1.c ****             CyIntSetPriority(UART_1_RX_VECT_NUM, UART_1_RX_PRIOR_NUM);
 109:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_RX_INTERRUPT_ENABLED */
 110:.\Generated_Source\PSoC4/UART_1.c **** 
 111:.\Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_RXHW_ADDRESS_ENABLED)
 112:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_SetRxAddressMode(UART_1_RXAddressMode);
 113:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_SetRxAddress1(UART_1_RXHWADDRESS1);
 114:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_SetRxAddress2(UART_1_RXHWADDRESS2);
 115:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 116:.\Generated_Source\PSoC4/UART_1.c **** 
 117:.\Generated_Source\PSoC4/UART_1.c ****         /* Init Count7 period */
 118:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXBITCTR_PERIOD_REG = UART_1_RXBITCTR_INIT;
  85              		.loc 1 118 0
  86 0004 084B     		ldr	r3, .L6
  87 0006 7222     		mov	r2, #114
  88 0008 1A70     		strb	r2, [r3]
 119:.\Generated_Source\PSoC4/UART_1.c ****         /* Configure the Initial RX interrupt mask */
 120:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = UART_1_INIT_RX_INTERRUPTS_MASK;
  89              		.loc 1 120 0
  90 000a 084B     		ldr	r3, .L6+4
  91 000c 2022     		mov	r2, #32
  92 000e 1A70     		strb	r2, [r3]
 121:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 122:.\Generated_Source\PSoC4/UART_1.c **** 
 123:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_TX_ENABLED)
 124:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_TX_INTERRUPT_ENABLED && (UART_1_TXBUFFERSIZE > UART_1_FIFO_LENGTH))
 125:.\Generated_Source\PSoC4/UART_1.c ****             /* Set the TX Interrupt. */
 126:.\Generated_Source\PSoC4/UART_1.c ****             (void)CyIntSetVector(UART_1_TX_VECT_NUM, &UART_1_TXISR);
 127:.\Generated_Source\PSoC4/UART_1.c ****             CyIntSetPriority(UART_1_TX_VECT_NUM, UART_1_TX_PRIOR_NUM);
 128:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_TX_INTERRUPT_ENABLED */
 129:.\Generated_Source\PSoC4/UART_1.c **** 
 130:.\Generated_Source\PSoC4/UART_1.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 131:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_TXCLKGEN_DP)
 132:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCLKGEN_CTR_REG = UART_1_BIT_CENTER;
  93              		.loc 1 132 0
  94 0010 074B     		ldr	r3, .L6+8
  95 0012 0722     		mov	r2, #7
  96 0014 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 5


 133:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCLKTX_COMPLETE_REG = (UART_1_NUMBER_OF_DATA_BITS +
  97              		.loc 1 133 0
  98 0016 074B     		ldr	r3, .L6+12
  99 0018 4822     		mov	r2, #72
 100 001a 1A70     		strb	r2, [r3]
 134:.\Generated_Source\PSoC4/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_COUNT;
 135:.\Generated_Source\PSoC4/UART_1.c ****         #else
 136:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCTR_PERIOD_REG = ((UART_1_NUMBER_OF_DATA_BITS +
 137:.\Generated_Source\PSoC4/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_8) - 1u;
 138:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 139:.\Generated_Source\PSoC4/UART_1.c **** 
 140:.\Generated_Source\PSoC4/UART_1.c ****         /* Configure the Initial TX interrupt mask */
 141:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_TX_INTERRUPT_ENABLED && (UART_1_TXBUFFERSIZE > UART_1_FIFO_LENGTH))
 142:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_TX_STS_FIFO_EMPTY;
 143:.\Generated_Source\PSoC4/UART_1.c ****         #else
 144:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_INIT_TX_INTERRUPTS_MASK;
 101              		.loc 1 144 0
 102 001c 064B     		ldr	r3, .L6+16
 103 001e 0022     		mov	r2, #0
 104 0020 1A70     		strb	r2, [r3]
 145:.\Generated_Source\PSoC4/UART_1.c ****         #endif /*End UART_1_TX_INTERRUPT_ENABLED*/
 146:.\Generated_Source\PSoC4/UART_1.c **** 
 147:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_TX_ENABLED */
 148:.\Generated_Source\PSoC4/UART_1.c **** 
 149:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 150:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_WriteControlRegister( \
 151:.\Generated_Source\PSoC4/UART_1.c ****             (UART_1_ReadControlRegister() & (uint8)~UART_1_CTRL_PARITY_TYPE_MASK) | \
 152:.\Generated_Source\PSoC4/UART_1.c ****             (uint8)(UART_1_PARITY_TYPE << UART_1_CTRL_PARITY_TYPE0_SHIFT) );
 153:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_PARITY_TYPE_SW */
 154:.\Generated_Source\PSoC4/UART_1.c **** }
 105              		.loc 1 154 0
 106 0022 BD46     		mov	sp, r7
 107              		@ sp needed for prologue
 108 0024 80BD     		pop	{r7, pc}
 109              	.L7:
 110 0026 C046     		.align	2
 111              	.L6:
 112 0028 82000F40 		.word	1074724994
 113 002c 80000F40 		.word	1074724992
 114 0030 22000F40 		.word	1074724898
 115 0034 32000F40 		.word	1074724914
 116 0038 83000F40 		.word	1074724995
 117              		.cfi_endproc
 118              	.LFE1:
 119              		.size	UART_1_Init, .-UART_1_Init
 120              		.section	.text.UART_1_Enable,"ax",%progbits
 121              		.align	2
 122              		.global	UART_1_Enable
 123              		.code	16
 124              		.thumb_func
 125              		.type	UART_1_Enable, %function
 126              	UART_1_Enable:
 127              	.LFB2:
 155:.\Generated_Source\PSoC4/UART_1.c **** 
 156:.\Generated_Source\PSoC4/UART_1.c **** 
 157:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 158:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Enable
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 6


 159:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 160:.\Generated_Source\PSoC4/UART_1.c **** *
 161:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
 162:.\Generated_Source\PSoC4/UART_1.c **** *  Enables the UART block operation
 163:.\Generated_Source\PSoC4/UART_1.c **** *
 164:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
 165:.\Generated_Source\PSoC4/UART_1.c **** *  None.
 166:.\Generated_Source\PSoC4/UART_1.c **** *
 167:.\Generated_Source\PSoC4/UART_1.c **** * Return:
 168:.\Generated_Source\PSoC4/UART_1.c **** *  None.
 169:.\Generated_Source\PSoC4/UART_1.c **** *
 170:.\Generated_Source\PSoC4/UART_1.c **** * Global Variables:
 171:.\Generated_Source\PSoC4/UART_1.c **** *  UART_1_rxAddressDetected - set to initial state (0).
 172:.\Generated_Source\PSoC4/UART_1.c **** *
 173:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 174:.\Generated_Source\PSoC4/UART_1.c **** void UART_1_Enable(void) 
 175:.\Generated_Source\PSoC4/UART_1.c **** {
 128              		.loc 1 175 0
 129              		.cfi_startproc
 130 0000 90B5     		push	{r4, r7, lr}
 131              	.LCFI4:
 132              		.cfi_def_cfa_offset 12
 133              		.cfi_offset 4, -12
 134              		.cfi_offset 7, -8
 135              		.cfi_offset 14, -4
 136 0002 83B0     		sub	sp, sp, #12
 137              	.LCFI5:
 138              		.cfi_def_cfa_offset 24
 139 0004 00AF     		add	r7, sp, #0
 140              	.LCFI6:
 141              		.cfi_def_cfa_register 7
 176:.\Generated_Source\PSoC4/UART_1.c ****     uint8 enableInterrupts;
 177:.\Generated_Source\PSoC4/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
 142              		.loc 1 177 0
 143 0006 FC1D     		add	r4, r7, #7
 144 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 145 000c 031C     		mov	r3, r0
 146 000e 2370     		strb	r3, [r4]
 178:.\Generated_Source\PSoC4/UART_1.c **** 
 179:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 180:.\Generated_Source\PSoC4/UART_1.c ****         /*RX Counter (Count7) Enable */
 181:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
 147              		.loc 1 181 0
 148 0010 104B     		ldr	r3, .L9
 149 0012 104A     		ldr	r2, .L9
 150 0014 1278     		ldrb	r2, [r2]
 151 0016 D2B2     		uxtb	r2, r2
 152 0018 2021     		mov	r1, #32
 153 001a 0A43     		orr	r2, r1
 154 001c D2B2     		uxtb	r2, r2
 155 001e 1A70     		strb	r2, [r3]
 182:.\Generated_Source\PSoC4/UART_1.c ****         /* Enable the RX Interrupt. */
 183:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  |= UART_1_INT_ENABLE;
 156              		.loc 1 183 0
 157 0020 0D4B     		ldr	r3, .L9+4
 158 0022 0D4A     		ldr	r2, .L9+4
 159 0024 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 7


 160 0026 D2B2     		uxtb	r2, r2
 161 0028 1021     		mov	r1, #16
 162 002a 0A43     		orr	r2, r1
 163 002c D2B2     		uxtb	r2, r2
 164 002e 1A70     		strb	r2, [r3]
 184:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_RX_INTERRUPT_ENABLED && (UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH))
 185:.\Generated_Source\PSoC4/UART_1.c ****             CyIntEnable(UART_1_RX_VECT_NUM);
 186:.\Generated_Source\PSoC4/UART_1.c ****             #if (UART_1_RXHW_ADDRESS_ENABLED)
 187:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_rxAddressDetected = 0u;
 188:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 189:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_RX_INTERRUPT_ENABLED */
 190:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 191:.\Generated_Source\PSoC4/UART_1.c **** 
 192:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_TX_ENABLED)
 193:.\Generated_Source\PSoC4/UART_1.c ****         /*TX Counter (DP/Count7) Enable */
 194:.\Generated_Source\PSoC4/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 195:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
 196:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 197:.\Generated_Source\PSoC4/UART_1.c ****         /* Enable the TX Interrupt. */
 198:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG |= UART_1_INT_ENABLE;
 165              		.loc 1 198 0
 166 0030 0A4B     		ldr	r3, .L9+8
 167 0032 0A4A     		ldr	r2, .L9+8
 168 0034 1278     		ldrb	r2, [r2]
 169 0036 D2B2     		uxtb	r2, r2
 170 0038 1021     		mov	r1, #16
 171 003a 0A43     		orr	r2, r1
 172 003c D2B2     		uxtb	r2, r2
 173 003e 1A70     		strb	r2, [r3]
 199:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_TX_INTERRUPT_ENABLED && (UART_1_TXBUFFERSIZE > UART_1_FIFO_LENGTH))
 200:.\Generated_Source\PSoC4/UART_1.c ****             CyIntEnable(UART_1_TX_VECT_NUM);
 201:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_TX_INTERRUPT_ENABLED*/
 202:.\Generated_Source\PSoC4/UART_1.c ****      #endif /* End UART_1_TX_ENABLED */
 203:.\Generated_Source\PSoC4/UART_1.c **** 
 204:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_INTERNAL_CLOCK_USED)
 205:.\Generated_Source\PSoC4/UART_1.c ****         /* Enable the clock. */
 206:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_IntClock_Start();
 174              		.loc 1 206 0
 175 0040 FFF7FEFF 		bl	UART_1_IntClock_Start
 207:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_INTERNAL_CLOCK_USED */
 208:.\Generated_Source\PSoC4/UART_1.c **** 
 209:.\Generated_Source\PSoC4/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
 176              		.loc 1 209 0
 177 0044 FB1D     		add	r3, r7, #7
 178 0046 1B78     		ldrb	r3, [r3]
 179 0048 181C     		mov	r0, r3
 180 004a FFF7FEFF 		bl	CyExitCriticalSection
 210:.\Generated_Source\PSoC4/UART_1.c **** }
 181              		.loc 1 210 0
 182 004e BD46     		mov	sp, r7
 183 0050 03B0     		add	sp, sp, #12
 184              		@ sp needed for prologue
 185 0052 90BD     		pop	{r4, r7, pc}
 186              	.L10:
 187              		.align	2
 188              	.L9:
 189 0054 92000F40 		.word	1074725010
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 8


 190 0058 90000F40 		.word	1074725008
 191 005c 93000F40 		.word	1074725011
 192              		.cfi_endproc
 193              	.LFE2:
 194              		.size	UART_1_Enable, .-UART_1_Enable
 195              		.section	.text.UART_1_Stop,"ax",%progbits
 196              		.align	2
 197              		.global	UART_1_Stop
 198              		.code	16
 199              		.thumb_func
 200              		.type	UART_1_Stop, %function
 201              	UART_1_Stop:
 202              	.LFB3:
 211:.\Generated_Source\PSoC4/UART_1.c **** 
 212:.\Generated_Source\PSoC4/UART_1.c **** 
 213:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 214:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Stop
 215:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 216:.\Generated_Source\PSoC4/UART_1.c **** *
 217:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
 218:.\Generated_Source\PSoC4/UART_1.c **** *  Disable the UART component
 219:.\Generated_Source\PSoC4/UART_1.c **** *
 220:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
 221:.\Generated_Source\PSoC4/UART_1.c **** *  None.
 222:.\Generated_Source\PSoC4/UART_1.c **** *
 223:.\Generated_Source\PSoC4/UART_1.c **** * Return:
 224:.\Generated_Source\PSoC4/UART_1.c **** *  None.
 225:.\Generated_Source\PSoC4/UART_1.c **** *
 226:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 227:.\Generated_Source\PSoC4/UART_1.c **** void UART_1_Stop(void) 
 228:.\Generated_Source\PSoC4/UART_1.c **** {
 203              		.loc 1 228 0
 204              		.cfi_startproc
 205 0000 90B5     		push	{r4, r7, lr}
 206              	.LCFI7:
 207              		.cfi_def_cfa_offset 12
 208              		.cfi_offset 4, -12
 209              		.cfi_offset 7, -8
 210              		.cfi_offset 14, -4
 211 0002 83B0     		sub	sp, sp, #12
 212              	.LCFI8:
 213              		.cfi_def_cfa_offset 24
 214 0004 00AF     		add	r7, sp, #0
 215              	.LCFI9:
 216              		.cfi_def_cfa_register 7
 229:.\Generated_Source\PSoC4/UART_1.c ****     uint8 enableInterrupts;
 230:.\Generated_Source\PSoC4/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
 217              		.loc 1 230 0
 218 0006 FC1D     		add	r4, r7, #7
 219 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 220 000c 031C     		mov	r3, r0
 221 000e 2370     		strb	r3, [r4]
 231:.\Generated_Source\PSoC4/UART_1.c **** 
 232:.\Generated_Source\PSoC4/UART_1.c ****     /* Write Bit Counter Disable */
 233:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 234:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG &= (uint8)~UART_1_CNTR_ENABLE;
 222              		.loc 1 234 0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 9


 223 0010 104B     		ldr	r3, .L12
 224 0012 104A     		ldr	r2, .L12
 225 0014 1278     		ldrb	r2, [r2]
 226 0016 D2B2     		uxtb	r2, r2
 227 0018 2021     		mov	r1, #32
 228 001a 8A43     		bic	r2, r1
 229 001c D2B2     		uxtb	r2, r2
 230 001e 1A70     		strb	r2, [r3]
 235:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_RX_ENABLED */
 236:.\Generated_Source\PSoC4/UART_1.c **** 
 237:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_TX_ENABLED)
 238:.\Generated_Source\PSoC4/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 239:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG &= (uint8)~UART_1_CNTR_ENABLE;
 240:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 241:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* UART_1_TX_ENABLED */
 242:.\Generated_Source\PSoC4/UART_1.c **** 
 243:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_INTERNAL_CLOCK_USED)
 244:.\Generated_Source\PSoC4/UART_1.c ****         /* Disable the clock. */
 245:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_IntClock_Stop();
 231              		.loc 1 245 0
 232 0020 FFF7FEFF 		bl	UART_1_IntClock_Stop
 246:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_INTERNAL_CLOCK_USED */
 247:.\Generated_Source\PSoC4/UART_1.c **** 
 248:.\Generated_Source\PSoC4/UART_1.c ****     /* Disable internal interrupt component */
 249:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 250:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  &= (uint8)~UART_1_INT_ENABLE;
 233              		.loc 1 250 0
 234 0024 0C4B     		ldr	r3, .L12+4
 235 0026 0C4A     		ldr	r2, .L12+4
 236 0028 1278     		ldrb	r2, [r2]
 237 002a D2B2     		uxtb	r2, r2
 238 002c 1021     		mov	r1, #16
 239 002e 8A43     		bic	r2, r1
 240 0030 D2B2     		uxtb	r2, r2
 241 0032 1A70     		strb	r2, [r3]
 251:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_RX_INTERRUPT_ENABLED && (UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH))
 252:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_DisableRxInt();
 253:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_RX_INTERRUPT_ENABLED */
 254:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_RX_ENABLED */
 255:.\Generated_Source\PSoC4/UART_1.c **** 
 256:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_TX_ENABLED)
 257:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG &= (uint8)~UART_1_INT_ENABLE;
 242              		.loc 1 257 0
 243 0034 094B     		ldr	r3, .L12+8
 244 0036 094A     		ldr	r2, .L12+8
 245 0038 1278     		ldrb	r2, [r2]
 246 003a D2B2     		uxtb	r2, r2
 247 003c 1021     		mov	r1, #16
 248 003e 8A43     		bic	r2, r1
 249 0040 D2B2     		uxtb	r2, r2
 250 0042 1A70     		strb	r2, [r3]
 258:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_TX_INTERRUPT_ENABLED && (UART_1_TXBUFFERSIZE > UART_1_FIFO_LENGTH))
 259:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_DisableTxInt();
 260:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_TX_INTERRUPT_ENABLED */
 261:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_TX_ENABLED */
 262:.\Generated_Source\PSoC4/UART_1.c **** 
 263:.\Generated_Source\PSoC4/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 10


 251              		.loc 1 263 0
 252 0044 FB1D     		add	r3, r7, #7
 253 0046 1B78     		ldrb	r3, [r3]
 254 0048 181C     		mov	r0, r3
 255 004a FFF7FEFF 		bl	CyExitCriticalSection
 264:.\Generated_Source\PSoC4/UART_1.c **** }
 256              		.loc 1 264 0
 257 004e BD46     		mov	sp, r7
 258 0050 03B0     		add	sp, sp, #12
 259              		@ sp needed for prologue
 260 0052 90BD     		pop	{r4, r7, pc}
 261              	.L13:
 262              		.align	2
 263              	.L12:
 264 0054 92000F40 		.word	1074725010
 265 0058 90000F40 		.word	1074725008
 266 005c 93000F40 		.word	1074725011
 267              		.cfi_endproc
 268              	.LFE3:
 269              		.size	UART_1_Stop, .-UART_1_Stop
 270              		.section	.text.UART_1_ReadControlRegister,"ax",%progbits
 271              		.align	2
 272              		.global	UART_1_ReadControlRegister
 273              		.code	16
 274              		.thumb_func
 275              		.type	UART_1_ReadControlRegister, %function
 276              	UART_1_ReadControlRegister:
 277              	.LFB4:
 265:.\Generated_Source\PSoC4/UART_1.c **** 
 266:.\Generated_Source\PSoC4/UART_1.c **** 
 267:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 268:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_ReadControlRegister
 269:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 270:.\Generated_Source\PSoC4/UART_1.c **** *
 271:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
 272:.\Generated_Source\PSoC4/UART_1.c **** *  Read the current state of the control register
 273:.\Generated_Source\PSoC4/UART_1.c **** *
 274:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
 275:.\Generated_Source\PSoC4/UART_1.c **** *  None.
 276:.\Generated_Source\PSoC4/UART_1.c **** *
 277:.\Generated_Source\PSoC4/UART_1.c **** * Return:
 278:.\Generated_Source\PSoC4/UART_1.c **** *  Current state of the control register.
 279:.\Generated_Source\PSoC4/UART_1.c **** *
 280:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 281:.\Generated_Source\PSoC4/UART_1.c **** uint8 UART_1_ReadControlRegister(void) 
 282:.\Generated_Source\PSoC4/UART_1.c **** {
 278              		.loc 1 282 0
 279              		.cfi_startproc
 280 0000 80B5     		push	{r7, lr}
 281              	.LCFI10:
 282              		.cfi_def_cfa_offset 8
 283              		.cfi_offset 7, -8
 284              		.cfi_offset 14, -4
 285 0002 00AF     		add	r7, sp, #0
 286              	.LCFI11:
 287              		.cfi_def_cfa_register 7
 283:.\Generated_Source\PSoC4/UART_1.c ****     #if( UART_1_CONTROL_REG_REMOVED )
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 11


 284:.\Generated_Source\PSoC4/UART_1.c ****         return(0u);
 288              		.loc 1 284 0
 289 0004 0023     		mov	r3, #0
 285:.\Generated_Source\PSoC4/UART_1.c ****     #else
 286:.\Generated_Source\PSoC4/UART_1.c ****         return(UART_1_CONTROL_REG);
 287:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_CONTROL_REG_REMOVED */
 288:.\Generated_Source\PSoC4/UART_1.c **** }
 290              		.loc 1 288 0
 291 0006 181C     		mov	r0, r3
 292 0008 BD46     		mov	sp, r7
 293              		@ sp needed for prologue
 294 000a 80BD     		pop	{r7, pc}
 295              		.cfi_endproc
 296              	.LFE4:
 297              		.size	UART_1_ReadControlRegister, .-UART_1_ReadControlRegister
 298              		.section	.text.UART_1_WriteControlRegister,"ax",%progbits
 299              		.align	2
 300              		.global	UART_1_WriteControlRegister
 301              		.code	16
 302              		.thumb_func
 303              		.type	UART_1_WriteControlRegister, %function
 304              	UART_1_WriteControlRegister:
 305              	.LFB5:
 289:.\Generated_Source\PSoC4/UART_1.c **** 
 290:.\Generated_Source\PSoC4/UART_1.c **** 
 291:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 292:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_WriteControlRegister
 293:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 294:.\Generated_Source\PSoC4/UART_1.c **** *
 295:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
 296:.\Generated_Source\PSoC4/UART_1.c **** *  Writes an 8-bit value into the control register
 297:.\Generated_Source\PSoC4/UART_1.c **** *
 298:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
 299:.\Generated_Source\PSoC4/UART_1.c **** *  control:  control register value
 300:.\Generated_Source\PSoC4/UART_1.c **** *
 301:.\Generated_Source\PSoC4/UART_1.c **** * Return:
 302:.\Generated_Source\PSoC4/UART_1.c **** *  None.
 303:.\Generated_Source\PSoC4/UART_1.c **** *
 304:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 305:.\Generated_Source\PSoC4/UART_1.c **** void  UART_1_WriteControlRegister(uint8 control) 
 306:.\Generated_Source\PSoC4/UART_1.c **** {
 306              		.loc 1 306 0
 307              		.cfi_startproc
 308 0000 80B5     		push	{r7, lr}
 309              	.LCFI12:
 310              		.cfi_def_cfa_offset 8
 311              		.cfi_offset 7, -8
 312              		.cfi_offset 14, -4
 313 0002 82B0     		sub	sp, sp, #8
 314              	.LCFI13:
 315              		.cfi_def_cfa_offset 16
 316 0004 00AF     		add	r7, sp, #0
 317              	.LCFI14:
 318              		.cfi_def_cfa_register 7
 319 0006 021C     		mov	r2, r0
 320 0008 FB1D     		add	r3, r7, #7
 321 000a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 12


 307:.\Generated_Source\PSoC4/UART_1.c ****     #if( UART_1_CONTROL_REG_REMOVED )
 308:.\Generated_Source\PSoC4/UART_1.c ****         if(control != 0u) { }      /* release compiler warning */
 309:.\Generated_Source\PSoC4/UART_1.c ****     #else
 310:.\Generated_Source\PSoC4/UART_1.c ****        UART_1_CONTROL_REG = control;
 311:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_CONTROL_REG_REMOVED */
 312:.\Generated_Source\PSoC4/UART_1.c **** }
 322              		.loc 1 312 0
 323 000c BD46     		mov	sp, r7
 324 000e 02B0     		add	sp, sp, #8
 325              		@ sp needed for prologue
 326 0010 80BD     		pop	{r7, pc}
 327              		.cfi_endproc
 328              	.LFE5:
 329              		.size	UART_1_WriteControlRegister, .-UART_1_WriteControlRegister
 330 0012 C046     		.section	.text.UART_1_SetRxInterruptMode,"ax",%progbits
 331              		.align	2
 332              		.global	UART_1_SetRxInterruptMode
 333              		.code	16
 334              		.thumb_func
 335              		.type	UART_1_SetRxInterruptMode, %function
 336              	UART_1_SetRxInterruptMode:
 337              	.LFB6:
 313:.\Generated_Source\PSoC4/UART_1.c **** 
 314:.\Generated_Source\PSoC4/UART_1.c **** 
 315:.\Generated_Source\PSoC4/UART_1.c **** #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 316:.\Generated_Source\PSoC4/UART_1.c **** 
 317:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_RX_INTERRUPT_ENABLED)
 318:.\Generated_Source\PSoC4/UART_1.c **** 
 319:.\Generated_Source\PSoC4/UART_1.c ****         /*******************************************************************************
 320:.\Generated_Source\PSoC4/UART_1.c ****         * Function Name: UART_1_EnableRxInt
 321:.\Generated_Source\PSoC4/UART_1.c ****         ********************************************************************************
 322:.\Generated_Source\PSoC4/UART_1.c ****         *
 323:.\Generated_Source\PSoC4/UART_1.c ****         * Summary:
 324:.\Generated_Source\PSoC4/UART_1.c ****         *  Enable RX interrupt generation
 325:.\Generated_Source\PSoC4/UART_1.c ****         *
 326:.\Generated_Source\PSoC4/UART_1.c ****         * Parameters:
 327:.\Generated_Source\PSoC4/UART_1.c ****         *  None.
 328:.\Generated_Source\PSoC4/UART_1.c ****         *
 329:.\Generated_Source\PSoC4/UART_1.c ****         * Return:
 330:.\Generated_Source\PSoC4/UART_1.c ****         *  None.
 331:.\Generated_Source\PSoC4/UART_1.c ****         *
 332:.\Generated_Source\PSoC4/UART_1.c ****         * Theory:
 333:.\Generated_Source\PSoC4/UART_1.c ****         *  Enable the interrupt output -or- the interrupt component itself
 334:.\Generated_Source\PSoC4/UART_1.c ****         *
 335:.\Generated_Source\PSoC4/UART_1.c ****         *******************************************************************************/
 336:.\Generated_Source\PSoC4/UART_1.c ****         void UART_1_EnableRxInt(void) 
 337:.\Generated_Source\PSoC4/UART_1.c ****         {
 338:.\Generated_Source\PSoC4/UART_1.c ****             CyIntEnable(UART_1_RX_VECT_NUM);
 339:.\Generated_Source\PSoC4/UART_1.c ****         }
 340:.\Generated_Source\PSoC4/UART_1.c **** 
 341:.\Generated_Source\PSoC4/UART_1.c **** 
 342:.\Generated_Source\PSoC4/UART_1.c ****         /*******************************************************************************
 343:.\Generated_Source\PSoC4/UART_1.c ****         * Function Name: UART_1_DisableRxInt
 344:.\Generated_Source\PSoC4/UART_1.c ****         ********************************************************************************
 345:.\Generated_Source\PSoC4/UART_1.c ****         *
 346:.\Generated_Source\PSoC4/UART_1.c ****         * Summary:
 347:.\Generated_Source\PSoC4/UART_1.c ****         *  Disable RX interrupt generation
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 13


 348:.\Generated_Source\PSoC4/UART_1.c ****         *
 349:.\Generated_Source\PSoC4/UART_1.c ****         * Parameters:
 350:.\Generated_Source\PSoC4/UART_1.c ****         *  None.
 351:.\Generated_Source\PSoC4/UART_1.c ****         *
 352:.\Generated_Source\PSoC4/UART_1.c ****         * Return:
 353:.\Generated_Source\PSoC4/UART_1.c ****         *  None.
 354:.\Generated_Source\PSoC4/UART_1.c ****         *
 355:.\Generated_Source\PSoC4/UART_1.c ****         * Theory:
 356:.\Generated_Source\PSoC4/UART_1.c ****         *  Disable the interrupt output -or- the interrupt component itself
 357:.\Generated_Source\PSoC4/UART_1.c ****         *
 358:.\Generated_Source\PSoC4/UART_1.c ****         *******************************************************************************/
 359:.\Generated_Source\PSoC4/UART_1.c ****         void UART_1_DisableRxInt(void) 
 360:.\Generated_Source\PSoC4/UART_1.c ****         {
 361:.\Generated_Source\PSoC4/UART_1.c ****             CyIntDisable(UART_1_RX_VECT_NUM);
 362:.\Generated_Source\PSoC4/UART_1.c ****         }
 363:.\Generated_Source\PSoC4/UART_1.c **** 
 364:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* UART_1_RX_INTERRUPT_ENABLED */
 365:.\Generated_Source\PSoC4/UART_1.c **** 
 366:.\Generated_Source\PSoC4/UART_1.c **** 
 367:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 368:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetRxInterruptMode
 369:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 370:.\Generated_Source\PSoC4/UART_1.c ****     *
 371:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 372:.\Generated_Source\PSoC4/UART_1.c ****     *  Configure which status bits trigger an interrupt event
 373:.\Generated_Source\PSoC4/UART_1.c ****     *
 374:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 375:.\Generated_Source\PSoC4/UART_1.c ****     *  IntSrc:  An or'd combination of the desired status bit masks (defined in
 376:.\Generated_Source\PSoC4/UART_1.c ****     *           the header file)
 377:.\Generated_Source\PSoC4/UART_1.c ****     *
 378:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 379:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 380:.\Generated_Source\PSoC4/UART_1.c ****     *
 381:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
 382:.\Generated_Source\PSoC4/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 383:.\Generated_Source\PSoC4/UART_1.c ****     *
 384:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 385:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetRxInterruptMode(uint8 intSrc) 
 386:.\Generated_Source\PSoC4/UART_1.c ****     {
 338              		.loc 1 386 0
 339              		.cfi_startproc
 340 0000 80B5     		push	{r7, lr}
 341              	.LCFI15:
 342              		.cfi_def_cfa_offset 8
 343              		.cfi_offset 7, -8
 344              		.cfi_offset 14, -4
 345 0002 82B0     		sub	sp, sp, #8
 346              	.LCFI16:
 347              		.cfi_def_cfa_offset 16
 348 0004 00AF     		add	r7, sp, #0
 349              	.LCFI17:
 350              		.cfi_def_cfa_register 7
 351 0006 021C     		mov	r2, r0
 352 0008 FB1D     		add	r3, r7, #7
 353 000a 1A70     		strb	r2, [r3]
 387:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = intSrc;
 354              		.loc 1 387 0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 14


 355 000c 034B     		ldr	r3, .L18
 356 000e FA1D     		add	r2, r7, #7
 357 0010 1278     		ldrb	r2, [r2]
 358 0012 1A70     		strb	r2, [r3]
 388:.\Generated_Source\PSoC4/UART_1.c ****     }
 359              		.loc 1 388 0
 360 0014 BD46     		mov	sp, r7
 361 0016 02B0     		add	sp, sp, #8
 362              		@ sp needed for prologue
 363 0018 80BD     		pop	{r7, pc}
 364              	.L19:
 365 001a C046     		.align	2
 366              	.L18:
 367 001c 80000F40 		.word	1074724992
 368              		.cfi_endproc
 369              	.LFE6:
 370              		.size	UART_1_SetRxInterruptMode, .-UART_1_SetRxInterruptMode
 371              		.section	.text.UART_1_ReadRxData,"ax",%progbits
 372              		.align	2
 373              		.global	UART_1_ReadRxData
 374              		.code	16
 375              		.thumb_func
 376              		.type	UART_1_ReadRxData, %function
 377              	UART_1_ReadRxData:
 378              	.LFB7:
 389:.\Generated_Source\PSoC4/UART_1.c **** 
 390:.\Generated_Source\PSoC4/UART_1.c **** 
 391:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 392:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ReadRxData
 393:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 394:.\Generated_Source\PSoC4/UART_1.c ****     *
 395:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 396:.\Generated_Source\PSoC4/UART_1.c ****     *  Returns data in RX Data register without checking status register to
 397:.\Generated_Source\PSoC4/UART_1.c ****     *  determine if data is valid
 398:.\Generated_Source\PSoC4/UART_1.c ****     *
 399:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 400:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 401:.\Generated_Source\PSoC4/UART_1.c ****     *
 402:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 403:.\Generated_Source\PSoC4/UART_1.c ****     *  Received data from RX register
 404:.\Generated_Source\PSoC4/UART_1.c ****     *
 405:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 406:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 407:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 408:.\Generated_Source\PSoC4/UART_1.c ****     *     checked to identify new data.
 409:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 410:.\Generated_Source\PSoC4/UART_1.c ****     *     incremented after each byte has been read from buffer.
 411:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferLoopDetect - creared if loop condition was detected
 412:.\Generated_Source\PSoC4/UART_1.c ****     *     in RX ISR.
 413:.\Generated_Source\PSoC4/UART_1.c ****     *
 414:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 415:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
 416:.\Generated_Source\PSoC4/UART_1.c ****     *
 417:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 418:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_ReadRxData(void) 
 419:.\Generated_Source\PSoC4/UART_1.c ****     {
 379              		.loc 1 419 0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 15


 380              		.cfi_startproc
 381 0000 80B5     		push	{r7, lr}
 382              	.LCFI18:
 383              		.cfi_def_cfa_offset 8
 384              		.cfi_offset 7, -8
 385              		.cfi_offset 14, -4
 386 0002 82B0     		sub	sp, sp, #8
 387              	.LCFI19:
 388              		.cfi_def_cfa_offset 16
 389 0004 00AF     		add	r7, sp, #0
 390              	.LCFI20:
 391              		.cfi_def_cfa_register 7
 420:.\Generated_Source\PSoC4/UART_1.c ****         uint8 rxData;
 421:.\Generated_Source\PSoC4/UART_1.c **** 
 422:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH)
 423:.\Generated_Source\PSoC4/UART_1.c ****             uint8 loc_rxBufferRead;
 424:.\Generated_Source\PSoC4/UART_1.c ****             uint8 loc_rxBufferWrite;
 425:.\Generated_Source\PSoC4/UART_1.c ****             /* Protect variables that could change on interrupt. */
 426:.\Generated_Source\PSoC4/UART_1.c ****             /* Disable Rx interrupt. */
 427:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_RX_INTERRUPT_ENABLED)
 428:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_DisableRxInt();
 429:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* UART_1_RX_INTERRUPT_ENABLED */
 430:.\Generated_Source\PSoC4/UART_1.c ****             loc_rxBufferRead = UART_1_rxBufferRead;
 431:.\Generated_Source\PSoC4/UART_1.c ****             loc_rxBufferWrite = UART_1_rxBufferWrite;
 432:.\Generated_Source\PSoC4/UART_1.c **** 
 433:.\Generated_Source\PSoC4/UART_1.c ****             if( (UART_1_rxBufferLoopDetect != 0u) || (loc_rxBufferRead != loc_rxBufferWrite) )
 434:.\Generated_Source\PSoC4/UART_1.c ****             {
 435:.\Generated_Source\PSoC4/UART_1.c ****                 rxData = UART_1_rxBuffer[loc_rxBufferRead];
 436:.\Generated_Source\PSoC4/UART_1.c ****                 loc_rxBufferRead++;
 437:.\Generated_Source\PSoC4/UART_1.c **** 
 438:.\Generated_Source\PSoC4/UART_1.c ****                 if(loc_rxBufferRead >= UART_1_RXBUFFERSIZE)
 439:.\Generated_Source\PSoC4/UART_1.c ****                 {
 440:.\Generated_Source\PSoC4/UART_1.c ****                     loc_rxBufferRead = 0u;
 441:.\Generated_Source\PSoC4/UART_1.c ****                 }
 442:.\Generated_Source\PSoC4/UART_1.c ****                 /* Update the real pointer */
 443:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_rxBufferRead = loc_rxBufferRead;
 444:.\Generated_Source\PSoC4/UART_1.c **** 
 445:.\Generated_Source\PSoC4/UART_1.c ****                 if(UART_1_rxBufferLoopDetect != 0u )
 446:.\Generated_Source\PSoC4/UART_1.c ****                 {
 447:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_rxBufferLoopDetect = 0u;
 448:.\Generated_Source\PSoC4/UART_1.c ****                     #if( (UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u) && \
 449:.\Generated_Source\PSoC4/UART_1.c ****                          (UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH) )
 450:.\Generated_Source\PSoC4/UART_1.c ****                         /* When Hardware Flow Control selected - return RX mask */
 451:.\Generated_Source\PSoC4/UART_1.c ****                         #if( UART_1_HD_ENABLED )
 452:.\Generated_Source\PSoC4/UART_1.c ****                             if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 453:.\Generated_Source\PSoC4/UART_1.c ****                             {   /* In Half duplex mode return RX mask only in RX
 454:.\Generated_Source\PSoC4/UART_1.c ****                                 *  configuration set, otherwise
 455:.\Generated_Source\PSoC4/UART_1.c ****                                 *  mask will be returned in LoadRxConfig() API.
 456:.\Generated_Source\PSoC4/UART_1.c ****                                 */
 457:.\Generated_Source\PSoC4/UART_1.c ****                                 UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 458:.\Generated_Source\PSoC4/UART_1.c ****                             }
 459:.\Generated_Source\PSoC4/UART_1.c ****                         #else
 460:.\Generated_Source\PSoC4/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 461:.\Generated_Source\PSoC4/UART_1.c ****                         #endif /* end UART_1_HD_ENABLED */
 462:.\Generated_Source\PSoC4/UART_1.c ****                     #endif /* UART_1_RX_INTERRUPT_ENABLED and Hardware flow control*/
 463:.\Generated_Source\PSoC4/UART_1.c ****                 }
 464:.\Generated_Source\PSoC4/UART_1.c ****             }
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 16


 465:.\Generated_Source\PSoC4/UART_1.c ****             else
 466:.\Generated_Source\PSoC4/UART_1.c ****             {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit*/
 467:.\Generated_Source\PSoC4/UART_1.c ****                 rxData = UART_1_RXDATA_REG;
 468:.\Generated_Source\PSoC4/UART_1.c ****             }
 469:.\Generated_Source\PSoC4/UART_1.c **** 
 470:.\Generated_Source\PSoC4/UART_1.c ****             /* Enable Rx interrupt. */
 471:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_RX_INTERRUPT_ENABLED)
 472:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_EnableRxInt();
 473:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_RX_INTERRUPT_ENABLED */
 474:.\Generated_Source\PSoC4/UART_1.c **** 
 475:.\Generated_Source\PSoC4/UART_1.c ****         #else /* UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH */
 476:.\Generated_Source\PSoC4/UART_1.c **** 
 477:.\Generated_Source\PSoC4/UART_1.c ****             /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit*/
 478:.\Generated_Source\PSoC4/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 392              		.loc 1 478 0
 393 0006 054A     		ldr	r2, .L22
 394 0008 FB1D     		add	r3, r7, #7
 395 000a 1278     		ldrb	r2, [r2]
 396 000c 1A70     		strb	r2, [r3]
 479:.\Generated_Source\PSoC4/UART_1.c **** 
 480:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH */
 481:.\Generated_Source\PSoC4/UART_1.c **** 
 482:.\Generated_Source\PSoC4/UART_1.c ****         return(rxData);
 397              		.loc 1 482 0
 398 000e FB1D     		add	r3, r7, #7
 399 0010 1B78     		ldrb	r3, [r3]
 483:.\Generated_Source\PSoC4/UART_1.c ****     }
 400              		.loc 1 483 0
 401 0012 181C     		mov	r0, r3
 402 0014 BD46     		mov	sp, r7
 403 0016 02B0     		add	sp, sp, #8
 404              		@ sp needed for prologue
 405 0018 80BD     		pop	{r7, pc}
 406              	.L23:
 407 001a C046     		.align	2
 408              	.L22:
 409 001c 41000F40 		.word	1074724929
 410              		.cfi_endproc
 411              	.LFE7:
 412              		.size	UART_1_ReadRxData, .-UART_1_ReadRxData
 413              		.section	.text.UART_1_ReadRxStatus,"ax",%progbits
 414              		.align	2
 415              		.global	UART_1_ReadRxStatus
 416              		.code	16
 417              		.thumb_func
 418              		.type	UART_1_ReadRxStatus, %function
 419              	UART_1_ReadRxStatus:
 420              	.LFB8:
 484:.\Generated_Source\PSoC4/UART_1.c **** 
 485:.\Generated_Source\PSoC4/UART_1.c **** 
 486:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 487:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ReadRxStatus
 488:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 489:.\Generated_Source\PSoC4/UART_1.c ****     *
 490:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 491:.\Generated_Source\PSoC4/UART_1.c ****     *  Read the current state of the status register
 492:.\Generated_Source\PSoC4/UART_1.c ****     *  And detect software buffer overflow.
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 17


 493:.\Generated_Source\PSoC4/UART_1.c ****     *
 494:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 495:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 496:.\Generated_Source\PSoC4/UART_1.c ****     *
 497:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 498:.\Generated_Source\PSoC4/UART_1.c ****     *  Current state of the status register.
 499:.\Generated_Source\PSoC4/UART_1.c ****     *
 500:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 501:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferOverflow - used to indicate overload condition.
 502:.\Generated_Source\PSoC4/UART_1.c ****     *   It set to one in RX interrupt when there isn?t free space in
 503:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_rxBufferRead to write new data. This condition returned
 504:.\Generated_Source\PSoC4/UART_1.c ****     *   and cleared to zero by this API as an
 505:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 506:.\Generated_Source\PSoC4/UART_1.c ****     *   bits.
 507:.\Generated_Source\PSoC4/UART_1.c ****     *
 508:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 509:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_ReadRxStatus(void) 
 510:.\Generated_Source\PSoC4/UART_1.c ****     {
 421              		.loc 1 510 0
 422              		.cfi_startproc
 423 0000 80B5     		push	{r7, lr}
 424              	.LCFI21:
 425              		.cfi_def_cfa_offset 8
 426              		.cfi_offset 7, -8
 427              		.cfi_offset 14, -4
 428 0002 82B0     		sub	sp, sp, #8
 429              	.LCFI22:
 430              		.cfi_def_cfa_offset 16
 431 0004 00AF     		add	r7, sp, #0
 432              	.LCFI23:
 433              		.cfi_def_cfa_register 7
 511:.\Generated_Source\PSoC4/UART_1.c ****         uint8 status;
 512:.\Generated_Source\PSoC4/UART_1.c **** 
 513:.\Generated_Source\PSoC4/UART_1.c ****         status = UART_1_RXSTATUS_REG & UART_1_RX_HW_MASK;
 434              		.loc 1 513 0
 435 0006 064B     		ldr	r3, .L26
 436 0008 1B78     		ldrb	r3, [r3]
 437 000a D9B2     		uxtb	r1, r3
 438 000c FB1D     		add	r3, r7, #7
 439 000e 7F22     		mov	r2, #127
 440 0010 0A40     		and	r2, r1
 441 0012 1A70     		strb	r2, [r3]
 514:.\Generated_Source\PSoC4/UART_1.c **** 
 515:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH)
 516:.\Generated_Source\PSoC4/UART_1.c ****             if( UART_1_rxBufferOverflow != 0u )
 517:.\Generated_Source\PSoC4/UART_1.c ****             {
 518:.\Generated_Source\PSoC4/UART_1.c ****                 status |= UART_1_RX_STS_SOFT_BUFF_OVER;
 519:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_rxBufferOverflow = 0u;
 520:.\Generated_Source\PSoC4/UART_1.c ****             }
 521:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* UART_1_RXBUFFERSIZE */
 522:.\Generated_Source\PSoC4/UART_1.c **** 
 523:.\Generated_Source\PSoC4/UART_1.c ****         return(status);
 442              		.loc 1 523 0
 443 0014 FB1D     		add	r3, r7, #7
 444 0016 1B78     		ldrb	r3, [r3]
 524:.\Generated_Source\PSoC4/UART_1.c ****     }
 445              		.loc 1 524 0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 18


 446 0018 181C     		mov	r0, r3
 447 001a BD46     		mov	sp, r7
 448 001c 02B0     		add	sp, sp, #8
 449              		@ sp needed for prologue
 450 001e 80BD     		pop	{r7, pc}
 451              	.L27:
 452              		.align	2
 453              	.L26:
 454 0020 60000F40 		.word	1074724960
 455              		.cfi_endproc
 456              	.LFE8:
 457              		.size	UART_1_ReadRxStatus, .-UART_1_ReadRxStatus
 458              		.section	.text.UART_1_GetChar,"ax",%progbits
 459              		.align	2
 460              		.global	UART_1_GetChar
 461              		.code	16
 462              		.thumb_func
 463              		.type	UART_1_GetChar, %function
 464              	UART_1_GetChar:
 465              	.LFB9:
 525:.\Generated_Source\PSoC4/UART_1.c **** 
 526:.\Generated_Source\PSoC4/UART_1.c **** 
 527:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 528:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_GetChar
 529:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 530:.\Generated_Source\PSoC4/UART_1.c ****     *
 531:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 532:.\Generated_Source\PSoC4/UART_1.c ****     *  Reads UART RX buffer immediately, if data is not available or an error
 533:.\Generated_Source\PSoC4/UART_1.c ****     *  condition exists, zero is returned; otherwise, character is read and
 534:.\Generated_Source\PSoC4/UART_1.c ****     *  returned.
 535:.\Generated_Source\PSoC4/UART_1.c ****     *
 536:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 537:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 538:.\Generated_Source\PSoC4/UART_1.c ****     *
 539:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 540:.\Generated_Source\PSoC4/UART_1.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 541:.\Generated_Source\PSoC4/UART_1.c ****     *  A returned zero signifies an error condition or no data available.
 542:.\Generated_Source\PSoC4/UART_1.c ****     *
 543:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 544:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 545:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 546:.\Generated_Source\PSoC4/UART_1.c ****     *     checked to identify new data.
 547:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 548:.\Generated_Source\PSoC4/UART_1.c ****     *     incremented after each byte has been read from buffer.
 549:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferLoopDetect - creared if loop condition was detected
 550:.\Generated_Source\PSoC4/UART_1.c ****     *     in RX ISR.
 551:.\Generated_Source\PSoC4/UART_1.c ****     *
 552:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 553:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
 554:.\Generated_Source\PSoC4/UART_1.c ****     *
 555:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 556:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_GetChar(void) 
 557:.\Generated_Source\PSoC4/UART_1.c ****     {
 466              		.loc 1 557 0
 467              		.cfi_startproc
 468 0000 80B5     		push	{r7, lr}
 469              	.LCFI24:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 19


 470              		.cfi_def_cfa_offset 8
 471              		.cfi_offset 7, -8
 472              		.cfi_offset 14, -4
 473 0002 82B0     		sub	sp, sp, #8
 474              	.LCFI25:
 475              		.cfi_def_cfa_offset 16
 476 0004 00AF     		add	r7, sp, #0
 477              	.LCFI26:
 478              		.cfi_def_cfa_register 7
 558:.\Generated_Source\PSoC4/UART_1.c ****         uint8 rxData = 0u;
 479              		.loc 1 558 0
 480 0006 FB1D     		add	r3, r7, #7
 481 0008 0022     		mov	r2, #0
 482 000a 1A70     		strb	r2, [r3]
 559:.\Generated_Source\PSoC4/UART_1.c ****         uint8 rxStatus;
 560:.\Generated_Source\PSoC4/UART_1.c **** 
 561:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH)
 562:.\Generated_Source\PSoC4/UART_1.c ****             uint8 loc_rxBufferRead;
 563:.\Generated_Source\PSoC4/UART_1.c ****             uint8 loc_rxBufferWrite;
 564:.\Generated_Source\PSoC4/UART_1.c ****             /* Protect variables that could change on interrupt. */
 565:.\Generated_Source\PSoC4/UART_1.c ****             /* Disable Rx interrupt. */
 566:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_RX_INTERRUPT_ENABLED)
 567:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_DisableRxInt();
 568:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* UART_1_RX_INTERRUPT_ENABLED */
 569:.\Generated_Source\PSoC4/UART_1.c ****             loc_rxBufferRead = UART_1_rxBufferRead;
 570:.\Generated_Source\PSoC4/UART_1.c ****             loc_rxBufferWrite = UART_1_rxBufferWrite;
 571:.\Generated_Source\PSoC4/UART_1.c **** 
 572:.\Generated_Source\PSoC4/UART_1.c ****             if( (UART_1_rxBufferLoopDetect != 0u) || (loc_rxBufferRead != loc_rxBufferWrite) )
 573:.\Generated_Source\PSoC4/UART_1.c ****             {
 574:.\Generated_Source\PSoC4/UART_1.c ****                 rxData = UART_1_rxBuffer[loc_rxBufferRead];
 575:.\Generated_Source\PSoC4/UART_1.c ****                 loc_rxBufferRead++;
 576:.\Generated_Source\PSoC4/UART_1.c ****                 if(loc_rxBufferRead >= UART_1_RXBUFFERSIZE)
 577:.\Generated_Source\PSoC4/UART_1.c ****                 {
 578:.\Generated_Source\PSoC4/UART_1.c ****                     loc_rxBufferRead = 0u;
 579:.\Generated_Source\PSoC4/UART_1.c ****                 }
 580:.\Generated_Source\PSoC4/UART_1.c ****                 /* Update the real pointer */
 581:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_rxBufferRead = loc_rxBufferRead;
 582:.\Generated_Source\PSoC4/UART_1.c **** 
 583:.\Generated_Source\PSoC4/UART_1.c ****                 if(UART_1_rxBufferLoopDetect > 0u )
 584:.\Generated_Source\PSoC4/UART_1.c ****                 {
 585:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_rxBufferLoopDetect = 0u;
 586:.\Generated_Source\PSoC4/UART_1.c ****                     #if( (UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u) )
 587:.\Generated_Source\PSoC4/UART_1.c ****                         /* When Hardware Flow Control selected - return RX mask */
 588:.\Generated_Source\PSoC4/UART_1.c ****                         #if( UART_1_HD_ENABLED )
 589:.\Generated_Source\PSoC4/UART_1.c ****                             if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 590:.\Generated_Source\PSoC4/UART_1.c ****                             {   /* In Half duplex mode return RX mask only if
 591:.\Generated_Source\PSoC4/UART_1.c ****                                 *  RX configuration set, otherwise
 592:.\Generated_Source\PSoC4/UART_1.c ****                                 *  mask will be returned in LoadRxConfig() API.
 593:.\Generated_Source\PSoC4/UART_1.c ****                                 */
 594:.\Generated_Source\PSoC4/UART_1.c ****                                 UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 595:.\Generated_Source\PSoC4/UART_1.c ****                             }
 596:.\Generated_Source\PSoC4/UART_1.c ****                         #else
 597:.\Generated_Source\PSoC4/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 598:.\Generated_Source\PSoC4/UART_1.c ****                         #endif /* end UART_1_HD_ENABLED */
 599:.\Generated_Source\PSoC4/UART_1.c ****                     #endif /* UART_1_RX_INTERRUPT_ENABLED and Hardware flow control*/
 600:.\Generated_Source\PSoC4/UART_1.c ****                 }
 601:.\Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 20


 602:.\Generated_Source\PSoC4/UART_1.c ****             }
 603:.\Generated_Source\PSoC4/UART_1.c ****             else
 604:.\Generated_Source\PSoC4/UART_1.c ****             {   rxStatus = UART_1_RXSTATUS_REG;
 605:.\Generated_Source\PSoC4/UART_1.c ****                 if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 606:.\Generated_Source\PSoC4/UART_1.c ****                 {   /* Read received data from FIFO*/
 607:.\Generated_Source\PSoC4/UART_1.c ****                     rxData = UART_1_RXDATA_REG;
 608:.\Generated_Source\PSoC4/UART_1.c ****                     /*Check status on error*/
 609:.\Generated_Source\PSoC4/UART_1.c ****                     if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 610:.\Generated_Source\PSoC4/UART_1.c ****                                    UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 611:.\Generated_Source\PSoC4/UART_1.c ****                     {
 612:.\Generated_Source\PSoC4/UART_1.c ****                         rxData = 0u;
 613:.\Generated_Source\PSoC4/UART_1.c ****                     }
 614:.\Generated_Source\PSoC4/UART_1.c ****                 }
 615:.\Generated_Source\PSoC4/UART_1.c ****             }
 616:.\Generated_Source\PSoC4/UART_1.c **** 
 617:.\Generated_Source\PSoC4/UART_1.c ****             /* Enable Rx interrupt. */
 618:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_RX_INTERRUPT_ENABLED)
 619:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_EnableRxInt();
 620:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* UART_1_RX_INTERRUPT_ENABLED */
 621:.\Generated_Source\PSoC4/UART_1.c **** 
 622:.\Generated_Source\PSoC4/UART_1.c ****         #else /* UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH */
 623:.\Generated_Source\PSoC4/UART_1.c **** 
 624:.\Generated_Source\PSoC4/UART_1.c ****             rxStatus =UART_1_RXSTATUS_REG;
 483              		.loc 1 624 0
 484 000c 0D4A     		ldr	r2, .L31
 485 000e BB1D     		add	r3, r7, #6
 486 0010 1278     		ldrb	r2, [r2]
 487 0012 1A70     		strb	r2, [r3]
 625:.\Generated_Source\PSoC4/UART_1.c ****             if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 488              		.loc 1 625 0
 489 0014 BB1D     		add	r3, r7, #6
 490 0016 1A78     		ldrb	r2, [r3]
 491 0018 2023     		mov	r3, #32
 492 001a 1340     		and	r3, r2
 493 001c 0BD0     		beq	.L29
 626:.\Generated_Source\PSoC4/UART_1.c ****             {   /* Read received data from FIFO*/
 627:.\Generated_Source\PSoC4/UART_1.c ****                 rxData = UART_1_RXDATA_REG;
 494              		.loc 1 627 0
 495 001e 0A4A     		ldr	r2, .L31+4
 496 0020 FB1D     		add	r3, r7, #7
 497 0022 1278     		ldrb	r2, [r2]
 498 0024 1A70     		strb	r2, [r3]
 628:.\Generated_Source\PSoC4/UART_1.c ****                 /*Check status on error*/
 629:.\Generated_Source\PSoC4/UART_1.c ****                 if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 630:.\Generated_Source\PSoC4/UART_1.c ****                                UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 499              		.loc 1 630 0
 500 0026 BB1D     		add	r3, r7, #6
 501 0028 1A78     		ldrb	r2, [r3]
 502 002a 1E23     		mov	r3, #30
 503 002c 1340     		and	r3, r2
 629:.\Generated_Source\PSoC4/UART_1.c ****                 if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 504              		.loc 1 629 0
 505 002e 02D0     		beq	.L29
 631:.\Generated_Source\PSoC4/UART_1.c ****                 {
 632:.\Generated_Source\PSoC4/UART_1.c ****                     rxData = 0u;
 506              		.loc 1 632 0
 507 0030 FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 21


 508 0032 0022     		mov	r2, #0
 509 0034 1A70     		strb	r2, [r3]
 510              	.L29:
 633:.\Generated_Source\PSoC4/UART_1.c ****                 }
 634:.\Generated_Source\PSoC4/UART_1.c ****             }
 635:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH */
 636:.\Generated_Source\PSoC4/UART_1.c **** 
 637:.\Generated_Source\PSoC4/UART_1.c ****         return(rxData);
 511              		.loc 1 637 0
 512 0036 FB1D     		add	r3, r7, #7
 513 0038 1B78     		ldrb	r3, [r3]
 638:.\Generated_Source\PSoC4/UART_1.c ****     }
 514              		.loc 1 638 0
 515 003a 181C     		mov	r0, r3
 516 003c BD46     		mov	sp, r7
 517 003e 02B0     		add	sp, sp, #8
 518              		@ sp needed for prologue
 519 0040 80BD     		pop	{r7, pc}
 520              	.L32:
 521 0042 C046     		.align	2
 522              	.L31:
 523 0044 60000F40 		.word	1074724960
 524 0048 41000F40 		.word	1074724929
 525              		.cfi_endproc
 526              	.LFE9:
 527              		.size	UART_1_GetChar, .-UART_1_GetChar
 528              		.section	.text.UART_1_GetByte,"ax",%progbits
 529              		.align	2
 530              		.global	UART_1_GetByte
 531              		.code	16
 532              		.thumb_func
 533              		.type	UART_1_GetByte, %function
 534              	UART_1_GetByte:
 535              	.LFB10:
 639:.\Generated_Source\PSoC4/UART_1.c **** 
 640:.\Generated_Source\PSoC4/UART_1.c **** 
 641:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 642:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_GetByte
 643:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 644:.\Generated_Source\PSoC4/UART_1.c ****     *
 645:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 646:.\Generated_Source\PSoC4/UART_1.c ****     *  Grab the next available byte of data from the recieve FIFO
 647:.\Generated_Source\PSoC4/UART_1.c ****     *
 648:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 649:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 650:.\Generated_Source\PSoC4/UART_1.c ****     *
 651:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 652:.\Generated_Source\PSoC4/UART_1.c ****     *  MSB contains Status Register and LSB contains UART RX data
 653:.\Generated_Source\PSoC4/UART_1.c ****     *
 654:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 655:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
 656:.\Generated_Source\PSoC4/UART_1.c ****     *
 657:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 658:.\Generated_Source\PSoC4/UART_1.c ****     uint16 UART_1_GetByte(void) 
 659:.\Generated_Source\PSoC4/UART_1.c ****     {
 536              		.loc 1 659 0
 537              		.cfi_startproc
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 22


 538 0000 98B5     		push	{r3, r4, r7, lr}
 539              	.LCFI27:
 540              		.cfi_def_cfa_offset 16
 541              		.cfi_offset 3, -16
 542              		.cfi_offset 4, -12
 543              		.cfi_offset 7, -8
 544              		.cfi_offset 14, -4
 545 0002 00AF     		add	r7, sp, #0
 546              	.LCFI28:
 547              		.cfi_def_cfa_register 7
 660:.\Generated_Source\PSoC4/UART_1.c ****         return ( ((uint16)UART_1_ReadRxStatus() << 8u) | UART_1_ReadRxData() );
 548              		.loc 1 660 0
 549 0004 FFF7FEFF 		bl	UART_1_ReadRxStatus
 550 0008 031C     		mov	r3, r0
 551 000a 1B02     		lsl	r3, r3, #8
 552 000c 9CB2     		uxth	r4, r3
 553 000e FFF7FEFF 		bl	UART_1_ReadRxData
 554 0012 031C     		mov	r3, r0
 555 0014 221C     		add	r2, r4, #0
 556 0016 1343     		orr	r3, r2
 557 0018 9BB2     		uxth	r3, r3
 558 001a 9BB2     		uxth	r3, r3
 661:.\Generated_Source\PSoC4/UART_1.c ****     }
 559              		.loc 1 661 0
 560 001c 181C     		mov	r0, r3
 561 001e BD46     		mov	sp, r7
 562              		@ sp needed for prologue
 563 0020 98BD     		pop	{r3, r4, r7, pc}
 564              		.cfi_endproc
 565              	.LFE10:
 566              		.size	UART_1_GetByte, .-UART_1_GetByte
 567 0022 C046     		.section	.text.UART_1_GetRxBufferSize,"ax",%progbits
 568              		.align	2
 569              		.global	UART_1_GetRxBufferSize
 570              		.code	16
 571              		.thumb_func
 572              		.type	UART_1_GetRxBufferSize, %function
 573              	UART_1_GetRxBufferSize:
 574              	.LFB11:
 662:.\Generated_Source\PSoC4/UART_1.c **** 
 663:.\Generated_Source\PSoC4/UART_1.c **** 
 664:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 665:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_GetRxBufferSize
 666:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 667:.\Generated_Source\PSoC4/UART_1.c ****     *
 668:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 669:.\Generated_Source\PSoC4/UART_1.c ****     *  Determine the amount of bytes left in the RX buffer and return the count in
 670:.\Generated_Source\PSoC4/UART_1.c ****     *  bytes
 671:.\Generated_Source\PSoC4/UART_1.c ****     *
 672:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 673:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 674:.\Generated_Source\PSoC4/UART_1.c ****     *
 675:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 676:.\Generated_Source\PSoC4/UART_1.c ****     *  uint8: Integer count of the number of bytes left
 677:.\Generated_Source\PSoC4/UART_1.c ****     *  in the RX buffer
 678:.\Generated_Source\PSoC4/UART_1.c ****     *
 679:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 23


 680:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferWrite - used to calculate left bytes.
 681:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferRead - used to calculate left bytes.
 682:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferLoopDetect - checked to decide left bytes amount.
 683:.\Generated_Source\PSoC4/UART_1.c ****     *
 684:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 685:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
 686:.\Generated_Source\PSoC4/UART_1.c ****     *
 687:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
 688:.\Generated_Source\PSoC4/UART_1.c ****     *  Allows the user to find out how full the RX Buffer is.
 689:.\Generated_Source\PSoC4/UART_1.c ****     *
 690:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 691:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_GetRxBufferSize(void)
 692:.\Generated_Source\PSoC4/UART_1.c ****                                                             
 693:.\Generated_Source\PSoC4/UART_1.c ****     {
 575              		.loc 1 693 0
 576              		.cfi_startproc
 577 0000 80B5     		push	{r7, lr}
 578              	.LCFI29:
 579              		.cfi_def_cfa_offset 8
 580              		.cfi_offset 7, -8
 581              		.cfi_offset 14, -4
 582 0002 82B0     		sub	sp, sp, #8
 583              	.LCFI30:
 584              		.cfi_def_cfa_offset 16
 585 0004 00AF     		add	r7, sp, #0
 586              	.LCFI31:
 587              		.cfi_def_cfa_register 7
 694:.\Generated_Source\PSoC4/UART_1.c ****         uint8 size;
 695:.\Generated_Source\PSoC4/UART_1.c **** 
 696:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH)
 697:.\Generated_Source\PSoC4/UART_1.c **** 
 698:.\Generated_Source\PSoC4/UART_1.c ****             /* Disable Rx interrupt. */
 699:.\Generated_Source\PSoC4/UART_1.c ****             /* Protect variables that could change on interrupt. */
 700:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_RX_INTERRUPT_ENABLED)
 701:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_DisableRxInt();
 702:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* UART_1_RX_INTERRUPT_ENABLED */
 703:.\Generated_Source\PSoC4/UART_1.c **** 
 704:.\Generated_Source\PSoC4/UART_1.c ****             if(UART_1_rxBufferRead == UART_1_rxBufferWrite)
 705:.\Generated_Source\PSoC4/UART_1.c ****             {
 706:.\Generated_Source\PSoC4/UART_1.c ****                 if(UART_1_rxBufferLoopDetect > 0u)
 707:.\Generated_Source\PSoC4/UART_1.c ****                 {
 708:.\Generated_Source\PSoC4/UART_1.c ****                     size = UART_1_RXBUFFERSIZE;
 709:.\Generated_Source\PSoC4/UART_1.c ****                 }
 710:.\Generated_Source\PSoC4/UART_1.c ****                 else
 711:.\Generated_Source\PSoC4/UART_1.c ****                 {
 712:.\Generated_Source\PSoC4/UART_1.c ****                     size = 0u;
 713:.\Generated_Source\PSoC4/UART_1.c ****                 }
 714:.\Generated_Source\PSoC4/UART_1.c ****             }
 715:.\Generated_Source\PSoC4/UART_1.c ****             else if(UART_1_rxBufferRead < UART_1_rxBufferWrite)
 716:.\Generated_Source\PSoC4/UART_1.c ****             {
 717:.\Generated_Source\PSoC4/UART_1.c ****                 size = (UART_1_rxBufferWrite - UART_1_rxBufferRead);
 718:.\Generated_Source\PSoC4/UART_1.c ****             }
 719:.\Generated_Source\PSoC4/UART_1.c ****             else
 720:.\Generated_Source\PSoC4/UART_1.c ****             {
 721:.\Generated_Source\PSoC4/UART_1.c ****                 size = (UART_1_RXBUFFERSIZE - UART_1_rxBufferRead) + UART_1_rxBufferWrite;
 722:.\Generated_Source\PSoC4/UART_1.c ****             }
 723:.\Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 24


 724:.\Generated_Source\PSoC4/UART_1.c ****             /* Enable Rx interrupt. */
 725:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_RX_INTERRUPT_ENABLED)
 726:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_EnableRxInt();
 727:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_RX_INTERRUPT_ENABLED */
 728:.\Generated_Source\PSoC4/UART_1.c **** 
 729:.\Generated_Source\PSoC4/UART_1.c ****         #else /* UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH */
 730:.\Generated_Source\PSoC4/UART_1.c **** 
 731:.\Generated_Source\PSoC4/UART_1.c ****             /* We can only know if there is data in the fifo. */
 732:.\Generated_Source\PSoC4/UART_1.c ****             size = ((UART_1_RXSTATUS_REG & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 588              		.loc 1 732 0
 589 0006 094B     		ldr	r3, .L39
 590 0008 1B78     		ldrb	r3, [r3]
 591 000a DBB2     		uxtb	r3, r3
 592 000c 1A1C     		mov	r2, r3
 593 000e 2023     		mov	r3, #32
 594 0010 1340     		and	r3, r2
 595 0012 01D0     		beq	.L36
 596              		.loc 1 732 0 is_stmt 0 discriminator 1
 597 0014 0123     		mov	r3, #1
 598 0016 00E0     		b	.L37
 599              	.L36:
 600              		.loc 1 732 0 discriminator 2
 601 0018 0023     		mov	r3, #0
 602              	.L37:
 603              		.loc 1 732 0 discriminator 3
 604 001a FA1D     		add	r2, r7, #7
 605 001c 1370     		strb	r3, [r2]
 733:.\Generated_Source\PSoC4/UART_1.c **** 
 734:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH */
 735:.\Generated_Source\PSoC4/UART_1.c **** 
 736:.\Generated_Source\PSoC4/UART_1.c ****         return(size);
 606              		.loc 1 736 0 is_stmt 1 discriminator 3
 607 001e FB1D     		add	r3, r7, #7
 608 0020 1B78     		ldrb	r3, [r3]
 737:.\Generated_Source\PSoC4/UART_1.c ****     }
 609              		.loc 1 737 0 discriminator 3
 610 0022 181C     		mov	r0, r3
 611 0024 BD46     		mov	sp, r7
 612 0026 02B0     		add	sp, sp, #8
 613              		@ sp needed for prologue
 614 0028 80BD     		pop	{r7, pc}
 615              	.L40:
 616 002a C046     		.align	2
 617              	.L39:
 618 002c 60000F40 		.word	1074724960
 619              		.cfi_endproc
 620              	.LFE11:
 621              		.size	UART_1_GetRxBufferSize, .-UART_1_GetRxBufferSize
 622              		.section	.text.UART_1_ClearRxBuffer,"ax",%progbits
 623              		.align	2
 624              		.global	UART_1_ClearRxBuffer
 625              		.code	16
 626              		.thumb_func
 627              		.type	UART_1_ClearRxBuffer, %function
 628              	UART_1_ClearRxBuffer:
 629              	.LFB12:
 738:.\Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 25


 739:.\Generated_Source\PSoC4/UART_1.c **** 
 740:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 741:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ClearRxBuffer
 742:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 743:.\Generated_Source\PSoC4/UART_1.c ****     *
 744:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 745:.\Generated_Source\PSoC4/UART_1.c ****     *  Clears the RX RAM buffer by setting the read and write pointers both to zero.
 746:.\Generated_Source\PSoC4/UART_1.c ****     *  Clears hardware RX FIFO.
 747:.\Generated_Source\PSoC4/UART_1.c ****     *
 748:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 749:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 750:.\Generated_Source\PSoC4/UART_1.c ****     *
 751:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 752:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 753:.\Generated_Source\PSoC4/UART_1.c ****     *
 754:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 755:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferWrite - cleared to zero.
 756:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferRead - cleared to zero.
 757:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared to zero.
 758:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferOverflow - cleared to zero.
 759:.\Generated_Source\PSoC4/UART_1.c ****     *
 760:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 761:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
 762:.\Generated_Source\PSoC4/UART_1.c ****     *
 763:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
 764:.\Generated_Source\PSoC4/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 765:.\Generated_Source\PSoC4/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may
 766:.\Generated_Source\PSoC4/UART_1.c ****     *  have remained in the RAM.
 767:.\Generated_Source\PSoC4/UART_1.c ****     *
 768:.\Generated_Source\PSoC4/UART_1.c ****     * Side Effects:
 769:.\Generated_Source\PSoC4/UART_1.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 770:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 771:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_ClearRxBuffer(void) 
 772:.\Generated_Source\PSoC4/UART_1.c ****     {
 630              		.loc 1 772 0
 631              		.cfi_startproc
 632 0000 90B5     		push	{r4, r7, lr}
 633              	.LCFI32:
 634              		.cfi_def_cfa_offset 12
 635              		.cfi_offset 4, -12
 636              		.cfi_offset 7, -8
 637              		.cfi_offset 14, -4
 638 0002 83B0     		sub	sp, sp, #12
 639              	.LCFI33:
 640              		.cfi_def_cfa_offset 24
 641 0004 00AF     		add	r7, sp, #0
 642              	.LCFI34:
 643              		.cfi_def_cfa_register 7
 773:.\Generated_Source\PSoC4/UART_1.c ****         uint8 enableInterrupts;
 774:.\Generated_Source\PSoC4/UART_1.c **** 
 775:.\Generated_Source\PSoC4/UART_1.c ****         /* clear the HW FIFO */
 776:.\Generated_Source\PSoC4/UART_1.c ****         /* Enter critical section */
 777:.\Generated_Source\PSoC4/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 644              		.loc 1 777 0
 645 0006 FC1D     		add	r4, r7, #7
 646 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 647 000c 031C     		mov	r3, r0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 26


 648 000e 2370     		strb	r3, [r4]
 778:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG |=  UART_1_RX_FIFO_CLR;
 649              		.loc 1 778 0
 650 0010 0B4B     		ldr	r3, .L42
 651 0012 0B4A     		ldr	r2, .L42
 652 0014 1278     		ldrb	r2, [r2]
 653 0016 D2B2     		uxtb	r2, r2
 654 0018 0121     		mov	r1, #1
 655 001a 0A43     		orr	r2, r1
 656 001c D2B2     		uxtb	r2, r2
 657 001e 1A70     		strb	r2, [r3]
 779:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG &= (uint8)~UART_1_RX_FIFO_CLR;
 658              		.loc 1 779 0
 659 0020 074B     		ldr	r3, .L42
 660 0022 074A     		ldr	r2, .L42
 661 0024 1278     		ldrb	r2, [r2]
 662 0026 D2B2     		uxtb	r2, r2
 663 0028 0121     		mov	r1, #1
 664 002a 8A43     		bic	r2, r1
 665 002c D2B2     		uxtb	r2, r2
 666 002e 1A70     		strb	r2, [r3]
 780:.\Generated_Source\PSoC4/UART_1.c ****         /* Exit critical section */
 781:.\Generated_Source\PSoC4/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 667              		.loc 1 781 0
 668 0030 FB1D     		add	r3, r7, #7
 669 0032 1B78     		ldrb	r3, [r3]
 670 0034 181C     		mov	r0, r3
 671 0036 FFF7FEFF 		bl	CyExitCriticalSection
 782:.\Generated_Source\PSoC4/UART_1.c **** 
 783:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH)
 784:.\Generated_Source\PSoC4/UART_1.c ****             /* Disable Rx interrupt. */
 785:.\Generated_Source\PSoC4/UART_1.c ****             /* Protect variables that could change on interrupt. */
 786:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_RX_INTERRUPT_ENABLED)
 787:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_DisableRxInt();
 788:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_RX_INTERRUPT_ENABLED */
 789:.\Generated_Source\PSoC4/UART_1.c **** 
 790:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_rxBufferRead = 0u;
 791:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_rxBufferWrite = 0u;
 792:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_rxBufferLoopDetect = 0u;
 793:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_rxBufferOverflow = 0u;
 794:.\Generated_Source\PSoC4/UART_1.c **** 
 795:.\Generated_Source\PSoC4/UART_1.c ****             /* Enable Rx interrupt. */
 796:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_RX_INTERRUPT_ENABLED)
 797:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_EnableRxInt();
 798:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_RX_INTERRUPT_ENABLED */
 799:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH */
 800:.\Generated_Source\PSoC4/UART_1.c **** 
 801:.\Generated_Source\PSoC4/UART_1.c ****     }
 672              		.loc 1 801 0
 673 003a BD46     		mov	sp, r7
 674 003c 03B0     		add	sp, sp, #12
 675              		@ sp needed for prologue
 676 003e 90BD     		pop	{r4, r7, pc}
 677              	.L43:
 678              		.align	2
 679              	.L42:
 680 0040 91000F40 		.word	1074725009
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 27


 681              		.cfi_endproc
 682              	.LFE12:
 683              		.size	UART_1_ClearRxBuffer, .-UART_1_ClearRxBuffer
 684              		.section	.text.UART_1_SetRxAddressMode,"ax",%progbits
 685              		.align	2
 686              		.global	UART_1_SetRxAddressMode
 687              		.code	16
 688              		.thumb_func
 689              		.type	UART_1_SetRxAddressMode, %function
 690              	UART_1_SetRxAddressMode:
 691              	.LFB13:
 802:.\Generated_Source\PSoC4/UART_1.c **** 
 803:.\Generated_Source\PSoC4/UART_1.c **** 
 804:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 805:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetRxAddressMode
 806:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 807:.\Generated_Source\PSoC4/UART_1.c ****     *
 808:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 809:.\Generated_Source\PSoC4/UART_1.c ****     *  Set the receive addressing mode
 810:.\Generated_Source\PSoC4/UART_1.c ****     *
 811:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 812:.\Generated_Source\PSoC4/UART_1.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 813:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 814:.\Generated_Source\PSoC4/UART_1.c ****     *                                               detection
 815:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 816:.\Generated_Source\PSoC4/UART_1.c ****     *                                               address detection
 817:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 818:.\Generated_Source\PSoC4/UART_1.c ****     *                                               detection
 819:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 820:.\Generated_Source\PSoC4/UART_1.c ****     *                                               address detection
 821:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_NONE - No address detection
 822:.\Generated_Source\PSoC4/UART_1.c ****     *
 823:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 824:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 825:.\Generated_Source\PSoC4/UART_1.c ****     *
 826:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 827:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxAddressMode - the parameter stored in this variable for
 828:.\Generated_Source\PSoC4/UART_1.c ****     *   the farther usage in RX ISR.
 829:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxAddressDetected - set to initial state (0).
 830:.\Generated_Source\PSoC4/UART_1.c ****     *
 831:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 832:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetRxAddressMode(uint8 addressMode)
 833:.\Generated_Source\PSoC4/UART_1.c ****                                                         
 834:.\Generated_Source\PSoC4/UART_1.c ****     {
 692              		.loc 1 834 0
 693              		.cfi_startproc
 694 0000 80B5     		push	{r7, lr}
 695              	.LCFI35:
 696              		.cfi_def_cfa_offset 8
 697              		.cfi_offset 7, -8
 698              		.cfi_offset 14, -4
 699 0002 82B0     		sub	sp, sp, #8
 700              	.LCFI36:
 701              		.cfi_def_cfa_offset 16
 702 0004 00AF     		add	r7, sp, #0
 703              	.LCFI37:
 704              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 28


 705 0006 021C     		mov	r2, r0
 706 0008 FB1D     		add	r3, r7, #7
 707 000a 1A70     		strb	r2, [r3]
 835:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_RXHW_ADDRESS_ENABLED)
 836:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_CONTROL_REG_REMOVED)
 837:.\Generated_Source\PSoC4/UART_1.c ****                 if(addressMode != 0u) { }     /* release compiler warning */
 838:.\Generated_Source\PSoC4/UART_1.c ****             #else /* UART_1_CONTROL_REG_REMOVED */
 839:.\Generated_Source\PSoC4/UART_1.c ****                 uint8 tmpCtrl;
 840:.\Generated_Source\PSoC4/UART_1.c ****                 tmpCtrl = UART_1_CONTROL_REG & (uint8)~UART_1_CTRL_RXADDR_MODE_MASK;
 841:.\Generated_Source\PSoC4/UART_1.c ****                 tmpCtrl |= (uint8)(addressMode << UART_1_CTRL_RXADDR_MODE0_SHIFT);
 842:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_CONTROL_REG = tmpCtrl;
 843:.\Generated_Source\PSoC4/UART_1.c ****                 #if(UART_1_RX_INTERRUPT_ENABLED && \
 844:.\Generated_Source\PSoC4/UART_1.c ****                    (UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH) )
 845:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_rxAddressMode = addressMode;
 846:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_rxAddressDetected = 0u;
 847:.\Generated_Source\PSoC4/UART_1.c ****                 #endif /* End UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH*/
 848:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_CONTROL_REG_REMOVED */
 849:.\Generated_Source\PSoC4/UART_1.c ****         #else /* UART_1_RXHW_ADDRESS_ENABLED */
 850:.\Generated_Source\PSoC4/UART_1.c ****             if(addressMode != 0u) { }     /* release compiler warning */
 851:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 852:.\Generated_Source\PSoC4/UART_1.c ****     }
 708              		.loc 1 852 0
 709 000c BD46     		mov	sp, r7
 710 000e 02B0     		add	sp, sp, #8
 711              		@ sp needed for prologue
 712 0010 80BD     		pop	{r7, pc}
 713              		.cfi_endproc
 714              	.LFE13:
 715              		.size	UART_1_SetRxAddressMode, .-UART_1_SetRxAddressMode
 716 0012 C046     		.section	.text.UART_1_SetRxAddress1,"ax",%progbits
 717              		.align	2
 718              		.global	UART_1_SetRxAddress1
 719              		.code	16
 720              		.thumb_func
 721              		.type	UART_1_SetRxAddress1, %function
 722              	UART_1_SetRxAddress1:
 723              	.LFB14:
 853:.\Generated_Source\PSoC4/UART_1.c **** 
 854:.\Generated_Source\PSoC4/UART_1.c **** 
 855:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 856:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetRxAddress1
 857:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 858:.\Generated_Source\PSoC4/UART_1.c ****     *
 859:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 860:.\Generated_Source\PSoC4/UART_1.c ****     *  Set the first hardware address compare value
 861:.\Generated_Source\PSoC4/UART_1.c ****     *
 862:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 863:.\Generated_Source\PSoC4/UART_1.c ****     *  address
 864:.\Generated_Source\PSoC4/UART_1.c ****     *
 865:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 866:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 867:.\Generated_Source\PSoC4/UART_1.c ****     *
 868:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 869:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetRxAddress1(uint8 address) 
 870:.\Generated_Source\PSoC4/UART_1.c **** 
 871:.\Generated_Source\PSoC4/UART_1.c ****     {
 724              		.loc 1 871 0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 29


 725              		.cfi_startproc
 726 0000 80B5     		push	{r7, lr}
 727              	.LCFI38:
 728              		.cfi_def_cfa_offset 8
 729              		.cfi_offset 7, -8
 730              		.cfi_offset 14, -4
 731 0002 82B0     		sub	sp, sp, #8
 732              	.LCFI39:
 733              		.cfi_def_cfa_offset 16
 734 0004 00AF     		add	r7, sp, #0
 735              	.LCFI40:
 736              		.cfi_def_cfa_register 7
 737 0006 021C     		mov	r2, r0
 738 0008 FB1D     		add	r3, r7, #7
 739 000a 1A70     		strb	r2, [r3]
 872:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXADDRESS1_REG = address;
 740              		.loc 1 872 0
 741 000c 034B     		ldr	r3, .L46
 742 000e FA1D     		add	r2, r7, #7
 743 0010 1278     		ldrb	r2, [r2]
 744 0012 1A70     		strb	r2, [r3]
 873:.\Generated_Source\PSoC4/UART_1.c ****     }
 745              		.loc 1 873 0
 746 0014 BD46     		mov	sp, r7
 747 0016 02B0     		add	sp, sp, #8
 748              		@ sp needed for prologue
 749 0018 80BD     		pop	{r7, pc}
 750              	.L47:
 751 001a C046     		.align	2
 752              	.L46:
 753 001c 21000F40 		.word	1074724897
 754              		.cfi_endproc
 755              	.LFE14:
 756              		.size	UART_1_SetRxAddress1, .-UART_1_SetRxAddress1
 757              		.section	.text.UART_1_SetRxAddress2,"ax",%progbits
 758              		.align	2
 759              		.global	UART_1_SetRxAddress2
 760              		.code	16
 761              		.thumb_func
 762              		.type	UART_1_SetRxAddress2, %function
 763              	UART_1_SetRxAddress2:
 764              	.LFB15:
 874:.\Generated_Source\PSoC4/UART_1.c **** 
 875:.\Generated_Source\PSoC4/UART_1.c **** 
 876:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 877:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetRxAddress2
 878:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 879:.\Generated_Source\PSoC4/UART_1.c ****     *
 880:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 881:.\Generated_Source\PSoC4/UART_1.c ****     *  Set the second hardware address compare value
 882:.\Generated_Source\PSoC4/UART_1.c ****     *
 883:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 884:.\Generated_Source\PSoC4/UART_1.c ****     *  address
 885:.\Generated_Source\PSoC4/UART_1.c ****     *
 886:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 887:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 888:.\Generated_Source\PSoC4/UART_1.c ****     *
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 30


 889:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 890:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetRxAddress2(uint8 address) 
 891:.\Generated_Source\PSoC4/UART_1.c ****     {
 765              		.loc 1 891 0
 766              		.cfi_startproc
 767 0000 80B5     		push	{r7, lr}
 768              	.LCFI41:
 769              		.cfi_def_cfa_offset 8
 770              		.cfi_offset 7, -8
 771              		.cfi_offset 14, -4
 772 0002 82B0     		sub	sp, sp, #8
 773              	.LCFI42:
 774              		.cfi_def_cfa_offset 16
 775 0004 00AF     		add	r7, sp, #0
 776              	.LCFI43:
 777              		.cfi_def_cfa_register 7
 778 0006 021C     		mov	r2, r0
 779 0008 FB1D     		add	r3, r7, #7
 780 000a 1A70     		strb	r2, [r3]
 892:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXADDRESS2_REG = address;
 781              		.loc 1 892 0
 782 000c 034B     		ldr	r3, .L49
 783 000e FA1D     		add	r2, r7, #7
 784 0010 1278     		ldrb	r2, [r2]
 785 0012 1A70     		strb	r2, [r3]
 893:.\Generated_Source\PSoC4/UART_1.c ****     }
 786              		.loc 1 893 0
 787 0014 BD46     		mov	sp, r7
 788 0016 02B0     		add	sp, sp, #8
 789              		@ sp needed for prologue
 790 0018 80BD     		pop	{r7, pc}
 791              	.L50:
 792 001a C046     		.align	2
 793              	.L49:
 794 001c 31000F40 		.word	1074724913
 795              		.cfi_endproc
 796              	.LFE15:
 797              		.size	UART_1_SetRxAddress2, .-UART_1_SetRxAddress2
 798              		.section	.text.UART_1_SetTxInterruptMode,"ax",%progbits
 799              		.align	2
 800              		.global	UART_1_SetTxInterruptMode
 801              		.code	16
 802              		.thumb_func
 803              		.type	UART_1_SetTxInterruptMode, %function
 804              	UART_1_SetTxInterruptMode:
 805              	.LFB16:
 894:.\Generated_Source\PSoC4/UART_1.c **** 
 895:.\Generated_Source\PSoC4/UART_1.c **** #endif  /* UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 896:.\Generated_Source\PSoC4/UART_1.c **** 
 897:.\Generated_Source\PSoC4/UART_1.c **** 
 898:.\Generated_Source\PSoC4/UART_1.c **** #if( (UART_1_TX_ENABLED) || (UART_1_HD_ENABLED) )
 899:.\Generated_Source\PSoC4/UART_1.c **** 
 900:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_TX_INTERRUPT_ENABLED)
 901:.\Generated_Source\PSoC4/UART_1.c **** 
 902:.\Generated_Source\PSoC4/UART_1.c ****         /*******************************************************************************
 903:.\Generated_Source\PSoC4/UART_1.c ****         * Function Name: UART_1_EnableTxInt
 904:.\Generated_Source\PSoC4/UART_1.c ****         ********************************************************************************
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 31


 905:.\Generated_Source\PSoC4/UART_1.c ****         *
 906:.\Generated_Source\PSoC4/UART_1.c ****         * Summary:
 907:.\Generated_Source\PSoC4/UART_1.c ****         *  Enable TX interrupt generation
 908:.\Generated_Source\PSoC4/UART_1.c ****         *
 909:.\Generated_Source\PSoC4/UART_1.c ****         * Parameters:
 910:.\Generated_Source\PSoC4/UART_1.c ****         *  None.
 911:.\Generated_Source\PSoC4/UART_1.c ****         *
 912:.\Generated_Source\PSoC4/UART_1.c ****         * Return:
 913:.\Generated_Source\PSoC4/UART_1.c ****         *  None.
 914:.\Generated_Source\PSoC4/UART_1.c ****         *
 915:.\Generated_Source\PSoC4/UART_1.c ****         * Theory:
 916:.\Generated_Source\PSoC4/UART_1.c ****         *  Enable the interrupt output -or- the interrupt component itself
 917:.\Generated_Source\PSoC4/UART_1.c ****         *
 918:.\Generated_Source\PSoC4/UART_1.c ****         *******************************************************************************/
 919:.\Generated_Source\PSoC4/UART_1.c ****         void UART_1_EnableTxInt(void) 
 920:.\Generated_Source\PSoC4/UART_1.c ****         {
 921:.\Generated_Source\PSoC4/UART_1.c ****             CyIntEnable(UART_1_TX_VECT_NUM);
 922:.\Generated_Source\PSoC4/UART_1.c ****         }
 923:.\Generated_Source\PSoC4/UART_1.c **** 
 924:.\Generated_Source\PSoC4/UART_1.c **** 
 925:.\Generated_Source\PSoC4/UART_1.c ****         /*******************************************************************************
 926:.\Generated_Source\PSoC4/UART_1.c ****         * Function Name: UART_1_DisableTxInt
 927:.\Generated_Source\PSoC4/UART_1.c ****         ********************************************************************************
 928:.\Generated_Source\PSoC4/UART_1.c ****         *
 929:.\Generated_Source\PSoC4/UART_1.c ****         * Summary:
 930:.\Generated_Source\PSoC4/UART_1.c ****         *  Disable TX interrupt generation
 931:.\Generated_Source\PSoC4/UART_1.c ****         *
 932:.\Generated_Source\PSoC4/UART_1.c ****         * Parameters:
 933:.\Generated_Source\PSoC4/UART_1.c ****         *  None.
 934:.\Generated_Source\PSoC4/UART_1.c ****         *
 935:.\Generated_Source\PSoC4/UART_1.c ****         * Return:
 936:.\Generated_Source\PSoC4/UART_1.c ****         *  None.
 937:.\Generated_Source\PSoC4/UART_1.c ****         *
 938:.\Generated_Source\PSoC4/UART_1.c ****         * Theory:
 939:.\Generated_Source\PSoC4/UART_1.c ****         *  Disable the interrupt output -or- the interrupt component itself
 940:.\Generated_Source\PSoC4/UART_1.c ****         *
 941:.\Generated_Source\PSoC4/UART_1.c ****         *******************************************************************************/
 942:.\Generated_Source\PSoC4/UART_1.c ****         void UART_1_DisableTxInt(void) 
 943:.\Generated_Source\PSoC4/UART_1.c ****         {
 944:.\Generated_Source\PSoC4/UART_1.c ****             CyIntDisable(UART_1_TX_VECT_NUM);
 945:.\Generated_Source\PSoC4/UART_1.c ****         }
 946:.\Generated_Source\PSoC4/UART_1.c **** 
 947:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* UART_1_TX_INTERRUPT_ENABLED */
 948:.\Generated_Source\PSoC4/UART_1.c **** 
 949:.\Generated_Source\PSoC4/UART_1.c **** 
 950:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 951:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetTxInterruptMode
 952:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 953:.\Generated_Source\PSoC4/UART_1.c ****     *
 954:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 955:.\Generated_Source\PSoC4/UART_1.c ****     *  Configure which status bits trigger an interrupt event
 956:.\Generated_Source\PSoC4/UART_1.c ****     *
 957:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 958:.\Generated_Source\PSoC4/UART_1.c ****     *  intSrc: An or'd combination of the desired status bit masks (defined in
 959:.\Generated_Source\PSoC4/UART_1.c ****     *          the header file)
 960:.\Generated_Source\PSoC4/UART_1.c ****     *
 961:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 32


 962:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 963:.\Generated_Source\PSoC4/UART_1.c ****     *
 964:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
 965:.\Generated_Source\PSoC4/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 966:.\Generated_Source\PSoC4/UART_1.c ****     *
 967:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 968:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetTxInterruptMode(uint8 intSrc) 
 969:.\Generated_Source\PSoC4/UART_1.c ****     {
 806              		.loc 1 969 0
 807              		.cfi_startproc
 808 0000 80B5     		push	{r7, lr}
 809              	.LCFI44:
 810              		.cfi_def_cfa_offset 8
 811              		.cfi_offset 7, -8
 812              		.cfi_offset 14, -4
 813 0002 82B0     		sub	sp, sp, #8
 814              	.LCFI45:
 815              		.cfi_def_cfa_offset 16
 816 0004 00AF     		add	r7, sp, #0
 817              	.LCFI46:
 818              		.cfi_def_cfa_register 7
 819 0006 021C     		mov	r2, r0
 820 0008 FB1D     		add	r3, r7, #7
 821 000a 1A70     		strb	r2, [r3]
 970:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_TXSTATUS_MASK_REG = intSrc;
 822              		.loc 1 970 0
 823 000c 034B     		ldr	r3, .L52
 824 000e FA1D     		add	r2, r7, #7
 825 0010 1278     		ldrb	r2, [r2]
 826 0012 1A70     		strb	r2, [r3]
 971:.\Generated_Source\PSoC4/UART_1.c ****     }
 827              		.loc 1 971 0
 828 0014 BD46     		mov	sp, r7
 829 0016 02B0     		add	sp, sp, #8
 830              		@ sp needed for prologue
 831 0018 80BD     		pop	{r7, pc}
 832              	.L53:
 833 001a C046     		.align	2
 834              	.L52:
 835 001c 83000F40 		.word	1074724995
 836              		.cfi_endproc
 837              	.LFE16:
 838              		.size	UART_1_SetTxInterruptMode, .-UART_1_SetTxInterruptMode
 839              		.section	.text.UART_1_WriteTxData,"ax",%progbits
 840              		.align	2
 841              		.global	UART_1_WriteTxData
 842              		.code	16
 843              		.thumb_func
 844              		.type	UART_1_WriteTxData, %function
 845              	UART_1_WriteTxData:
 846              	.LFB17:
 972:.\Generated_Source\PSoC4/UART_1.c **** 
 973:.\Generated_Source\PSoC4/UART_1.c **** 
 974:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 975:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_WriteTxData
 976:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 977:.\Generated_Source\PSoC4/UART_1.c ****     *
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 33


 978:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 979:.\Generated_Source\PSoC4/UART_1.c ****     *  Write a byte of data to the Transmit FIFO or TX buffer to be sent when the
 980:.\Generated_Source\PSoC4/UART_1.c ****     *  bus is available. WriteTxData sends a byte without checking for buffer room
 981:.\Generated_Source\PSoC4/UART_1.c ****     *  or status. It is up to the user to separately check status.
 982:.\Generated_Source\PSoC4/UART_1.c ****     *
 983:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 984:.\Generated_Source\PSoC4/UART_1.c ****     *  TXDataByte: byte of data to place in the transmit FIFO
 985:.\Generated_Source\PSoC4/UART_1.c ****     *
 986:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 987:.\Generated_Source\PSoC4/UART_1.c ****     * void
 988:.\Generated_Source\PSoC4/UART_1.c ****     *
 989:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 990:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
 991:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
 992:.\Generated_Source\PSoC4/UART_1.c ****     *    incremented after each byte saved to buffer.
 993:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
 994:.\Generated_Source\PSoC4/UART_1.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 995:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
 996:.\Generated_Source\PSoC4/UART_1.c ****     *    initialized.
 997:.\Generated_Source\PSoC4/UART_1.c ****     *
 998:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 999:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1000:.\Generated_Source\PSoC4/UART_1.c ****     *
1001:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1002:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_WriteTxData(uint8 txDataByte) 
1003:.\Generated_Source\PSoC4/UART_1.c ****     {
 847              		.loc 1 1003 0
 848              		.cfi_startproc
 849 0000 80B5     		push	{r7, lr}
 850              	.LCFI47:
 851              		.cfi_def_cfa_offset 8
 852              		.cfi_offset 7, -8
 853              		.cfi_offset 14, -4
 854 0002 82B0     		sub	sp, sp, #8
 855              	.LCFI48:
 856              		.cfi_def_cfa_offset 16
 857 0004 00AF     		add	r7, sp, #0
 858              	.LCFI49:
 859              		.cfi_def_cfa_register 7
 860 0006 021C     		mov	r2, r0
 861 0008 FB1D     		add	r3, r7, #7
 862 000a 1A70     		strb	r2, [r3]
1004:.\Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function*/
1005:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 863              		.loc 1 1005 0
 864 000c 054B     		ldr	r3, .L56
 865 000e 1B78     		ldrb	r3, [r3]
 866 0010 002B     		cmp	r3, #0
 867 0012 03D0     		beq	.L54
1006:.\Generated_Source\PSoC4/UART_1.c ****         {
1007:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_TXBUFFERSIZE > UART_1_FIFO_LENGTH)
1008:.\Generated_Source\PSoC4/UART_1.c **** 
1009:.\Generated_Source\PSoC4/UART_1.c ****                 /* Disable Tx interrupt. */
1010:.\Generated_Source\PSoC4/UART_1.c ****                 /* Protect variables that could change on interrupt. */
1011:.\Generated_Source\PSoC4/UART_1.c ****                 #if(UART_1_TX_INTERRUPT_ENABLED)
1012:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_DisableTxInt();
1013:.\Generated_Source\PSoC4/UART_1.c ****                 #endif /* End UART_1_TX_INTERRUPT_ENABLED */
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 34


1014:.\Generated_Source\PSoC4/UART_1.c **** 
1015:.\Generated_Source\PSoC4/UART_1.c ****                 if( (UART_1_txBufferRead == UART_1_txBufferWrite) &&
1016:.\Generated_Source\PSoC4/UART_1.c ****                     ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
1017:.\Generated_Source\PSoC4/UART_1.c ****                 {
1018:.\Generated_Source\PSoC4/UART_1.c ****                     /* Add directly to the FIFO. */
1019:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_TXDATA_REG = txDataByte;
1020:.\Generated_Source\PSoC4/UART_1.c ****                 }
1021:.\Generated_Source\PSoC4/UART_1.c ****                 else
1022:.\Generated_Source\PSoC4/UART_1.c ****                 {
1023:.\Generated_Source\PSoC4/UART_1.c ****                     if(UART_1_txBufferWrite >= UART_1_TXBUFFERSIZE)
1024:.\Generated_Source\PSoC4/UART_1.c ****                     {
1025:.\Generated_Source\PSoC4/UART_1.c ****                         UART_1_txBufferWrite = 0u;
1026:.\Generated_Source\PSoC4/UART_1.c ****                     }
1027:.\Generated_Source\PSoC4/UART_1.c **** 
1028:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_txBuffer[UART_1_txBufferWrite] = txDataByte;
1029:.\Generated_Source\PSoC4/UART_1.c **** 
1030:.\Generated_Source\PSoC4/UART_1.c ****                     /* Add to the software buffer. */
1031:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_txBufferWrite++;
1032:.\Generated_Source\PSoC4/UART_1.c **** 
1033:.\Generated_Source\PSoC4/UART_1.c ****                 }
1034:.\Generated_Source\PSoC4/UART_1.c **** 
1035:.\Generated_Source\PSoC4/UART_1.c ****                 /* Enable Tx interrupt. */
1036:.\Generated_Source\PSoC4/UART_1.c ****                 #if(UART_1_TX_INTERRUPT_ENABLED)
1037:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_EnableTxInt();
1038:.\Generated_Source\PSoC4/UART_1.c ****                 #endif /* End UART_1_TX_INTERRUPT_ENABLED */
1039:.\Generated_Source\PSoC4/UART_1.c **** 
1040:.\Generated_Source\PSoC4/UART_1.c ****             #else /* UART_1_TXBUFFERSIZE > UART_1_FIFO_LENGTH */
1041:.\Generated_Source\PSoC4/UART_1.c **** 
1042:.\Generated_Source\PSoC4/UART_1.c ****                 /* Add directly to the FIFO. */
1043:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_TXDATA_REG = txDataByte;
 868              		.loc 1 1043 0
 869 0014 044B     		ldr	r3, .L56+4
 870 0016 FA1D     		add	r2, r7, #7
 871 0018 1278     		ldrb	r2, [r2]
 872 001a 1A70     		strb	r2, [r3]
 873              	.L54:
1044:.\Generated_Source\PSoC4/UART_1.c **** 
1045:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_TXBUFFERSIZE > UART_1_FIFO_LENGTH */
1046:.\Generated_Source\PSoC4/UART_1.c ****         }
1047:.\Generated_Source\PSoC4/UART_1.c ****     }
 874              		.loc 1 1047 0
 875 001c BD46     		mov	sp, r7
 876 001e 02B0     		add	sp, sp, #8
 877              		@ sp needed for prologue
 878 0020 80BD     		pop	{r7, pc}
 879              	.L57:
 880 0022 C046     		.align	2
 881              	.L56:
 882 0024 00000000 		.word	UART_1_initVar
 883 0028 43000F40 		.word	1074724931
 884              		.cfi_endproc
 885              	.LFE17:
 886              		.size	UART_1_WriteTxData, .-UART_1_WriteTxData
 887              		.section	.text.UART_1_ReadTxStatus,"ax",%progbits
 888              		.align	2
 889              		.global	UART_1_ReadTxStatus
 890              		.code	16
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 35


 891              		.thumb_func
 892              		.type	UART_1_ReadTxStatus, %function
 893              	UART_1_ReadTxStatus:
 894              	.LFB18:
1048:.\Generated_Source\PSoC4/UART_1.c **** 
1049:.\Generated_Source\PSoC4/UART_1.c **** 
1050:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1051:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ReadTxStatus
1052:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1053:.\Generated_Source\PSoC4/UART_1.c ****     *
1054:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1055:.\Generated_Source\PSoC4/UART_1.c ****     *  Read the status register for the component
1056:.\Generated_Source\PSoC4/UART_1.c ****     *
1057:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1058:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1059:.\Generated_Source\PSoC4/UART_1.c ****     *
1060:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1061:.\Generated_Source\PSoC4/UART_1.c ****     *  Contents of the status register
1062:.\Generated_Source\PSoC4/UART_1.c ****     *
1063:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
1064:.\Generated_Source\PSoC4/UART_1.c ****     *  This function reads the status register which is clear on read. It is up to
1065:.\Generated_Source\PSoC4/UART_1.c ****     *  the user to handle all bits in this return value accordingly, even if the bit
1066:.\Generated_Source\PSoC4/UART_1.c ****     *  was not enabled as an interrupt source the event happened and must be handled
1067:.\Generated_Source\PSoC4/UART_1.c ****     *  accordingly.
1068:.\Generated_Source\PSoC4/UART_1.c ****     *
1069:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1070:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_ReadTxStatus(void) 
1071:.\Generated_Source\PSoC4/UART_1.c ****     {
 895              		.loc 1 1071 0
 896              		.cfi_startproc
 897 0000 80B5     		push	{r7, lr}
 898              	.LCFI50:
 899              		.cfi_def_cfa_offset 8
 900              		.cfi_offset 7, -8
 901              		.cfi_offset 14, -4
 902 0002 00AF     		add	r7, sp, #0
 903              	.LCFI51:
 904              		.cfi_def_cfa_register 7
1072:.\Generated_Source\PSoC4/UART_1.c ****         return(UART_1_TXSTATUS_REG);
 905              		.loc 1 1072 0
 906 0004 024B     		ldr	r3, .L60
 907 0006 1B78     		ldrb	r3, [r3]
 908 0008 DBB2     		uxtb	r3, r3
1073:.\Generated_Source\PSoC4/UART_1.c ****     }
 909              		.loc 1 1073 0
 910 000a 181C     		mov	r0, r3
 911 000c BD46     		mov	sp, r7
 912              		@ sp needed for prologue
 913 000e 80BD     		pop	{r7, pc}
 914              	.L61:
 915              		.align	2
 916              	.L60:
 917 0010 63000F40 		.word	1074724963
 918              		.cfi_endproc
 919              	.LFE18:
 920              		.size	UART_1_ReadTxStatus, .-UART_1_ReadTxStatus
 921              		.section	.text.UART_1_PutChar,"ax",%progbits
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 36


 922              		.align	2
 923              		.global	UART_1_PutChar
 924              		.code	16
 925              		.thumb_func
 926              		.type	UART_1_PutChar, %function
 927              	UART_1_PutChar:
 928              	.LFB19:
1074:.\Generated_Source\PSoC4/UART_1.c **** 
1075:.\Generated_Source\PSoC4/UART_1.c **** 
1076:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1077:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_PutChar
1078:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1079:.\Generated_Source\PSoC4/UART_1.c ****     *
1080:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1081:.\Generated_Source\PSoC4/UART_1.c ****     *  Wait to send byte until TX register or buffer has room.
1082:.\Generated_Source\PSoC4/UART_1.c ****     *
1083:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1084:.\Generated_Source\PSoC4/UART_1.c ****     *  txDataByte: The 8-bit data value to send across the UART.
1085:.\Generated_Source\PSoC4/UART_1.c ****     *
1086:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1087:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1088:.\Generated_Source\PSoC4/UART_1.c ****     *
1089:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1090:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
1091:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
1092:.\Generated_Source\PSoC4/UART_1.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1093:.\Generated_Source\PSoC4/UART_1.c ****     *     saved to buffer.
1094:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
1095:.\Generated_Source\PSoC4/UART_1.c ****     *     checked to identify free space in txBuffer.
1096:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1097:.\Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1098:.\Generated_Source\PSoC4/UART_1.c ****     *
1099:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1100:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1101:.\Generated_Source\PSoC4/UART_1.c ****     *
1102:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
1103:.\Generated_Source\PSoC4/UART_1.c ****     *  Allows the user to transmit any byte of data in a single transfer
1104:.\Generated_Source\PSoC4/UART_1.c ****     *
1105:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1106:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_PutChar(uint8 txDataByte) 
1107:.\Generated_Source\PSoC4/UART_1.c ****     {
 929              		.loc 1 1107 0
 930              		.cfi_startproc
 931 0000 80B5     		push	{r7, lr}
 932              	.LCFI52:
 933              		.cfi_def_cfa_offset 8
 934              		.cfi_offset 7, -8
 935              		.cfi_offset 14, -4
 936 0002 82B0     		sub	sp, sp, #8
 937              	.LCFI53:
 938              		.cfi_def_cfa_offset 16
 939 0004 00AF     		add	r7, sp, #0
 940              	.LCFI54:
 941              		.cfi_def_cfa_register 7
 942 0006 021C     		mov	r2, r0
 943 0008 FB1D     		add	r3, r7, #7
 944 000a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 37


1108:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_TXBUFFERSIZE > UART_1_FIFO_LENGTH)
1109:.\Generated_Source\PSoC4/UART_1.c ****                 /* The temporary output pointer is used since it takes two instructions
1110:.\Generated_Source\PSoC4/UART_1.c ****                 *  to increment with a wrap, and we can't risk doing that with the real
1111:.\Generated_Source\PSoC4/UART_1.c ****                 *  pointer and getting an interrupt in between instructions.
1112:.\Generated_Source\PSoC4/UART_1.c ****                 */
1113:.\Generated_Source\PSoC4/UART_1.c ****                 uint8 loc_txBufferWrite;
1114:.\Generated_Source\PSoC4/UART_1.c ****                 uint8 loc_txBufferRead;
1115:.\Generated_Source\PSoC4/UART_1.c **** 
1116:.\Generated_Source\PSoC4/UART_1.c ****                 do{
1117:.\Generated_Source\PSoC4/UART_1.c ****                     /* Block if software buffer is full, so we don't overwrite. */
1118:.\Generated_Source\PSoC4/UART_1.c ****                     #if ((UART_1_TXBUFFERSIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1119:.\Generated_Source\PSoC4/UART_1.c ****                         /* Disable TX interrupt to protect variables that could change on interrupt
1120:.\Generated_Source\PSoC4/UART_1.c ****                         CyIntDisable(UART_1_TX_VECT_NUM);
1121:.\Generated_Source\PSoC4/UART_1.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1122:.\Generated_Source\PSoC4/UART_1.c ****                     loc_txBufferWrite = UART_1_txBufferWrite;
1123:.\Generated_Source\PSoC4/UART_1.c ****                     loc_txBufferRead = UART_1_txBufferRead;
1124:.\Generated_Source\PSoC4/UART_1.c ****                     #if ((UART_1_TXBUFFERSIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1125:.\Generated_Source\PSoC4/UART_1.c ****                         /* Enable interrupt to continue transmission */
1126:.\Generated_Source\PSoC4/UART_1.c ****                         CyIntEnable(UART_1_TX_VECT_NUM);
1127:.\Generated_Source\PSoC4/UART_1.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1128:.\Generated_Source\PSoC4/UART_1.c ****                 }while( (loc_txBufferWrite < loc_txBufferRead) ? (loc_txBufferWrite == (loc_txBuffe
1129:.\Generated_Source\PSoC4/UART_1.c ****                                         ((loc_txBufferWrite - loc_txBufferRead) ==
1130:.\Generated_Source\PSoC4/UART_1.c ****                                         (uint8)(UART_1_TXBUFFERSIZE - 1u)) );
1131:.\Generated_Source\PSoC4/UART_1.c **** 
1132:.\Generated_Source\PSoC4/UART_1.c ****                 if( (loc_txBufferRead == loc_txBufferWrite) &&
1133:.\Generated_Source\PSoC4/UART_1.c ****                     ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
1134:.\Generated_Source\PSoC4/UART_1.c ****                 {
1135:.\Generated_Source\PSoC4/UART_1.c ****                     /* Add directly to the FIFO. */
1136:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_TXDATA_REG = txDataByte;
1137:.\Generated_Source\PSoC4/UART_1.c ****                 }
1138:.\Generated_Source\PSoC4/UART_1.c ****                 else
1139:.\Generated_Source\PSoC4/UART_1.c ****                 {
1140:.\Generated_Source\PSoC4/UART_1.c ****                     if(loc_txBufferWrite >= UART_1_TXBUFFERSIZE)
1141:.\Generated_Source\PSoC4/UART_1.c ****                     {
1142:.\Generated_Source\PSoC4/UART_1.c ****                         loc_txBufferWrite = 0u;
1143:.\Generated_Source\PSoC4/UART_1.c ****                     }
1144:.\Generated_Source\PSoC4/UART_1.c ****                     /* Add to the software buffer. */
1145:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_txBuffer[loc_txBufferWrite] = txDataByte;
1146:.\Generated_Source\PSoC4/UART_1.c ****                     loc_txBufferWrite++;
1147:.\Generated_Source\PSoC4/UART_1.c **** 
1148:.\Generated_Source\PSoC4/UART_1.c ****                     /* Finally, update the real output pointer */
1149:.\Generated_Source\PSoC4/UART_1.c ****                     #if ((UART_1_TXBUFFERSIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1150:.\Generated_Source\PSoC4/UART_1.c ****                         CyIntDisable(UART_1_TX_VECT_NUM);
1151:.\Generated_Source\PSoC4/UART_1.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1152:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_txBufferWrite = loc_txBufferWrite;
1153:.\Generated_Source\PSoC4/UART_1.c ****                     #if ((UART_1_TXBUFFERSIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1154:.\Generated_Source\PSoC4/UART_1.c ****                         CyIntEnable(UART_1_TX_VECT_NUM);
1155:.\Generated_Source\PSoC4/UART_1.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1156:.\Generated_Source\PSoC4/UART_1.c ****                 }
1157:.\Generated_Source\PSoC4/UART_1.c **** 
1158:.\Generated_Source\PSoC4/UART_1.c ****             #else /* UART_1_TXBUFFERSIZE > UART_1_FIFO_LENGTH */
1159:.\Generated_Source\PSoC4/UART_1.c **** 
1160:.\Generated_Source\PSoC4/UART_1.c ****                 while((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) != 0u)
 945              		.loc 1 1160 0
 946 000c C046     		mov	r8, r8
 947              	.L63:
 948              		.loc 1 1160 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 38


 949 000e 074B     		ldr	r3, .L64
 950 0010 1B78     		ldrb	r3, [r3]
 951 0012 DBB2     		uxtb	r3, r3
 952 0014 1A1C     		mov	r2, r3
 953 0016 0423     		mov	r3, #4
 954 0018 1340     		and	r3, r2
 955 001a F8D1     		bne	.L63
1161:.\Generated_Source\PSoC4/UART_1.c ****                 {
1162:.\Generated_Source\PSoC4/UART_1.c ****                     ; /* Wait for room in the FIFO. */
1163:.\Generated_Source\PSoC4/UART_1.c ****                 }
1164:.\Generated_Source\PSoC4/UART_1.c **** 
1165:.\Generated_Source\PSoC4/UART_1.c ****                 /* Add directly to the FIFO. */
1166:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_TXDATA_REG = txDataByte;
 956              		.loc 1 1166 0 is_stmt 1
 957 001c 044B     		ldr	r3, .L64+4
 958 001e FA1D     		add	r2, r7, #7
 959 0020 1278     		ldrb	r2, [r2]
 960 0022 1A70     		strb	r2, [r3]
1167:.\Generated_Source\PSoC4/UART_1.c **** 
1168:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_TXBUFFERSIZE > UART_1_FIFO_LENGTH */
1169:.\Generated_Source\PSoC4/UART_1.c ****     }
 961              		.loc 1 1169 0
 962 0024 BD46     		mov	sp, r7
 963 0026 02B0     		add	sp, sp, #8
 964              		@ sp needed for prologue
 965 0028 80BD     		pop	{r7, pc}
 966              	.L65:
 967 002a C046     		.align	2
 968              	.L64:
 969 002c 63000F40 		.word	1074724963
 970 0030 43000F40 		.word	1074724931
 971              		.cfi_endproc
 972              	.LFE19:
 973              		.size	UART_1_PutChar, .-UART_1_PutChar
 974              		.section	.text.UART_1_PutString,"ax",%progbits
 975              		.align	2
 976              		.global	UART_1_PutString
 977              		.code	16
 978              		.thumb_func
 979              		.type	UART_1_PutString, %function
 980              	UART_1_PutString:
 981              	.LFB20:
1170:.\Generated_Source\PSoC4/UART_1.c **** 
1171:.\Generated_Source\PSoC4/UART_1.c **** 
1172:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1173:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_PutString
1174:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1175:.\Generated_Source\PSoC4/UART_1.c ****     *
1176:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1177:.\Generated_Source\PSoC4/UART_1.c ****     *  Write a Sequence of bytes on the Transmit line. Data comes from RAM or ROM.
1178:.\Generated_Source\PSoC4/UART_1.c ****     *
1179:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1180:.\Generated_Source\PSoC4/UART_1.c ****     *  string: char pointer to character string of Data to Send.
1181:.\Generated_Source\PSoC4/UART_1.c ****     *
1182:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1183:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1184:.\Generated_Source\PSoC4/UART_1.c ****     *
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 39


1185:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1186:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1187:.\Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1188:.\Generated_Source\PSoC4/UART_1.c ****     *
1189:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1190:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1191:.\Generated_Source\PSoC4/UART_1.c ****     *
1192:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
1193:.\Generated_Source\PSoC4/UART_1.c ****     *  This function will block if there is not enough memory to place the whole
1194:.\Generated_Source\PSoC4/UART_1.c ****     *  string, it will block until the entire string has been written to the
1195:.\Generated_Source\PSoC4/UART_1.c ****     *  transmit buffer.
1196:.\Generated_Source\PSoC4/UART_1.c ****     *
1197:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1198:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_PutString(const char8 string[]) 
1199:.\Generated_Source\PSoC4/UART_1.c ****     {
 982              		.loc 1 1199 0
 983              		.cfi_startproc
 984 0000 80B5     		push	{r7, lr}
 985              	.LCFI55:
 986              		.cfi_def_cfa_offset 8
 987              		.cfi_offset 7, -8
 988              		.cfi_offset 14, -4
 989 0002 84B0     		sub	sp, sp, #16
 990              	.LCFI56:
 991              		.cfi_def_cfa_offset 24
 992 0004 00AF     		add	r7, sp, #0
 993              	.LCFI57:
 994              		.cfi_def_cfa_register 7
 995 0006 7860     		str	r0, [r7, #4]
1200:.\Generated_Source\PSoC4/UART_1.c ****         uint16 buf_index = 0u;
 996              		.loc 1 1200 0
 997 0008 3B1C     		mov	r3, r7
 998 000a 0E33     		add	r3, r3, #14
 999 000c 0022     		mov	r2, #0
 1000 000e 1A80     		strh	r2, [r3]
1201:.\Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function*/
1202:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 1001              		.loc 1 1202 0
 1002 0010 0F4B     		ldr	r3, .L70
 1003 0012 1B78     		ldrb	r3, [r3]
 1004 0014 002B     		cmp	r3, #0
 1005 0016 18D0     		beq	.L66
1203:.\Generated_Source\PSoC4/UART_1.c ****         {
1204:.\Generated_Source\PSoC4/UART_1.c ****             /* This is a blocking function, it will not exit until all data is sent*/
1205:.\Generated_Source\PSoC4/UART_1.c ****             while(string[buf_index] != (char8)0)
 1006              		.loc 1 1205 0
 1007 0018 0FE0     		b	.L68
 1008              	.L69:
1206:.\Generated_Source\PSoC4/UART_1.c ****             {
1207:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_PutChar((uint8)string[buf_index]);
 1009              		.loc 1 1207 0
 1010 001a 3B1C     		mov	r3, r7
 1011 001c 0E33     		add	r3, r3, #14
 1012 001e 1B88     		ldrh	r3, [r3]
 1013 0020 7A68     		ldr	r2, [r7, #4]
 1014 0022 D318     		add	r3, r2, r3
 1015 0024 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 40


 1016 0026 181C     		mov	r0, r3
 1017 0028 FFF7FEFF 		bl	UART_1_PutChar
1208:.\Generated_Source\PSoC4/UART_1.c ****                 buf_index++;
 1018              		.loc 1 1208 0
 1019 002c 3B1C     		mov	r3, r7
 1020 002e 0E33     		add	r3, r3, #14
 1021 0030 3A1C     		mov	r2, r7
 1022 0032 0E32     		add	r2, r2, #14
 1023 0034 1288     		ldrh	r2, [r2]
 1024 0036 0132     		add	r2, r2, #1
 1025 0038 1A80     		strh	r2, [r3]
 1026              	.L68:
1205:.\Generated_Source\PSoC4/UART_1.c ****             while(string[buf_index] != (char8)0)
 1027              		.loc 1 1205 0 discriminator 1
 1028 003a 3B1C     		mov	r3, r7
 1029 003c 0E33     		add	r3, r3, #14
 1030 003e 1B88     		ldrh	r3, [r3]
 1031 0040 7A68     		ldr	r2, [r7, #4]
 1032 0042 D318     		add	r3, r2, r3
 1033 0044 1B78     		ldrb	r3, [r3]
 1034 0046 002B     		cmp	r3, #0
 1035 0048 E7D1     		bne	.L69
 1036              	.L66:
1209:.\Generated_Source\PSoC4/UART_1.c ****             }
1210:.\Generated_Source\PSoC4/UART_1.c ****         }
1211:.\Generated_Source\PSoC4/UART_1.c ****     }
 1037              		.loc 1 1211 0
 1038 004a BD46     		mov	sp, r7
 1039 004c 04B0     		add	sp, sp, #16
 1040              		@ sp needed for prologue
 1041 004e 80BD     		pop	{r7, pc}
 1042              	.L71:
 1043              		.align	2
 1044              	.L70:
 1045 0050 00000000 		.word	UART_1_initVar
 1046              		.cfi_endproc
 1047              	.LFE20:
 1048              		.size	UART_1_PutString, .-UART_1_PutString
 1049              		.section	.text.UART_1_PutArray,"ax",%progbits
 1050              		.align	2
 1051              		.global	UART_1_PutArray
 1052              		.code	16
 1053              		.thumb_func
 1054              		.type	UART_1_PutArray, %function
 1055              	UART_1_PutArray:
 1056              	.LFB21:
1212:.\Generated_Source\PSoC4/UART_1.c **** 
1213:.\Generated_Source\PSoC4/UART_1.c **** 
1214:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1215:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_PutArray
1216:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1217:.\Generated_Source\PSoC4/UART_1.c ****     *
1218:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1219:.\Generated_Source\PSoC4/UART_1.c ****     *  Write a Sequence of bytes on the Transmit line. Data comes from RAM or ROM.
1220:.\Generated_Source\PSoC4/UART_1.c ****     *
1221:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1222:.\Generated_Source\PSoC4/UART_1.c ****     *  string: Address of the memory array residing in RAM or ROM.
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 41


1223:.\Generated_Source\PSoC4/UART_1.c ****     *  byteCount: Number of Bytes to be transmitted.
1224:.\Generated_Source\PSoC4/UART_1.c ****     *
1225:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1226:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1227:.\Generated_Source\PSoC4/UART_1.c ****     *
1228:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1229:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1230:.\Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1231:.\Generated_Source\PSoC4/UART_1.c ****     *
1232:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1233:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1234:.\Generated_Source\PSoC4/UART_1.c ****     *
1235:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1236:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_PutArray(const uint8 string[], uint8 byteCount)
1237:.\Generated_Source\PSoC4/UART_1.c ****                                                                     
1238:.\Generated_Source\PSoC4/UART_1.c ****     {
 1057              		.loc 1 1238 0
 1058              		.cfi_startproc
 1059 0000 80B5     		push	{r7, lr}
 1060              	.LCFI58:
 1061              		.cfi_def_cfa_offset 8
 1062              		.cfi_offset 7, -8
 1063              		.cfi_offset 14, -4
 1064 0002 84B0     		sub	sp, sp, #16
 1065              	.LCFI59:
 1066              		.cfi_def_cfa_offset 24
 1067 0004 00AF     		add	r7, sp, #0
 1068              	.LCFI60:
 1069              		.cfi_def_cfa_register 7
 1070 0006 7860     		str	r0, [r7, #4]
 1071 0008 0A1C     		mov	r2, r1
 1072 000a FB1C     		add	r3, r7, #3
 1073 000c 1A70     		strb	r2, [r3]
1239:.\Generated_Source\PSoC4/UART_1.c ****         uint8 buf_index = 0u;
 1074              		.loc 1 1239 0
 1075 000e 3B1C     		mov	r3, r7
 1076 0010 0F33     		add	r3, r3, #15
 1077 0012 0022     		mov	r2, #0
 1078 0014 1A70     		strb	r2, [r3]
1240:.\Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function*/
1241:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 1079              		.loc 1 1241 0
 1080 0016 0F4B     		ldr	r3, .L75
 1081 0018 1B78     		ldrb	r3, [r3]
 1082 001a 002B     		cmp	r3, #0
 1083 001c 16D0     		beq	.L72
 1084              	.L74:
1242:.\Generated_Source\PSoC4/UART_1.c ****         {
1243:.\Generated_Source\PSoC4/UART_1.c ****             do
1244:.\Generated_Source\PSoC4/UART_1.c ****             {
1245:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_PutChar(string[buf_index]);
 1085              		.loc 1 1245 0 discriminator 1
 1086 001e 3B1C     		mov	r3, r7
 1087 0020 0F33     		add	r3, r3, #15
 1088 0022 1B78     		ldrb	r3, [r3]
 1089 0024 7A68     		ldr	r2, [r7, #4]
 1090 0026 D318     		add	r3, r2, r3
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 42


 1091 0028 1B78     		ldrb	r3, [r3]
 1092 002a 181C     		mov	r0, r3
 1093 002c FFF7FEFF 		bl	UART_1_PutChar
1246:.\Generated_Source\PSoC4/UART_1.c ****                 buf_index++;
 1094              		.loc 1 1246 0 discriminator 1
 1095 0030 3B1C     		mov	r3, r7
 1096 0032 0F33     		add	r3, r3, #15
 1097 0034 3A1C     		mov	r2, r7
 1098 0036 0F32     		add	r2, r2, #15
 1099 0038 1278     		ldrb	r2, [r2]
 1100 003a 0132     		add	r2, r2, #1
 1101 003c 1A70     		strb	r2, [r3]
1247:.\Generated_Source\PSoC4/UART_1.c ****             }while(buf_index < byteCount);
 1102              		.loc 1 1247 0 discriminator 1
 1103 003e 3A1C     		mov	r2, r7
 1104 0040 0F32     		add	r2, r2, #15
 1105 0042 FB1C     		add	r3, r7, #3
 1106 0044 1278     		ldrb	r2, [r2]
 1107 0046 1B78     		ldrb	r3, [r3]
 1108 0048 9A42     		cmp	r2, r3
 1109 004a E8D3     		bcc	.L74
 1110              	.L72:
1248:.\Generated_Source\PSoC4/UART_1.c ****         }
1249:.\Generated_Source\PSoC4/UART_1.c ****     }
 1111              		.loc 1 1249 0
 1112 004c BD46     		mov	sp, r7
 1113 004e 04B0     		add	sp, sp, #16
 1114              		@ sp needed for prologue
 1115 0050 80BD     		pop	{r7, pc}
 1116              	.L76:
 1117 0052 C046     		.align	2
 1118              	.L75:
 1119 0054 00000000 		.word	UART_1_initVar
 1120              		.cfi_endproc
 1121              	.LFE21:
 1122              		.size	UART_1_PutArray, .-UART_1_PutArray
 1123              		.section	.text.UART_1_PutCRLF,"ax",%progbits
 1124              		.align	2
 1125              		.global	UART_1_PutCRLF
 1126              		.code	16
 1127              		.thumb_func
 1128              		.type	UART_1_PutCRLF, %function
 1129              	UART_1_PutCRLF:
 1130              	.LFB22:
1250:.\Generated_Source\PSoC4/UART_1.c **** 
1251:.\Generated_Source\PSoC4/UART_1.c **** 
1252:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1253:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_PutCRLF
1254:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1255:.\Generated_Source\PSoC4/UART_1.c ****     *
1256:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1257:.\Generated_Source\PSoC4/UART_1.c ****     *  Write a character and then carriage return and line feed.
1258:.\Generated_Source\PSoC4/UART_1.c ****     *
1259:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1260:.\Generated_Source\PSoC4/UART_1.c ****     *  txDataByte: uint8 Character to send.
1261:.\Generated_Source\PSoC4/UART_1.c ****     *
1262:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 43


1263:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1264:.\Generated_Source\PSoC4/UART_1.c ****     *
1265:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1266:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1267:.\Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1268:.\Generated_Source\PSoC4/UART_1.c ****     *
1269:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1270:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1271:.\Generated_Source\PSoC4/UART_1.c ****     *
1272:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1273:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_PutCRLF(uint8 txDataByte) 
1274:.\Generated_Source\PSoC4/UART_1.c ****     {
 1131              		.loc 1 1274 0
 1132              		.cfi_startproc
 1133 0000 80B5     		push	{r7, lr}
 1134              	.LCFI61:
 1135              		.cfi_def_cfa_offset 8
 1136              		.cfi_offset 7, -8
 1137              		.cfi_offset 14, -4
 1138 0002 82B0     		sub	sp, sp, #8
 1139              	.LCFI62:
 1140              		.cfi_def_cfa_offset 16
 1141 0004 00AF     		add	r7, sp, #0
 1142              	.LCFI63:
 1143              		.cfi_def_cfa_register 7
 1144 0006 021C     		mov	r2, r0
 1145 0008 FB1D     		add	r3, r7, #7
 1146 000a 1A70     		strb	r2, [r3]
1275:.\Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function*/
1276:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 1147              		.loc 1 1276 0
 1148 000c 084B     		ldr	r3, .L79
 1149 000e 1B78     		ldrb	r3, [r3]
 1150 0010 002B     		cmp	r3, #0
 1151 0012 0AD0     		beq	.L77
1277:.\Generated_Source\PSoC4/UART_1.c ****         {
1278:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_PutChar(txDataByte);
 1152              		.loc 1 1278 0
 1153 0014 FB1D     		add	r3, r7, #7
 1154 0016 1B78     		ldrb	r3, [r3]
 1155 0018 181C     		mov	r0, r3
 1156 001a FFF7FEFF 		bl	UART_1_PutChar
1279:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_PutChar(0x0Du);
 1157              		.loc 1 1279 0
 1158 001e 0D20     		mov	r0, #13
 1159 0020 FFF7FEFF 		bl	UART_1_PutChar
1280:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_PutChar(0x0Au);
 1160              		.loc 1 1280 0
 1161 0024 0A20     		mov	r0, #10
 1162 0026 FFF7FEFF 		bl	UART_1_PutChar
 1163              	.L77:
1281:.\Generated_Source\PSoC4/UART_1.c ****         }
1282:.\Generated_Source\PSoC4/UART_1.c ****     }
 1164              		.loc 1 1282 0
 1165 002a BD46     		mov	sp, r7
 1166 002c 02B0     		add	sp, sp, #8
 1167              		@ sp needed for prologue
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 44


 1168 002e 80BD     		pop	{r7, pc}
 1169              	.L80:
 1170              		.align	2
 1171              	.L79:
 1172 0030 00000000 		.word	UART_1_initVar
 1173              		.cfi_endproc
 1174              	.LFE22:
 1175              		.size	UART_1_PutCRLF, .-UART_1_PutCRLF
 1176              		.section	.text.UART_1_GetTxBufferSize,"ax",%progbits
 1177              		.align	2
 1178              		.global	UART_1_GetTxBufferSize
 1179              		.code	16
 1180              		.thumb_func
 1181              		.type	UART_1_GetTxBufferSize, %function
 1182              	UART_1_GetTxBufferSize:
 1183              	.LFB23:
1283:.\Generated_Source\PSoC4/UART_1.c **** 
1284:.\Generated_Source\PSoC4/UART_1.c **** 
1285:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1286:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_GetTxBufferSize
1287:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1288:.\Generated_Source\PSoC4/UART_1.c ****     *
1289:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1290:.\Generated_Source\PSoC4/UART_1.c ****     *  Determine the amount of space left in the TX buffer and return the count in
1291:.\Generated_Source\PSoC4/UART_1.c ****     *  bytes
1292:.\Generated_Source\PSoC4/UART_1.c ****     *
1293:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1294:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1295:.\Generated_Source\PSoC4/UART_1.c ****     *
1296:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1297:.\Generated_Source\PSoC4/UART_1.c ****     *  Integer count of the number of bytes left in the TX buffer
1298:.\Generated_Source\PSoC4/UART_1.c ****     *
1299:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1300:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferWrite - used to calculate left space.
1301:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferRead - used to calculate left space.
1302:.\Generated_Source\PSoC4/UART_1.c ****     *
1303:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1304:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1305:.\Generated_Source\PSoC4/UART_1.c ****     *
1306:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
1307:.\Generated_Source\PSoC4/UART_1.c ****     *  Allows the user to find out how full the TX Buffer is.
1308:.\Generated_Source\PSoC4/UART_1.c ****     *
1309:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1310:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_GetTxBufferSize(void)
1311:.\Generated_Source\PSoC4/UART_1.c ****                                                             
1312:.\Generated_Source\PSoC4/UART_1.c ****     {
 1184              		.loc 1 1312 0
 1185              		.cfi_startproc
 1186 0000 80B5     		push	{r7, lr}
 1187              	.LCFI64:
 1188              		.cfi_def_cfa_offset 8
 1189              		.cfi_offset 7, -8
 1190              		.cfi_offset 14, -4
 1191 0002 82B0     		sub	sp, sp, #8
 1192              	.LCFI65:
 1193              		.cfi_def_cfa_offset 16
 1194 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 45


 1195              	.LCFI66:
 1196              		.cfi_def_cfa_register 7
1313:.\Generated_Source\PSoC4/UART_1.c ****         uint8 size;
1314:.\Generated_Source\PSoC4/UART_1.c **** 
1315:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_TXBUFFERSIZE > UART_1_FIFO_LENGTH)
1316:.\Generated_Source\PSoC4/UART_1.c **** 
1317:.\Generated_Source\PSoC4/UART_1.c ****             /* Disable Tx interrupt. */
1318:.\Generated_Source\PSoC4/UART_1.c ****             /* Protect variables that could change on interrupt. */
1319:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_TX_INTERRUPT_ENABLED)
1320:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_DisableTxInt();
1321:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_TX_INTERRUPT_ENABLED */
1322:.\Generated_Source\PSoC4/UART_1.c **** 
1323:.\Generated_Source\PSoC4/UART_1.c ****             if(UART_1_txBufferRead == UART_1_txBufferWrite)
1324:.\Generated_Source\PSoC4/UART_1.c ****             {
1325:.\Generated_Source\PSoC4/UART_1.c ****                 size = 0u;
1326:.\Generated_Source\PSoC4/UART_1.c ****             }
1327:.\Generated_Source\PSoC4/UART_1.c ****             else if(UART_1_txBufferRead < UART_1_txBufferWrite)
1328:.\Generated_Source\PSoC4/UART_1.c ****             {
1329:.\Generated_Source\PSoC4/UART_1.c ****                 size = (UART_1_txBufferWrite - UART_1_txBufferRead);
1330:.\Generated_Source\PSoC4/UART_1.c ****             }
1331:.\Generated_Source\PSoC4/UART_1.c ****             else
1332:.\Generated_Source\PSoC4/UART_1.c ****             {
1333:.\Generated_Source\PSoC4/UART_1.c ****                 size = (UART_1_TXBUFFERSIZE - UART_1_txBufferRead) + UART_1_txBufferWrite;
1334:.\Generated_Source\PSoC4/UART_1.c ****             }
1335:.\Generated_Source\PSoC4/UART_1.c **** 
1336:.\Generated_Source\PSoC4/UART_1.c ****             /* Enable Tx interrupt. */
1337:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_TX_INTERRUPT_ENABLED)
1338:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_EnableTxInt();
1339:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_TX_INTERRUPT_ENABLED */
1340:.\Generated_Source\PSoC4/UART_1.c **** 
1341:.\Generated_Source\PSoC4/UART_1.c ****         #else /* UART_1_TXBUFFERSIZE > UART_1_FIFO_LENGTH */
1342:.\Generated_Source\PSoC4/UART_1.c **** 
1343:.\Generated_Source\PSoC4/UART_1.c ****             size = UART_1_TXSTATUS_REG;
 1197              		.loc 1 1343 0
 1198 0006 0F4A     		ldr	r2, .L86
 1199 0008 FB1D     		add	r3, r7, #7
 1200 000a 1278     		ldrb	r2, [r2]
 1201 000c 1A70     		strb	r2, [r3]
1344:.\Generated_Source\PSoC4/UART_1.c **** 
1345:.\Generated_Source\PSoC4/UART_1.c ****             /* Is the fifo is full. */
1346:.\Generated_Source\PSoC4/UART_1.c ****             if((size & UART_1_TX_STS_FIFO_FULL) != 0u)
 1202              		.loc 1 1346 0
 1203 000e FB1D     		add	r3, r7, #7
 1204 0010 1A78     		ldrb	r2, [r3]
 1205 0012 0423     		mov	r3, #4
 1206 0014 1340     		and	r3, r2
 1207 0016 03D0     		beq	.L82
1347:.\Generated_Source\PSoC4/UART_1.c ****             {
1348:.\Generated_Source\PSoC4/UART_1.c ****                 size = UART_1_FIFO_LENGTH;
 1208              		.loc 1 1348 0
 1209 0018 FB1D     		add	r3, r7, #7
 1210 001a 0422     		mov	r2, #4
 1211 001c 1A70     		strb	r2, [r3]
 1212 001e 0BE0     		b	.L83
 1213              	.L82:
1349:.\Generated_Source\PSoC4/UART_1.c ****             }
1350:.\Generated_Source\PSoC4/UART_1.c ****             else if((size & UART_1_TX_STS_FIFO_EMPTY) != 0u)
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 46


 1214              		.loc 1 1350 0
 1215 0020 FB1D     		add	r3, r7, #7
 1216 0022 1A78     		ldrb	r2, [r3]
 1217 0024 0223     		mov	r3, #2
 1218 0026 1340     		and	r3, r2
 1219 0028 03D0     		beq	.L84
1351:.\Generated_Source\PSoC4/UART_1.c ****             {
1352:.\Generated_Source\PSoC4/UART_1.c ****                 size = 0u;
 1220              		.loc 1 1352 0
 1221 002a FB1D     		add	r3, r7, #7
 1222 002c 0022     		mov	r2, #0
 1223 002e 1A70     		strb	r2, [r3]
 1224 0030 02E0     		b	.L83
 1225              	.L84:
1353:.\Generated_Source\PSoC4/UART_1.c ****             }
1354:.\Generated_Source\PSoC4/UART_1.c ****             else
1355:.\Generated_Source\PSoC4/UART_1.c ****             {
1356:.\Generated_Source\PSoC4/UART_1.c ****                 /* We only know there is data in the fifo. */
1357:.\Generated_Source\PSoC4/UART_1.c ****                 size = 1u;
 1226              		.loc 1 1357 0
 1227 0032 FB1D     		add	r3, r7, #7
 1228 0034 0122     		mov	r2, #1
 1229 0036 1A70     		strb	r2, [r3]
 1230              	.L83:
1358:.\Generated_Source\PSoC4/UART_1.c ****             }
1359:.\Generated_Source\PSoC4/UART_1.c **** 
1360:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_TXBUFFERSIZE > UART_1_FIFO_LENGTH */
1361:.\Generated_Source\PSoC4/UART_1.c **** 
1362:.\Generated_Source\PSoC4/UART_1.c ****         return(size);
 1231              		.loc 1 1362 0
 1232 0038 FB1D     		add	r3, r7, #7
 1233 003a 1B78     		ldrb	r3, [r3]
1363:.\Generated_Source\PSoC4/UART_1.c ****     }
 1234              		.loc 1 1363 0
 1235 003c 181C     		mov	r0, r3
 1236 003e BD46     		mov	sp, r7
 1237 0040 02B0     		add	sp, sp, #8
 1238              		@ sp needed for prologue
 1239 0042 80BD     		pop	{r7, pc}
 1240              	.L87:
 1241              		.align	2
 1242              	.L86:
 1243 0044 63000F40 		.word	1074724963
 1244              		.cfi_endproc
 1245              	.LFE23:
 1246              		.size	UART_1_GetTxBufferSize, .-UART_1_GetTxBufferSize
 1247              		.section	.text.UART_1_ClearTxBuffer,"ax",%progbits
 1248              		.align	2
 1249              		.global	UART_1_ClearTxBuffer
 1250              		.code	16
 1251              		.thumb_func
 1252              		.type	UART_1_ClearTxBuffer, %function
 1253              	UART_1_ClearTxBuffer:
 1254              	.LFB24:
1364:.\Generated_Source\PSoC4/UART_1.c **** 
1365:.\Generated_Source\PSoC4/UART_1.c **** 
1366:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 47


1367:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ClearTxBuffer
1368:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1369:.\Generated_Source\PSoC4/UART_1.c ****     *
1370:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1371:.\Generated_Source\PSoC4/UART_1.c ****     *  Clears the TX RAM buffer by setting the read and write pointers both to zero.
1372:.\Generated_Source\PSoC4/UART_1.c ****     *  Clears the hardware TX FIFO.  Any data present in the FIFO will not be sent.
1373:.\Generated_Source\PSoC4/UART_1.c ****     *
1374:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1375:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1376:.\Generated_Source\PSoC4/UART_1.c ****     *
1377:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1378:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1379:.\Generated_Source\PSoC4/UART_1.c ****     *
1380:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1381:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferWrite - cleared to zero.
1382:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferRead - cleared to zero.
1383:.\Generated_Source\PSoC4/UART_1.c ****     *
1384:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1385:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1386:.\Generated_Source\PSoC4/UART_1.c ****     *
1387:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
1388:.\Generated_Source\PSoC4/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1389:.\Generated_Source\PSoC4/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1390:.\Generated_Source\PSoC4/UART_1.c ****     *  remained in the RAM.
1391:.\Generated_Source\PSoC4/UART_1.c ****     *
1392:.\Generated_Source\PSoC4/UART_1.c ****     * Side Effects:
1393:.\Generated_Source\PSoC4/UART_1.c ****     *  Any received data not read from the RAM buffer will be lost when overwritten.
1394:.\Generated_Source\PSoC4/UART_1.c ****     *
1395:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1396:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_ClearTxBuffer(void) 
1397:.\Generated_Source\PSoC4/UART_1.c ****     {
 1255              		.loc 1 1397 0
 1256              		.cfi_startproc
 1257 0000 90B5     		push	{r4, r7, lr}
 1258              	.LCFI67:
 1259              		.cfi_def_cfa_offset 12
 1260              		.cfi_offset 4, -12
 1261              		.cfi_offset 7, -8
 1262              		.cfi_offset 14, -4
 1263 0002 83B0     		sub	sp, sp, #12
 1264              	.LCFI68:
 1265              		.cfi_def_cfa_offset 24
 1266 0004 00AF     		add	r7, sp, #0
 1267              	.LCFI69:
 1268              		.cfi_def_cfa_register 7
1398:.\Generated_Source\PSoC4/UART_1.c ****         uint8 enableInterrupts;
1399:.\Generated_Source\PSoC4/UART_1.c **** 
1400:.\Generated_Source\PSoC4/UART_1.c ****         /* Enter critical section */
1401:.\Generated_Source\PSoC4/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 1269              		.loc 1 1401 0
 1270 0006 FC1D     		add	r4, r7, #7
 1271 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1272 000c 031C     		mov	r3, r0
 1273 000e 2370     		strb	r3, [r4]
1402:.\Generated_Source\PSoC4/UART_1.c ****         /* clear the HW FIFO */
1403:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG |=  UART_1_TX_FIFO_CLR;
 1274              		.loc 1 1403 0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 48


 1275 0010 0B4B     		ldr	r3, .L89
 1276 0012 0B4A     		ldr	r2, .L89
 1277 0014 1278     		ldrb	r2, [r2]
 1278 0016 D2B2     		uxtb	r2, r2
 1279 0018 0121     		mov	r1, #1
 1280 001a 0A43     		orr	r2, r1
 1281 001c D2B2     		uxtb	r2, r2
 1282 001e 1A70     		strb	r2, [r3]
1404:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG &= (uint8)~UART_1_TX_FIFO_CLR;
 1283              		.loc 1 1404 0
 1284 0020 074B     		ldr	r3, .L89
 1285 0022 074A     		ldr	r2, .L89
 1286 0024 1278     		ldrb	r2, [r2]
 1287 0026 D2B2     		uxtb	r2, r2
 1288 0028 0121     		mov	r1, #1
 1289 002a 8A43     		bic	r2, r1
 1290 002c D2B2     		uxtb	r2, r2
 1291 002e 1A70     		strb	r2, [r3]
1405:.\Generated_Source\PSoC4/UART_1.c ****         /* Exit critical section */
1406:.\Generated_Source\PSoC4/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 1292              		.loc 1 1406 0
 1293 0030 FB1D     		add	r3, r7, #7
 1294 0032 1B78     		ldrb	r3, [r3]
 1295 0034 181C     		mov	r0, r3
 1296 0036 FFF7FEFF 		bl	CyExitCriticalSection
1407:.\Generated_Source\PSoC4/UART_1.c **** 
1408:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_TXBUFFERSIZE > UART_1_FIFO_LENGTH)
1409:.\Generated_Source\PSoC4/UART_1.c **** 
1410:.\Generated_Source\PSoC4/UART_1.c ****             /* Disable Tx interrupt. */
1411:.\Generated_Source\PSoC4/UART_1.c ****             /* Protect variables that could change on interrupt. */
1412:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_TX_INTERRUPT_ENABLED)
1413:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_DisableTxInt();
1414:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_TX_INTERRUPT_ENABLED */
1415:.\Generated_Source\PSoC4/UART_1.c **** 
1416:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_txBufferRead = 0u;
1417:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_txBufferWrite = 0u;
1418:.\Generated_Source\PSoC4/UART_1.c **** 
1419:.\Generated_Source\PSoC4/UART_1.c ****             /* Enable Tx interrupt. */
1420:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_TX_INTERRUPT_ENABLED)
1421:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_EnableTxInt();
1422:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_TX_INTERRUPT_ENABLED */
1423:.\Generated_Source\PSoC4/UART_1.c **** 
1424:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_TXBUFFERSIZE > UART_1_FIFO_LENGTH */
1425:.\Generated_Source\PSoC4/UART_1.c ****     }
 1297              		.loc 1 1425 0
 1298 003a BD46     		mov	sp, r7
 1299 003c 03B0     		add	sp, sp, #12
 1300              		@ sp needed for prologue
 1301 003e 90BD     		pop	{r4, r7, pc}
 1302              	.L90:
 1303              		.align	2
 1304              	.L89:
 1305 0040 93000F40 		.word	1074725011
 1306              		.cfi_endproc
 1307              	.LFE24:
 1308              		.size	UART_1_ClearTxBuffer, .-UART_1_ClearTxBuffer
 1309              		.section	.text.UART_1_SendBreak,"ax",%progbits
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 49


 1310              		.align	2
 1311              		.global	UART_1_SendBreak
 1312              		.code	16
 1313              		.thumb_func
 1314              		.type	UART_1_SendBreak, %function
 1315              	UART_1_SendBreak:
 1316              	.LFB25:
1426:.\Generated_Source\PSoC4/UART_1.c **** 
1427:.\Generated_Source\PSoC4/UART_1.c **** 
1428:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1429:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SendBreak
1430:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1431:.\Generated_Source\PSoC4/UART_1.c ****     *
1432:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1433:.\Generated_Source\PSoC4/UART_1.c ****     *  Write a Break command to the UART
1434:.\Generated_Source\PSoC4/UART_1.c ****     *
1435:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1436:.\Generated_Source\PSoC4/UART_1.c ****     *  uint8 retMode:  Wait mode,
1437:.\Generated_Source\PSoC4/UART_1.c ****     *   0 - Initialize registers for Break, sends the Break signal and return
1438:.\Generated_Source\PSoC4/UART_1.c ****     *       imediately.
1439:.\Generated_Source\PSoC4/UART_1.c ****     *   1 - Wait until Break sending is complete, reinitialize registers to normal
1440:.\Generated_Source\PSoC4/UART_1.c ****     *       transmission mode then return.
1441:.\Generated_Source\PSoC4/UART_1.c ****     *   2 - Reinitialize registers to normal transmission mode then return.
1442:.\Generated_Source\PSoC4/UART_1.c ****     *   3 - both steps: 0 and 1
1443:.\Generated_Source\PSoC4/UART_1.c ****     *       init registers for Break, send Break signal
1444:.\Generated_Source\PSoC4/UART_1.c ****     *       wait until Break sending is complete, reinit registers to normal
1445:.\Generated_Source\PSoC4/UART_1.c ****     *       transmission mode then return.
1446:.\Generated_Source\PSoC4/UART_1.c ****     *
1447:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1448:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1449:.\Generated_Source\PSoC4/UART_1.c ****     *
1450:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1451:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1452:.\Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1453:.\Generated_Source\PSoC4/UART_1.c ****     *  tx_period - static variable, used for keeping TX period configuration.
1454:.\Generated_Source\PSoC4/UART_1.c ****     *
1455:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1456:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1457:.\Generated_Source\PSoC4/UART_1.c ****     *
1458:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
1459:.\Generated_Source\PSoC4/UART_1.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1460:.\Generated_Source\PSoC4/UART_1.c ****     *  important to return the registers configuration to normal for continue 8-bit
1461:.\Generated_Source\PSoC4/UART_1.c ****     *  operation.
1462:.\Generated_Source\PSoC4/UART_1.c ****     *  Trere are 3 variants for this API usage:
1463:.\Generated_Source\PSoC4/UART_1.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1464:.\Generated_Source\PSoC4/UART_1.c ****     *     configuration returning. Funcition will block CPU untill transmition
1465:.\Generated_Source\PSoC4/UART_1.c ****     *     complete.
1466:.\Generated_Source\PSoC4/UART_1.c ****     *  2) User may want to use bloking time if UART configured to the low speed
1467:.\Generated_Source\PSoC4/UART_1.c ****     *     operation
1468:.\Generated_Source\PSoC4/UART_1.c ****     *     Emample for this case:
1469:.\Generated_Source\PSoC4/UART_1.c ****     *     SendBreak(0);     - init Break signal transmition
1470:.\Generated_Source\PSoC4/UART_1.c ****     *         Add your code here to use CPU time
1471:.\Generated_Source\PSoC4/UART_1.c ****     *     SendBreak(1);     - complete Break operation
1472:.\Generated_Source\PSoC4/UART_1.c ****     *  3) Same to 2) but user may want to init and use the interrupt for complete
1473:.\Generated_Source\PSoC4/UART_1.c ****     *     break operation.
1474:.\Generated_Source\PSoC4/UART_1.c ****     *     Example for this case:
1475:.\Generated_Source\PSoC4/UART_1.c ****     *     Init TX interrupt whith "TX - On TX Complete" parameter
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 50


1476:.\Generated_Source\PSoC4/UART_1.c ****     *     SendBreak(0);     - init Break signal transmition
1477:.\Generated_Source\PSoC4/UART_1.c ****     *         Add your code here to use CPU time
1478:.\Generated_Source\PSoC4/UART_1.c ****     *     When interrupt appear with UART_TX_STS_COMPLETE status:
1479:.\Generated_Source\PSoC4/UART_1.c ****     *     SendBreak(2);     - complete Break operation
1480:.\Generated_Source\PSoC4/UART_1.c ****     *
1481:.\Generated_Source\PSoC4/UART_1.c ****     * Side Effects:
1482:.\Generated_Source\PSoC4/UART_1.c ****     *   Uses static variable to keep registers configuration.
1483:.\Generated_Source\PSoC4/UART_1.c ****     *
1484:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1485:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SendBreak(uint8 retMode) 
1486:.\Generated_Source\PSoC4/UART_1.c ****     {
 1317              		.loc 1 1486 0
 1318              		.cfi_startproc
 1319 0000 80B5     		push	{r7, lr}
 1320              	.LCFI70:
 1321              		.cfi_def_cfa_offset 8
 1322              		.cfi_offset 7, -8
 1323              		.cfi_offset 14, -4
 1324 0002 84B0     		sub	sp, sp, #16
 1325              	.LCFI71:
 1326              		.cfi_def_cfa_offset 24
 1327 0004 00AF     		add	r7, sp, #0
 1328              	.LCFI72:
 1329              		.cfi_def_cfa_register 7
 1330 0006 021C     		mov	r2, r0
 1331 0008 FB1D     		add	r3, r7, #7
 1332 000a 1A70     		strb	r2, [r3]
1487:.\Generated_Source\PSoC4/UART_1.c **** 
1488:.\Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function*/
1489:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 1333              		.loc 1 1489 0
 1334 000c 254B     		ldr	r3, .L99
 1335 000e 1B78     		ldrb	r3, [r3]
 1336 0010 002B     		cmp	r3, #0
 1337 0012 43D0     		beq	.L91
 1338              	.LBB2:
1490:.\Generated_Source\PSoC4/UART_1.c ****         {
1491:.\Generated_Source\PSoC4/UART_1.c ****             /*Set the Counter to 13-bits and transmit a 00 byte*/
1492:.\Generated_Source\PSoC4/UART_1.c ****             /*When that is done then reset the counter value back*/
1493:.\Generated_Source\PSoC4/UART_1.c ****             uint8 tmpStat;
1494:.\Generated_Source\PSoC4/UART_1.c **** 
1495:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_HD_ENABLED) /* Half Duplex mode*/
1496:.\Generated_Source\PSoC4/UART_1.c **** 
1497:.\Generated_Source\PSoC4/UART_1.c ****                 if( (retMode == UART_1_SEND_BREAK) ||
1498:.\Generated_Source\PSoC4/UART_1.c ****                     (retMode == UART_1_SEND_WAIT_REINIT ) )
1499:.\Generated_Source\PSoC4/UART_1.c ****                 {
1500:.\Generated_Source\PSoC4/UART_1.c ****                     /* CTRL_HD_SEND_BREAK - sends break bits in HD mode*/
1501:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1502:.\Generated_Source\PSoC4/UART_1.c ****                                                           UART_1_CTRL_HD_SEND_BREAK);
1503:.\Generated_Source\PSoC4/UART_1.c ****                     /* Send zeros*/
1504:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_TXDATA_REG = 0u;
1505:.\Generated_Source\PSoC4/UART_1.c **** 
1506:.\Generated_Source\PSoC4/UART_1.c ****                     do /*wait until transmit starts*/
1507:.\Generated_Source\PSoC4/UART_1.c ****                     {
1508:.\Generated_Source\PSoC4/UART_1.c ****                         tmpStat = UART_1_TXSTATUS_REG;
1509:.\Generated_Source\PSoC4/UART_1.c ****                     }while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
1510:.\Generated_Source\PSoC4/UART_1.c ****                 }
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 51


1511:.\Generated_Source\PSoC4/UART_1.c **** 
1512:.\Generated_Source\PSoC4/UART_1.c ****                 if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1513:.\Generated_Source\PSoC4/UART_1.c ****                     (retMode == UART_1_SEND_WAIT_REINIT) )
1514:.\Generated_Source\PSoC4/UART_1.c ****                 {
1515:.\Generated_Source\PSoC4/UART_1.c ****                     do /*wait until transmit complete*/
1516:.\Generated_Source\PSoC4/UART_1.c ****                     {
1517:.\Generated_Source\PSoC4/UART_1.c ****                         tmpStat = UART_1_TXSTATUS_REG;
1518:.\Generated_Source\PSoC4/UART_1.c ****                     }while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
1519:.\Generated_Source\PSoC4/UART_1.c ****                 }
1520:.\Generated_Source\PSoC4/UART_1.c **** 
1521:.\Generated_Source\PSoC4/UART_1.c ****                 if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1522:.\Generated_Source\PSoC4/UART_1.c ****                     (retMode == UART_1_REINIT) ||
1523:.\Generated_Source\PSoC4/UART_1.c ****                     (retMode == UART_1_SEND_WAIT_REINIT) )
1524:.\Generated_Source\PSoC4/UART_1.c ****                 {
1525:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1526:.\Generated_Source\PSoC4/UART_1.c ****                                                   (uint8)~UART_1_CTRL_HD_SEND_BREAK);
1527:.\Generated_Source\PSoC4/UART_1.c ****                 }
1528:.\Generated_Source\PSoC4/UART_1.c **** 
1529:.\Generated_Source\PSoC4/UART_1.c ****             #else /* UART_1_HD_ENABLED Full Duplex mode */
1530:.\Generated_Source\PSoC4/UART_1.c **** 
1531:.\Generated_Source\PSoC4/UART_1.c ****                 static uint8 tx_period;
1532:.\Generated_Source\PSoC4/UART_1.c **** 
1533:.\Generated_Source\PSoC4/UART_1.c ****                 if( (retMode == UART_1_SEND_BREAK) ||
 1339              		.loc 1 1533 0
 1340 0014 FB1D     		add	r3, r7, #7
 1341 0016 1B78     		ldrb	r3, [r3]
 1342 0018 002B     		cmp	r3, #0
 1343 001a 03D0     		beq	.L93
 1344              		.loc 1 1533 0 is_stmt 0 discriminator 1
 1345 001c FB1D     		add	r3, r7, #7
 1346 001e 1B78     		ldrb	r3, [r3]
 1347 0020 032B     		cmp	r3, #3
 1348 0022 15D1     		bne	.L94
 1349              	.L93:
1534:.\Generated_Source\PSoC4/UART_1.c ****                     (retMode == UART_1_SEND_WAIT_REINIT) )
1535:.\Generated_Source\PSoC4/UART_1.c ****                 {
1536:.\Generated_Source\PSoC4/UART_1.c ****                     /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex 
1537:.\Generated_Source\PSoC4/UART_1.c ****                     #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1538:.\Generated_Source\PSoC4/UART_1.c ****                                         (UART_1_PARITY_TYPE_SW != 0u) )
1539:.\Generated_Source\PSoC4/UART_1.c ****                         UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1540:.\Generated_Source\PSoC4/UART_1.c ****                                                               UART_1_CTRL_HD_SEND_BREAK);
1541:.\Generated_Source\PSoC4/UART_1.c ****                     #endif /* End UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB  */
1542:.\Generated_Source\PSoC4/UART_1.c **** 
1543:.\Generated_Source\PSoC4/UART_1.c ****                     #if(UART_1_TXCLKGEN_DP)
1544:.\Generated_Source\PSoC4/UART_1.c ****                         tx_period = UART_1_TXBITCLKTX_COMPLETE_REG;
 1350              		.loc 1 1544 0 is_stmt 1
 1351 0024 204B     		ldr	r3, .L99+4
 1352 0026 1B78     		ldrb	r3, [r3]
 1353 0028 DAB2     		uxtb	r2, r3
 1354 002a 204B     		ldr	r3, .L99+8
 1355 002c 1A70     		strb	r2, [r3]
1545:.\Generated_Source\PSoC4/UART_1.c ****                         UART_1_TXBITCLKTX_COMPLETE_REG = UART_1_TXBITCTR_BREAKBITS;
 1356              		.loc 1 1545 0
 1357 002e 1E4B     		ldr	r3, .L99+4
 1358 0030 6722     		mov	r2, #103
 1359 0032 1A70     		strb	r2, [r3]
1546:.\Generated_Source\PSoC4/UART_1.c ****                     #else
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 52


1547:.\Generated_Source\PSoC4/UART_1.c ****                         tx_period = UART_1_TXBITCTR_PERIOD_REG;
1548:.\Generated_Source\PSoC4/UART_1.c ****                         UART_1_TXBITCTR_PERIOD_REG = UART_1_TXBITCTR_BREAKBITS8X;
1549:.\Generated_Source\PSoC4/UART_1.c ****                     #endif /* End UART_1_TXCLKGEN_DP */
1550:.\Generated_Source\PSoC4/UART_1.c **** 
1551:.\Generated_Source\PSoC4/UART_1.c ****                     /* Send zeros*/
1552:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_TXDATA_REG = 0u;
 1360              		.loc 1 1552 0
 1361 0034 1E4B     		ldr	r3, .L99+12
 1362 0036 0022     		mov	r2, #0
 1363 0038 1A70     		strb	r2, [r3]
 1364              	.L95:
1553:.\Generated_Source\PSoC4/UART_1.c **** 
1554:.\Generated_Source\PSoC4/UART_1.c ****                     do /* wait until transmit starts */
1555:.\Generated_Source\PSoC4/UART_1.c ****                     {
1556:.\Generated_Source\PSoC4/UART_1.c ****                         tmpStat = UART_1_TXSTATUS_REG;
 1365              		.loc 1 1556 0 discriminator 1
 1366 003a 1E4A     		ldr	r2, .L99+16
 1367 003c 3B1C     		mov	r3, r7
 1368 003e 0F33     		add	r3, r3, #15
 1369 0040 1278     		ldrb	r2, [r2]
 1370 0042 1A70     		strb	r2, [r3]
1557:.\Generated_Source\PSoC4/UART_1.c ****                     }while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
 1371              		.loc 1 1557 0 discriminator 1
 1372 0044 3B1C     		mov	r3, r7
 1373 0046 0F33     		add	r3, r3, #15
 1374 0048 1A78     		ldrb	r2, [r3]
 1375 004a 0223     		mov	r3, #2
 1376 004c 1340     		and	r3, r2
 1377 004e F4D1     		bne	.L95
 1378              	.L94:
1558:.\Generated_Source\PSoC4/UART_1.c ****                 }
1559:.\Generated_Source\PSoC4/UART_1.c **** 
1560:.\Generated_Source\PSoC4/UART_1.c ****                 if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
 1379              		.loc 1 1560 0
 1380 0050 FB1D     		add	r3, r7, #7
 1381 0052 1B78     		ldrb	r3, [r3]
 1382 0054 012B     		cmp	r3, #1
 1383 0056 03D0     		beq	.L96
 1384              		.loc 1 1560 0 is_stmt 0 discriminator 1
 1385 0058 FB1D     		add	r3, r7, #7
 1386 005a 1B78     		ldrb	r3, [r3]
 1387 005c 032B     		cmp	r3, #3
 1388 005e 0DD1     		bne	.L97
 1389              	.L96:
1561:.\Generated_Source\PSoC4/UART_1.c ****                     (retMode == UART_1_SEND_WAIT_REINIT) )
1562:.\Generated_Source\PSoC4/UART_1.c ****                 {
1563:.\Generated_Source\PSoC4/UART_1.c ****                     do /*wait until transmit complete*/
1564:.\Generated_Source\PSoC4/UART_1.c ****                     {
1565:.\Generated_Source\PSoC4/UART_1.c ****                         tmpStat = UART_1_TXSTATUS_REG;
 1390              		.loc 1 1565 0 is_stmt 1 discriminator 1
 1391 0060 144A     		ldr	r2, .L99+16
 1392 0062 3B1C     		mov	r3, r7
 1393 0064 0F33     		add	r3, r3, #15
 1394 0066 1278     		ldrb	r2, [r2]
 1395 0068 1A70     		strb	r2, [r3]
1566:.\Generated_Source\PSoC4/UART_1.c ****                     }while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
 1396              		.loc 1 1566 0 discriminator 1
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 53


 1397 006a 3B1C     		mov	r3, r7
 1398 006c 0F33     		add	r3, r3, #15
 1399 006e 1B78     		ldrb	r3, [r3]
 1400 0070 DB43     		mvn	r3, r3
 1401 0072 DBB2     		uxtb	r3, r3
 1402 0074 1A1C     		mov	r2, r3
 1403 0076 0123     		mov	r3, #1
 1404 0078 1340     		and	r3, r2
 1405 007a F1D1     		bne	.L96
 1406              	.L97:
1567:.\Generated_Source\PSoC4/UART_1.c ****                 }
1568:.\Generated_Source\PSoC4/UART_1.c **** 
1569:.\Generated_Source\PSoC4/UART_1.c ****                 if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
 1407              		.loc 1 1569 0
 1408 007c FB1D     		add	r3, r7, #7
 1409 007e 1B78     		ldrb	r3, [r3]
 1410 0080 012B     		cmp	r3, #1
 1411 0082 07D0     		beq	.L98
 1412              		.loc 1 1569 0 is_stmt 0 discriminator 1
 1413 0084 FB1D     		add	r3, r7, #7
 1414 0086 1B78     		ldrb	r3, [r3]
 1415 0088 022B     		cmp	r3, #2
 1416 008a 03D0     		beq	.L98
1570:.\Generated_Source\PSoC4/UART_1.c ****                     (retMode == UART_1_REINIT) ||
 1417              		.loc 1 1570 0 is_stmt 1
 1418 008c FB1D     		add	r3, r7, #7
 1419 008e 1B78     		ldrb	r3, [r3]
 1420 0090 032B     		cmp	r3, #3
 1421 0092 03D1     		bne	.L91
 1422              	.L98:
1571:.\Generated_Source\PSoC4/UART_1.c ****                     (retMode == UART_1_SEND_WAIT_REINIT) )
1572:.\Generated_Source\PSoC4/UART_1.c ****                 {
1573:.\Generated_Source\PSoC4/UART_1.c **** 
1574:.\Generated_Source\PSoC4/UART_1.c ****                     #if(UART_1_TXCLKGEN_DP)
1575:.\Generated_Source\PSoC4/UART_1.c ****                         UART_1_TXBITCLKTX_COMPLETE_REG = tx_period;
 1423              		.loc 1 1575 0
 1424 0094 044B     		ldr	r3, .L99+4
 1425 0096 054A     		ldr	r2, .L99+8
 1426 0098 1278     		ldrb	r2, [r2]
 1427 009a 1A70     		strb	r2, [r3]
 1428              	.L91:
 1429              	.LBE2:
1576:.\Generated_Source\PSoC4/UART_1.c ****                     #else
1577:.\Generated_Source\PSoC4/UART_1.c ****                         UART_1_TXBITCTR_PERIOD_REG = tx_period;
1578:.\Generated_Source\PSoC4/UART_1.c ****                     #endif /* End UART_1_TXCLKGEN_DP */
1579:.\Generated_Source\PSoC4/UART_1.c **** 
1580:.\Generated_Source\PSoC4/UART_1.c ****                     #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1581:.\Generated_Source\PSoC4/UART_1.c ****                          (UART_1_PARITY_TYPE_SW != 0u) )
1582:.\Generated_Source\PSoC4/UART_1.c ****                         UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1583:.\Generated_Source\PSoC4/UART_1.c ****                                                       (uint8)~UART_1_CTRL_HD_SEND_BREAK);
1584:.\Generated_Source\PSoC4/UART_1.c ****                     #endif /* End UART_1_PARITY_TYPE != NONE */
1585:.\Generated_Source\PSoC4/UART_1.c ****                 }
1586:.\Generated_Source\PSoC4/UART_1.c ****             #endif    /* End UART_1_HD_ENABLED */
1587:.\Generated_Source\PSoC4/UART_1.c ****         }
1588:.\Generated_Source\PSoC4/UART_1.c ****     }
 1430              		.loc 1 1588 0
 1431 009c BD46     		mov	sp, r7
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 54


 1432 009e 04B0     		add	sp, sp, #16
 1433              		@ sp needed for prologue
 1434 00a0 80BD     		pop	{r7, pc}
 1435              	.L100:
 1436 00a2 C046     		.align	2
 1437              	.L99:
 1438 00a4 00000000 		.word	UART_1_initVar
 1439 00a8 32000F40 		.word	1074724914
 1440 00ac 01000000 		.word	tx_period.4761
 1441 00b0 43000F40 		.word	1074724931
 1442 00b4 63000F40 		.word	1074724963
 1443              		.cfi_endproc
 1444              	.LFE25:
 1445              		.size	UART_1_SendBreak, .-UART_1_SendBreak
 1446              		.section	.text.UART_1_SetTxAddressMode,"ax",%progbits
 1447              		.align	2
 1448              		.global	UART_1_SetTxAddressMode
 1449              		.code	16
 1450              		.thumb_func
 1451              		.type	UART_1_SetTxAddressMode, %function
 1452              	UART_1_SetTxAddressMode:
 1453              	.LFB26:
1589:.\Generated_Source\PSoC4/UART_1.c **** 
1590:.\Generated_Source\PSoC4/UART_1.c **** 
1591:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1592:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetTxAddressMode
1593:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1594:.\Generated_Source\PSoC4/UART_1.c ****     *
1595:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1596:.\Generated_Source\PSoC4/UART_1.c ****     *  Set the transmit addressing mode
1597:.\Generated_Source\PSoC4/UART_1.c ****     *
1598:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1599:.\Generated_Source\PSoC4/UART_1.c ****     *  addressMode: 0 -> Space
1600:.\Generated_Source\PSoC4/UART_1.c ****     *               1 -> Mark
1601:.\Generated_Source\PSoC4/UART_1.c ****     *
1602:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1603:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1604:.\Generated_Source\PSoC4/UART_1.c ****     *
1605:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1606:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetTxAddressMode(uint8 addressMode) 
1607:.\Generated_Source\PSoC4/UART_1.c ****     {
 1454              		.loc 1 1607 0
 1455              		.cfi_startproc
 1456 0000 80B5     		push	{r7, lr}
 1457              	.LCFI73:
 1458              		.cfi_def_cfa_offset 8
 1459              		.cfi_offset 7, -8
 1460              		.cfi_offset 14, -4
 1461 0002 82B0     		sub	sp, sp, #8
 1462              	.LCFI74:
 1463              		.cfi_def_cfa_offset 16
 1464 0004 00AF     		add	r7, sp, #0
 1465              	.LCFI75:
 1466              		.cfi_def_cfa_register 7
 1467 0006 021C     		mov	r2, r0
 1468 0008 FB1D     		add	r3, r7, #7
 1469 000a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 55


1608:.\Generated_Source\PSoC4/UART_1.c ****         /* Mark/Space sending enable*/
1609:.\Generated_Source\PSoC4/UART_1.c ****         if(addressMode != 0u)
1610:.\Generated_Source\PSoC4/UART_1.c ****         {
1611:.\Generated_Source\PSoC4/UART_1.c ****             #if( UART_1_CONTROL_REG_REMOVED == 0u )
1612:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1613:.\Generated_Source\PSoC4/UART_1.c ****                                                       UART_1_CTRL_MARK);
1614:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_CONTROL_REG_REMOVED == 0u */
1615:.\Generated_Source\PSoC4/UART_1.c ****         }
1616:.\Generated_Source\PSoC4/UART_1.c ****         else
1617:.\Generated_Source\PSoC4/UART_1.c ****         {
1618:.\Generated_Source\PSoC4/UART_1.c ****             #if( UART_1_CONTROL_REG_REMOVED == 0u )
1619:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1620:.\Generated_Source\PSoC4/UART_1.c ****                                                     (uint8)~UART_1_CTRL_MARK);
1621:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_CONTROL_REG_REMOVED == 0u */
1622:.\Generated_Source\PSoC4/UART_1.c ****         }
1623:.\Generated_Source\PSoC4/UART_1.c ****     }
 1470              		.loc 1 1623 0
 1471 000c BD46     		mov	sp, r7
 1472 000e 02B0     		add	sp, sp, #8
 1473              		@ sp needed for prologue
 1474 0010 80BD     		pop	{r7, pc}
 1475              		.cfi_endproc
 1476              	.LFE26:
 1477              		.size	UART_1_SetTxAddressMode, .-UART_1_SetTxAddressMode
 1478 0012 C046     		.bss
 1479              	tx_period.4761:
 1480 0001 00       		.space	1
 1481              		.text
 1482              	.Letext0:
 1483              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1484              		.section	.debug_info,"",%progbits
 1485              	.Ldebug_info0:
 1486 0000 87050000 		.4byte	0x587
 1487 0004 0200     		.2byte	0x2
 1488 0006 00000000 		.4byte	.Ldebug_abbrev0
 1489 000a 04       		.byte	0x4
 1490 000b 01       		.uleb128 0x1
 1491 000c C6020000 		.4byte	.LASF60
 1492 0010 01       		.byte	0x1
 1493 0011 E6000000 		.4byte	.LASF61
 1494 0015 40020000 		.4byte	.LASF62
 1495 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1496 001d 00000000 		.4byte	0
 1497 0021 00000000 		.4byte	0
 1498 0025 00000000 		.4byte	.Ldebug_line0
 1499 0029 02       		.uleb128 0x2
 1500 002a 01       		.byte	0x1
 1501 002b 06       		.byte	0x6
 1502 002c 9C000000 		.4byte	.LASF0
 1503 0030 02       		.uleb128 0x2
 1504 0031 01       		.byte	0x1
 1505 0032 08       		.byte	0x8
 1506 0033 14030000 		.4byte	.LASF1
 1507 0037 02       		.uleb128 0x2
 1508 0038 02       		.byte	0x2
 1509 0039 05       		.byte	0x5
 1510 003a 22030000 		.4byte	.LASF2
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 56


 1511 003e 02       		.uleb128 0x2
 1512 003f 02       		.byte	0x2
 1513 0040 07       		.byte	0x7
 1514 0041 6A010000 		.4byte	.LASF3
 1515 0045 02       		.uleb128 0x2
 1516 0046 04       		.byte	0x4
 1517 0047 05       		.byte	0x5
 1518 0048 B7000000 		.4byte	.LASF4
 1519 004c 02       		.uleb128 0x2
 1520 004d 04       		.byte	0x4
 1521 004e 07       		.byte	0x7
 1522 004f 53010000 		.4byte	.LASF5
 1523 0053 02       		.uleb128 0x2
 1524 0054 08       		.byte	0x8
 1525 0055 05       		.byte	0x5
 1526 0056 8E000000 		.4byte	.LASF6
 1527 005a 02       		.uleb128 0x2
 1528 005b 08       		.byte	0x8
 1529 005c 07       		.byte	0x7
 1530 005d 60000000 		.4byte	.LASF7
 1531 0061 03       		.uleb128 0x3
 1532 0062 04       		.byte	0x4
 1533 0063 05       		.byte	0x5
 1534 0064 696E7400 		.ascii	"int\000"
 1535 0068 02       		.uleb128 0x2
 1536 0069 04       		.byte	0x4
 1537 006a 07       		.byte	0x7
 1538 006b 32010000 		.4byte	.LASF8
 1539 006f 04       		.uleb128 0x4
 1540 0070 CD000000 		.4byte	.LASF9
 1541 0074 02       		.byte	0x2
 1542 0075 5B       		.byte	0x5b
 1543 0076 30000000 		.4byte	0x30
 1544 007a 04       		.uleb128 0x4
 1545 007b 00000000 		.4byte	.LASF10
 1546 007f 02       		.byte	0x2
 1547 0080 5C       		.byte	0x5c
 1548 0081 3E000000 		.4byte	0x3e
 1549 0085 02       		.uleb128 0x2
 1550 0086 04       		.byte	0x4
 1551 0087 04       		.byte	0x4
 1552 0088 82020000 		.4byte	.LASF11
 1553 008c 02       		.uleb128 0x2
 1554 008d 08       		.byte	0x8
 1555 008e 04       		.byte	0x4
 1556 008f D3000000 		.4byte	.LASF12
 1557 0093 04       		.uleb128 0x4
 1558 0094 84030000 		.4byte	.LASF13
 1559 0098 02       		.byte	0x2
 1560 0099 6C       		.byte	0x6c
 1561 009a 9E000000 		.4byte	0x9e
 1562 009e 02       		.uleb128 0x2
 1563 009f 01       		.byte	0x1
 1564 00a0 08       		.byte	0x8
 1565 00a1 7F030000 		.4byte	.LASF14
 1566 00a5 04       		.uleb128 0x4
 1567 00a6 0F030000 		.4byte	.LASF15
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 57


 1568 00aa 02       		.byte	0x2
 1569 00ab F0       		.byte	0xf0
 1570 00ac B0000000 		.4byte	0xb0
 1571 00b0 05       		.uleb128 0x5
 1572 00b1 6F000000 		.4byte	0x6f
 1573 00b5 02       		.uleb128 0x2
 1574 00b6 04       		.byte	0x4
 1575 00b7 07       		.byte	0x7
 1576 00b8 05020000 		.4byte	.LASF16
 1577 00bc 06       		.uleb128 0x6
 1578 00bd 01       		.byte	0x1
 1579 00be C0000000 		.4byte	.LASF17
 1580 00c2 01       		.byte	0x1
 1581 00c3 49       		.byte	0x49
 1582 00c4 01       		.byte	0x1
 1583 00c5 00000000 		.4byte	.LFB0
 1584 00c9 24000000 		.4byte	.LFE0
 1585 00cd 00000000 		.4byte	.LLST0
 1586 00d1 01       		.byte	0x1
 1587 00d2 07       		.uleb128 0x7
 1588 00d3 01       		.byte	0x1
 1589 00d4 8A030000 		.4byte	.LASF18
 1590 00d8 01       		.byte	0x1
 1591 00d9 65       		.byte	0x65
 1592 00da 01       		.byte	0x1
 1593 00db 00000000 		.4byte	.LFB1
 1594 00df 3C000000 		.4byte	.LFE1
 1595 00e3 2C000000 		.4byte	.LLST1
 1596 00e7 01       		.byte	0x1
 1597 00e8 08       		.uleb128 0x8
 1598 00e9 01       		.byte	0x1
 1599 00ea 7D010000 		.4byte	.LASF19
 1600 00ee 01       		.byte	0x1
 1601 00ef AE       		.byte	0xae
 1602 00f0 01       		.byte	0x1
 1603 00f1 00000000 		.4byte	.LFB2
 1604 00f5 60000000 		.4byte	.LFE2
 1605 00f9 58000000 		.4byte	.LLST2
 1606 00fd 01       		.byte	0x1
 1607 00fe 11010000 		.4byte	0x111
 1608 0102 09       		.uleb128 0x9
 1609 0103 96030000 		.4byte	.LASF21
 1610 0107 01       		.byte	0x1
 1611 0108 B0       		.byte	0xb0
 1612 0109 6F000000 		.4byte	0x6f
 1613 010d 02       		.byte	0x2
 1614 010e 91       		.byte	0x91
 1615 010f 6F       		.sleb128 -17
 1616 0110 00       		.byte	0
 1617 0111 08       		.uleb128 0x8
 1618 0112 01       		.byte	0x1
 1619 0113 CF010000 		.4byte	.LASF20
 1620 0117 01       		.byte	0x1
 1621 0118 E3       		.byte	0xe3
 1622 0119 01       		.byte	0x1
 1623 011a 00000000 		.4byte	.LFB3
 1624 011e 60000000 		.4byte	.LFE3
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 58


 1625 0122 90000000 		.4byte	.LLST3
 1626 0126 01       		.byte	0x1
 1627 0127 3A010000 		.4byte	0x13a
 1628 012b 09       		.uleb128 0x9
 1629 012c 96030000 		.4byte	.LASF21
 1630 0130 01       		.byte	0x1
 1631 0131 E5       		.byte	0xe5
 1632 0132 6F000000 		.4byte	0x6f
 1633 0136 02       		.byte	0x2
 1634 0137 91       		.byte	0x91
 1635 0138 6F       		.sleb128 -17
 1636 0139 00       		.byte	0
 1637 013a 0A       		.uleb128 0xa
 1638 013b 01       		.byte	0x1
 1639 013c B4010000 		.4byte	.LASF32
 1640 0140 01       		.byte	0x1
 1641 0141 1901     		.2byte	0x119
 1642 0143 01       		.byte	0x1
 1643 0144 6F000000 		.4byte	0x6f
 1644 0148 00000000 		.4byte	.LFB4
 1645 014c 0C000000 		.4byte	.LFE4
 1646 0150 C8000000 		.4byte	.LLST4
 1647 0154 01       		.byte	0x1
 1648 0155 0B       		.uleb128 0xb
 1649 0156 01       		.byte	0x1
 1650 0157 2C030000 		.4byte	.LASF22
 1651 015b 01       		.byte	0x1
 1652 015c 3101     		.2byte	0x131
 1653 015e 01       		.byte	0x1
 1654 015f 00000000 		.4byte	.LFB5
 1655 0163 12000000 		.4byte	.LFE5
 1656 0167 F4000000 		.4byte	.LLST5
 1657 016b 01       		.byte	0x1
 1658 016c 80010000 		.4byte	0x180
 1659 0170 0C       		.uleb128 0xc
 1660 0171 08010000 		.4byte	.LASF24
 1661 0175 01       		.byte	0x1
 1662 0176 3101     		.2byte	0x131
 1663 0178 6F000000 		.4byte	0x6f
 1664 017c 02       		.byte	0x2
 1665 017d 91       		.byte	0x91
 1666 017e 77       		.sleb128 -9
 1667 017f 00       		.byte	0
 1668 0180 0B       		.uleb128 0xb
 1669 0181 01       		.byte	0x1
 1670 0182 10010000 		.4byte	.LASF23
 1671 0186 01       		.byte	0x1
 1672 0187 8101     		.2byte	0x181
 1673 0189 01       		.byte	0x1
 1674 018a 00000000 		.4byte	.LFB6
 1675 018e 20000000 		.4byte	.LFE6
 1676 0192 2C010000 		.4byte	.LLST6
 1677 0196 01       		.byte	0x1
 1678 0197 AB010000 		.4byte	0x1ab
 1679 019b 0C       		.uleb128 0xc
 1680 019c AD010000 		.4byte	.LASF25
 1681 01a0 01       		.byte	0x1
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 59


 1682 01a1 8101     		.2byte	0x181
 1683 01a3 6F000000 		.4byte	0x6f
 1684 01a7 02       		.byte	0x2
 1685 01a8 91       		.byte	0x91
 1686 01a9 77       		.sleb128 -9
 1687 01aa 00       		.byte	0
 1688 01ab 0D       		.uleb128 0xd
 1689 01ac 01       		.byte	0x1
 1690 01ad 4E000000 		.4byte	.LASF27
 1691 01b1 01       		.byte	0x1
 1692 01b2 A201     		.2byte	0x1a2
 1693 01b4 01       		.byte	0x1
 1694 01b5 6F000000 		.4byte	0x6f
 1695 01b9 00000000 		.4byte	.LFB7
 1696 01bd 20000000 		.4byte	.LFE7
 1697 01c1 64010000 		.4byte	.LLST7
 1698 01c5 01       		.byte	0x1
 1699 01c6 DA010000 		.4byte	0x1da
 1700 01ca 0E       		.uleb128 0xe
 1701 01cb 78030000 		.4byte	.LASF26
 1702 01cf 01       		.byte	0x1
 1703 01d0 A401     		.2byte	0x1a4
 1704 01d2 6F000000 		.4byte	0x6f
 1705 01d6 02       		.byte	0x2
 1706 01d7 91       		.byte	0x91
 1707 01d8 77       		.sleb128 -9
 1708 01d9 00       		.byte	0
 1709 01da 0D       		.uleb128 0xd
 1710 01db 01       		.byte	0x1
 1711 01dc AE030000 		.4byte	.LASF28
 1712 01e0 01       		.byte	0x1
 1713 01e1 FD01     		.2byte	0x1fd
 1714 01e3 01       		.byte	0x1
 1715 01e4 6F000000 		.4byte	0x6f
 1716 01e8 00000000 		.4byte	.LFB8
 1717 01ec 24000000 		.4byte	.LFE8
 1718 01f0 9C010000 		.4byte	.LLST8
 1719 01f4 01       		.byte	0x1
 1720 01f5 09020000 		.4byte	0x209
 1721 01f9 0E       		.uleb128 0xe
 1722 01fa A7030000 		.4byte	.LASF29
 1723 01fe 01       		.byte	0x1
 1724 01ff FF01     		.2byte	0x1ff
 1725 0201 6F000000 		.4byte	0x6f
 1726 0205 02       		.byte	0x2
 1727 0206 91       		.byte	0x91
 1728 0207 77       		.sleb128 -9
 1729 0208 00       		.byte	0
 1730 0209 0D       		.uleb128 0xd
 1731 020a 01       		.byte	0x1
 1732 020b C2030000 		.4byte	.LASF30
 1733 020f 01       		.byte	0x1
 1734 0210 2C02     		.2byte	0x22c
 1735 0212 01       		.byte	0x1
 1736 0213 6F000000 		.4byte	0x6f
 1737 0217 00000000 		.4byte	.LFB9
 1738 021b 4C000000 		.4byte	.LFE9
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 60


 1739 021f D4010000 		.4byte	.LLST9
 1740 0223 01       		.byte	0x1
 1741 0224 47020000 		.4byte	0x247
 1742 0228 0E       		.uleb128 0xe
 1743 0229 78030000 		.4byte	.LASF26
 1744 022d 01       		.byte	0x1
 1745 022e 2E02     		.2byte	0x22e
 1746 0230 6F000000 		.4byte	0x6f
 1747 0234 02       		.byte	0x2
 1748 0235 91       		.byte	0x91
 1749 0236 77       		.sleb128 -9
 1750 0237 0E       		.uleb128 0xe
 1751 0238 5F020000 		.4byte	.LASF31
 1752 023c 01       		.byte	0x1
 1753 023d 2F02     		.2byte	0x22f
 1754 023f 6F000000 		.4byte	0x6f
 1755 0243 02       		.byte	0x2
 1756 0244 91       		.byte	0x91
 1757 0245 76       		.sleb128 -10
 1758 0246 00       		.byte	0
 1759 0247 0F       		.uleb128 0xf
 1760 0248 01       		.byte	0x1
 1761 0249 DB010000 		.4byte	.LASF33
 1762 024d 01       		.byte	0x1
 1763 024e 9202     		.2byte	0x292
 1764 0250 01       		.byte	0x1
 1765 0251 7A000000 		.4byte	0x7a
 1766 0255 00000000 		.4byte	.LFB10
 1767 0259 22000000 		.4byte	.LFE10
 1768 025d 0C020000 		.4byte	.LLST10
 1769 0261 01       		.byte	0x1
 1770 0262 0D       		.uleb128 0xd
 1771 0263 01       		.byte	0x1
 1772 0264 61030000 		.4byte	.LASF34
 1773 0268 01       		.byte	0x1
 1774 0269 B302     		.2byte	0x2b3
 1775 026b 01       		.byte	0x1
 1776 026c 6F000000 		.4byte	0x6f
 1777 0270 00000000 		.4byte	.LFB11
 1778 0274 30000000 		.4byte	.LFE11
 1779 0278 38020000 		.4byte	.LLST11
 1780 027c 01       		.byte	0x1
 1781 027d 91020000 		.4byte	0x291
 1782 0281 0E       		.uleb128 0xe
 1783 0282 65010000 		.4byte	.LASF35
 1784 0286 01       		.byte	0x1
 1785 0287 B602     		.2byte	0x2b6
 1786 0289 6F000000 		.4byte	0x6f
 1787 028d 02       		.byte	0x2
 1788 028e 91       		.byte	0x91
 1789 028f 77       		.sleb128 -9
 1790 0290 00       		.byte	0
 1791 0291 10       		.uleb128 0x10
 1792 0292 01       		.byte	0x1
 1793 0293 99020000 		.4byte	.LASF36
 1794 0297 01       		.byte	0x1
 1795 0298 0303     		.2byte	0x303
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 61


 1796 029a 01       		.byte	0x1
 1797 029b 00000000 		.4byte	.LFB12
 1798 029f 44000000 		.4byte	.LFE12
 1799 02a3 70020000 		.4byte	.LLST12
 1800 02a7 01       		.byte	0x1
 1801 02a8 BC020000 		.4byte	0x2bc
 1802 02ac 0E       		.uleb128 0xe
 1803 02ad 96030000 		.4byte	.LASF21
 1804 02b1 01       		.byte	0x1
 1805 02b2 0503     		.2byte	0x305
 1806 02b4 6F000000 		.4byte	0x6f
 1807 02b8 02       		.byte	0x2
 1808 02b9 91       		.byte	0x91
 1809 02ba 6F       		.sleb128 -17
 1810 02bb 00       		.byte	0
 1811 02bc 0B       		.uleb128 0xb
 1812 02bd 01       		.byte	0x1
 1813 02be AE020000 		.4byte	.LASF37
 1814 02c2 01       		.byte	0x1
 1815 02c3 4003     		.2byte	0x340
 1816 02c5 01       		.byte	0x1
 1817 02c6 00000000 		.4byte	.LFB13
 1818 02ca 12000000 		.4byte	.LFE13
 1819 02ce A8020000 		.4byte	.LLST13
 1820 02d2 01       		.byte	0x1
 1821 02d3 E7020000 		.4byte	0x2e7
 1822 02d7 0C       		.uleb128 0xc
 1823 02d8 DA000000 		.4byte	.LASF38
 1824 02dc 01       		.byte	0x1
 1825 02dd 4003     		.2byte	0x340
 1826 02df 6F000000 		.4byte	0x6f
 1827 02e3 02       		.byte	0x2
 1828 02e4 91       		.byte	0x91
 1829 02e5 77       		.sleb128 -9
 1830 02e6 00       		.byte	0
 1831 02e7 0B       		.uleb128 0xb
 1832 02e8 01       		.byte	0x1
 1833 02e9 0E020000 		.4byte	.LASF39
 1834 02ed 01       		.byte	0x1
 1835 02ee 6503     		.2byte	0x365
 1836 02f0 01       		.byte	0x1
 1837 02f1 00000000 		.4byte	.LFB14
 1838 02f5 20000000 		.4byte	.LFE14
 1839 02f9 E0020000 		.4byte	.LLST14
 1840 02fd 01       		.byte	0x1
 1841 02fe 12030000 		.4byte	0x312
 1842 0302 0C       		.uleb128 0xc
 1843 0303 38020000 		.4byte	.LASF40
 1844 0307 01       		.byte	0x1
 1845 0308 6503     		.2byte	0x365
 1846 030a 6F000000 		.4byte	0x6f
 1847 030e 02       		.byte	0x2
 1848 030f 91       		.byte	0x91
 1849 0310 77       		.sleb128 -9
 1850 0311 00       		.byte	0
 1851 0312 0B       		.uleb128 0xb
 1852 0313 01       		.byte	0x1
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 62


 1853 0314 23020000 		.4byte	.LASF41
 1854 0318 01       		.byte	0x1
 1855 0319 7A03     		.2byte	0x37a
 1856 031b 01       		.byte	0x1
 1857 031c 00000000 		.4byte	.LFB15
 1858 0320 20000000 		.4byte	.LFE15
 1859 0324 18030000 		.4byte	.LLST15
 1860 0328 01       		.byte	0x1
 1861 0329 3D030000 		.4byte	0x33d
 1862 032d 0C       		.uleb128 0xc
 1863 032e 38020000 		.4byte	.LASF40
 1864 0332 01       		.byte	0x1
 1865 0333 7A03     		.2byte	0x37a
 1866 0335 6F000000 		.4byte	0x6f
 1867 0339 02       		.byte	0x2
 1868 033a 91       		.byte	0x91
 1869 033b 77       		.sleb128 -9
 1870 033c 00       		.byte	0
 1871 033d 0B       		.uleb128 0xb
 1872 033e 01       		.byte	0x1
 1873 033f 68020000 		.4byte	.LASF42
 1874 0343 01       		.byte	0x1
 1875 0344 C803     		.2byte	0x3c8
 1876 0346 01       		.byte	0x1
 1877 0347 00000000 		.4byte	.LFB16
 1878 034b 20000000 		.4byte	.LFE16
 1879 034f 50030000 		.4byte	.LLST16
 1880 0353 01       		.byte	0x1
 1881 0354 68030000 		.4byte	0x368
 1882 0358 0C       		.uleb128 0xc
 1883 0359 AD010000 		.4byte	.LASF25
 1884 035d 01       		.byte	0x1
 1885 035e C803     		.2byte	0x3c8
 1886 0360 6F000000 		.4byte	0x6f
 1887 0364 02       		.byte	0x2
 1888 0365 91       		.byte	0x91
 1889 0366 77       		.sleb128 -9
 1890 0367 00       		.byte	0
 1891 0368 0B       		.uleb128 0xb
 1892 0369 01       		.byte	0x1
 1893 036a EA010000 		.4byte	.LASF43
 1894 036e 01       		.byte	0x1
 1895 036f EA03     		.2byte	0x3ea
 1896 0371 01       		.byte	0x1
 1897 0372 00000000 		.4byte	.LFB17
 1898 0376 2C000000 		.4byte	.LFE17
 1899 037a 88030000 		.4byte	.LLST17
 1900 037e 01       		.byte	0x1
 1901 037f 93030000 		.4byte	0x393
 1902 0383 0C       		.uleb128 0xc
 1903 0384 1C000000 		.4byte	.LASF44
 1904 0388 01       		.byte	0x1
 1905 0389 EA03     		.2byte	0x3ea
 1906 038b 6F000000 		.4byte	0x6f
 1907 038f 02       		.byte	0x2
 1908 0390 91       		.byte	0x91
 1909 0391 77       		.sleb128 -9
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 63


 1910 0392 00       		.byte	0
 1911 0393 0A       		.uleb128 0xa
 1912 0394 01       		.byte	0x1
 1913 0395 3F010000 		.4byte	.LASF45
 1914 0399 01       		.byte	0x1
 1915 039a 2E04     		.2byte	0x42e
 1916 039c 01       		.byte	0x1
 1917 039d 6F000000 		.4byte	0x6f
 1918 03a1 00000000 		.4byte	.LFB18
 1919 03a5 14000000 		.4byte	.LFE18
 1920 03a9 C0030000 		.4byte	.LLST18
 1921 03ad 01       		.byte	0x1
 1922 03ae 0B       		.uleb128 0xb
 1923 03af 01       		.byte	0x1
 1924 03b0 27000000 		.4byte	.LASF46
 1925 03b4 01       		.byte	0x1
 1926 03b5 5204     		.2byte	0x452
 1927 03b7 01       		.byte	0x1
 1928 03b8 00000000 		.4byte	.LFB19
 1929 03bc 34000000 		.4byte	.LFE19
 1930 03c0 EC030000 		.4byte	.LLST19
 1931 03c4 01       		.byte	0x1
 1932 03c5 D9030000 		.4byte	0x3d9
 1933 03c9 0C       		.uleb128 0xc
 1934 03ca 1C000000 		.4byte	.LASF44
 1935 03ce 01       		.byte	0x1
 1936 03cf 5204     		.2byte	0x452
 1937 03d1 6F000000 		.4byte	0x6f
 1938 03d5 02       		.byte	0x2
 1939 03d6 91       		.byte	0x91
 1940 03d7 77       		.sleb128 -9
 1941 03d8 00       		.byte	0
 1942 03d9 10       		.uleb128 0x10
 1943 03da 01       		.byte	0x1
 1944 03db 88020000 		.4byte	.LASF47
 1945 03df 01       		.byte	0x1
 1946 03e0 AE04     		.2byte	0x4ae
 1947 03e2 01       		.byte	0x1
 1948 03e3 00000000 		.4byte	.LFB20
 1949 03e7 54000000 		.4byte	.LFE20
 1950 03eb 24040000 		.4byte	.LLST20
 1951 03ef 01       		.byte	0x1
 1952 03f0 13040000 		.4byte	0x413
 1953 03f4 0C       		.uleb128 0xc
 1954 03f5 36000000 		.4byte	.LASF48
 1955 03f9 01       		.byte	0x1
 1956 03fa AE04     		.2byte	0x4ae
 1957 03fc 13040000 		.4byte	0x413
 1958 0400 02       		.byte	0x2
 1959 0401 91       		.byte	0x91
 1960 0402 6C       		.sleb128 -20
 1961 0403 0E       		.uleb128 0xe
 1962 0404 D1030000 		.4byte	.LASF49
 1963 0408 01       		.byte	0x1
 1964 0409 B004     		.2byte	0x4b0
 1965 040b 7A000000 		.4byte	0x7a
 1966 040f 02       		.byte	0x2
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 64


 1967 0410 91       		.byte	0x91
 1968 0411 76       		.sleb128 -10
 1969 0412 00       		.byte	0
 1970 0413 11       		.uleb128 0x11
 1971 0414 04       		.byte	0x4
 1972 0415 19040000 		.4byte	0x419
 1973 0419 12       		.uleb128 0x12
 1974 041a 93000000 		.4byte	0x93
 1975 041e 10       		.uleb128 0x10
 1976 041f 01       		.byte	0x1
 1977 0420 DB030000 		.4byte	.LASF50
 1978 0424 01       		.byte	0x1
 1979 0425 D404     		.2byte	0x4d4
 1980 0427 01       		.byte	0x1
 1981 0428 00000000 		.4byte	.LFB21
 1982 042c 58000000 		.4byte	.LFE21
 1983 0430 5C040000 		.4byte	.LLST21
 1984 0434 01       		.byte	0x1
 1985 0435 67040000 		.4byte	0x467
 1986 0439 0C       		.uleb128 0xc
 1987 043a 36000000 		.4byte	.LASF48
 1988 043e 01       		.byte	0x1
 1989 043f D404     		.2byte	0x4d4
 1990 0441 67040000 		.4byte	0x467
 1991 0445 02       		.byte	0x2
 1992 0446 91       		.byte	0x91
 1993 0447 6C       		.sleb128 -20
 1994 0448 0C       		.uleb128 0xc
 1995 0449 57030000 		.4byte	.LASF51
 1996 044d 01       		.byte	0x1
 1997 044e D404     		.2byte	0x4d4
 1998 0450 6F000000 		.4byte	0x6f
 1999 0454 02       		.byte	0x2
 2000 0455 91       		.byte	0x91
 2001 0456 6B       		.sleb128 -21
 2002 0457 0E       		.uleb128 0xe
 2003 0458 D1030000 		.4byte	.LASF49
 2004 045c 01       		.byte	0x1
 2005 045d D704     		.2byte	0x4d7
 2006 045f 6F000000 		.4byte	0x6f
 2007 0463 02       		.byte	0x2
 2008 0464 91       		.byte	0x91
 2009 0465 77       		.sleb128 -9
 2010 0466 00       		.byte	0
 2011 0467 11       		.uleb128 0x11
 2012 0468 04       		.byte	0x4
 2013 0469 6D040000 		.4byte	0x46d
 2014 046d 12       		.uleb128 0x12
 2015 046e 6F000000 		.4byte	0x6f
 2016 0472 10       		.uleb128 0x10
 2017 0473 01       		.byte	0x1
 2018 0474 A8000000 		.4byte	.LASF52
 2019 0478 01       		.byte	0x1
 2020 0479 F904     		.2byte	0x4f9
 2021 047b 01       		.byte	0x1
 2022 047c 00000000 		.4byte	.LFB22
 2023 0480 34000000 		.4byte	.LFE22
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 65


 2024 0484 94040000 		.4byte	.LLST22
 2025 0488 01       		.byte	0x1
 2026 0489 9D040000 		.4byte	0x49d
 2027 048d 0C       		.uleb128 0xc
 2028 048e 1C000000 		.4byte	.LASF44
 2029 0492 01       		.byte	0x1
 2030 0493 F904     		.2byte	0x4f9
 2031 0495 6F000000 		.4byte	0x6f
 2032 0499 02       		.byte	0x2
 2033 049a 91       		.byte	0x91
 2034 049b 77       		.sleb128 -9
 2035 049c 00       		.byte	0
 2036 049d 0D       		.uleb128 0xd
 2037 049e 01       		.byte	0x1
 2038 049f 77000000 		.4byte	.LASF53
 2039 04a3 01       		.byte	0x1
 2040 04a4 1E05     		.2byte	0x51e
 2041 04a6 01       		.byte	0x1
 2042 04a7 6F000000 		.4byte	0x6f
 2043 04ab 00000000 		.4byte	.LFB23
 2044 04af 48000000 		.4byte	.LFE23
 2045 04b3 CC040000 		.4byte	.LLST23
 2046 04b7 01       		.byte	0x1
 2047 04b8 CC040000 		.4byte	0x4cc
 2048 04bc 0E       		.uleb128 0xe
 2049 04bd 65010000 		.4byte	.LASF35
 2050 04c1 01       		.byte	0x1
 2051 04c2 2105     		.2byte	0x521
 2052 04c4 6F000000 		.4byte	0x6f
 2053 04c8 02       		.byte	0x2
 2054 04c9 91       		.byte	0x91
 2055 04ca 77       		.sleb128 -9
 2056 04cb 00       		.byte	0
 2057 04cc 10       		.uleb128 0x10
 2058 04cd 01       		.byte	0x1
 2059 04ce 07000000 		.4byte	.LASF54
 2060 04d2 01       		.byte	0x1
 2061 04d3 7405     		.2byte	0x574
 2062 04d5 01       		.byte	0x1
 2063 04d6 00000000 		.4byte	.LFB24
 2064 04da 44000000 		.4byte	.LFE24
 2065 04de 04050000 		.4byte	.LLST24
 2066 04e2 01       		.byte	0x1
 2067 04e3 F7040000 		.4byte	0x4f7
 2068 04e7 0E       		.uleb128 0xe
 2069 04e8 96030000 		.4byte	.LASF21
 2070 04ec 01       		.byte	0x1
 2071 04ed 7605     		.2byte	0x576
 2072 04ef 6F000000 		.4byte	0x6f
 2073 04f3 02       		.byte	0x2
 2074 04f4 91       		.byte	0x91
 2075 04f5 6F       		.sleb128 -17
 2076 04f6 00       		.byte	0
 2077 04f7 0B       		.uleb128 0xb
 2078 04f8 01       		.byte	0x1
 2079 04f9 3D000000 		.4byte	.LASF55
 2080 04fd 01       		.byte	0x1
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 66


 2081 04fe CD05     		.2byte	0x5cd
 2082 0500 01       		.byte	0x1
 2083 0501 00000000 		.4byte	.LFB25
 2084 0505 B8000000 		.4byte	.LFE25
 2085 0509 3C050000 		.4byte	.LLST25
 2086 050d 01       		.byte	0x1
 2087 050e 4D050000 		.4byte	0x54d
 2088 0512 0C       		.uleb128 0xc
 2089 0513 2A010000 		.4byte	.LASF56
 2090 0517 01       		.byte	0x1
 2091 0518 CD05     		.2byte	0x5cd
 2092 051a 6F000000 		.4byte	0x6f
 2093 051e 02       		.byte	0x2
 2094 051f 91       		.byte	0x91
 2095 0520 6F       		.sleb128 -17
 2096 0521 13       		.uleb128 0x13
 2097 0522 14000000 		.4byte	.LBB2
 2098 0526 9C000000 		.4byte	.LBE2
 2099 052a 0E       		.uleb128 0xe
 2100 052b FD010000 		.4byte	.LASF57
 2101 052f 01       		.byte	0x1
 2102 0530 D505     		.2byte	0x5d5
 2103 0532 6F000000 		.4byte	0x6f
 2104 0536 02       		.byte	0x2
 2105 0537 91       		.byte	0x91
 2106 0538 77       		.sleb128 -9
 2107 0539 0E       		.uleb128 0xe
 2108 053a A3010000 		.4byte	.LASF58
 2109 053e 01       		.byte	0x1
 2110 053f FB05     		.2byte	0x5fb
 2111 0541 6F000000 		.4byte	0x6f
 2112 0545 05       		.byte	0x5
 2113 0546 03       		.byte	0x3
 2114 0547 01000000 		.4byte	tx_period.4761
 2115 054b 00       		.byte	0
 2116 054c 00       		.byte	0
 2117 054d 0B       		.uleb128 0xb
 2118 054e 01       		.byte	0x1
 2119 054f 8B010000 		.4byte	.LASF59
 2120 0553 01       		.byte	0x1
 2121 0554 4606     		.2byte	0x646
 2122 0556 01       		.byte	0x1
 2123 0557 00000000 		.4byte	.LFB26
 2124 055b 12000000 		.4byte	.LFE26
 2125 055f 74050000 		.4byte	.LLST26
 2126 0563 01       		.byte	0x1
 2127 0564 78050000 		.4byte	0x578
 2128 0568 0C       		.uleb128 0xc
 2129 0569 DA000000 		.4byte	.LASF38
 2130 056d 01       		.byte	0x1
 2131 056e 4606     		.2byte	0x646
 2132 0570 6F000000 		.4byte	0x6f
 2133 0574 02       		.byte	0x2
 2134 0575 91       		.byte	0x91
 2135 0576 77       		.sleb128 -9
 2136 0577 00       		.byte	0
 2137 0578 14       		.uleb128 0x14
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 67


 2138 0579 48030000 		.4byte	.LASF63
 2139 057d 01       		.byte	0x1
 2140 057e 1C       		.byte	0x1c
 2141 057f 6F000000 		.4byte	0x6f
 2142 0583 01       		.byte	0x1
 2143 0584 05       		.byte	0x5
 2144 0585 03       		.byte	0x3
 2145 0586 00000000 		.4byte	UART_1_initVar
 2146 058a 00       		.byte	0
 2147              		.section	.debug_abbrev,"",%progbits
 2148              	.Ldebug_abbrev0:
 2149 0000 01       		.uleb128 0x1
 2150 0001 11       		.uleb128 0x11
 2151 0002 01       		.byte	0x1
 2152 0003 25       		.uleb128 0x25
 2153 0004 0E       		.uleb128 0xe
 2154 0005 13       		.uleb128 0x13
 2155 0006 0B       		.uleb128 0xb
 2156 0007 03       		.uleb128 0x3
 2157 0008 0E       		.uleb128 0xe
 2158 0009 1B       		.uleb128 0x1b
 2159 000a 0E       		.uleb128 0xe
 2160 000b 55       		.uleb128 0x55
 2161 000c 06       		.uleb128 0x6
 2162 000d 11       		.uleb128 0x11
 2163 000e 01       		.uleb128 0x1
 2164 000f 52       		.uleb128 0x52
 2165 0010 01       		.uleb128 0x1
 2166 0011 10       		.uleb128 0x10
 2167 0012 06       		.uleb128 0x6
 2168 0013 00       		.byte	0
 2169 0014 00       		.byte	0
 2170 0015 02       		.uleb128 0x2
 2171 0016 24       		.uleb128 0x24
 2172 0017 00       		.byte	0
 2173 0018 0B       		.uleb128 0xb
 2174 0019 0B       		.uleb128 0xb
 2175 001a 3E       		.uleb128 0x3e
 2176 001b 0B       		.uleb128 0xb
 2177 001c 03       		.uleb128 0x3
 2178 001d 0E       		.uleb128 0xe
 2179 001e 00       		.byte	0
 2180 001f 00       		.byte	0
 2181 0020 03       		.uleb128 0x3
 2182 0021 24       		.uleb128 0x24
 2183 0022 00       		.byte	0
 2184 0023 0B       		.uleb128 0xb
 2185 0024 0B       		.uleb128 0xb
 2186 0025 3E       		.uleb128 0x3e
 2187 0026 0B       		.uleb128 0xb
 2188 0027 03       		.uleb128 0x3
 2189 0028 08       		.uleb128 0x8
 2190 0029 00       		.byte	0
 2191 002a 00       		.byte	0
 2192 002b 04       		.uleb128 0x4
 2193 002c 16       		.uleb128 0x16
 2194 002d 00       		.byte	0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 68


 2195 002e 03       		.uleb128 0x3
 2196 002f 0E       		.uleb128 0xe
 2197 0030 3A       		.uleb128 0x3a
 2198 0031 0B       		.uleb128 0xb
 2199 0032 3B       		.uleb128 0x3b
 2200 0033 0B       		.uleb128 0xb
 2201 0034 49       		.uleb128 0x49
 2202 0035 13       		.uleb128 0x13
 2203 0036 00       		.byte	0
 2204 0037 00       		.byte	0
 2205 0038 05       		.uleb128 0x5
 2206 0039 35       		.uleb128 0x35
 2207 003a 00       		.byte	0
 2208 003b 49       		.uleb128 0x49
 2209 003c 13       		.uleb128 0x13
 2210 003d 00       		.byte	0
 2211 003e 00       		.byte	0
 2212 003f 06       		.uleb128 0x6
 2213 0040 2E       		.uleb128 0x2e
 2214 0041 00       		.byte	0
 2215 0042 3F       		.uleb128 0x3f
 2216 0043 0C       		.uleb128 0xc
 2217 0044 03       		.uleb128 0x3
 2218 0045 0E       		.uleb128 0xe
 2219 0046 3A       		.uleb128 0x3a
 2220 0047 0B       		.uleb128 0xb
 2221 0048 3B       		.uleb128 0x3b
 2222 0049 0B       		.uleb128 0xb
 2223 004a 27       		.uleb128 0x27
 2224 004b 0C       		.uleb128 0xc
 2225 004c 11       		.uleb128 0x11
 2226 004d 01       		.uleb128 0x1
 2227 004e 12       		.uleb128 0x12
 2228 004f 01       		.uleb128 0x1
 2229 0050 40       		.uleb128 0x40
 2230 0051 06       		.uleb128 0x6
 2231 0052 9642     		.uleb128 0x2116
 2232 0054 0C       		.uleb128 0xc
 2233 0055 00       		.byte	0
 2234 0056 00       		.byte	0
 2235 0057 07       		.uleb128 0x7
 2236 0058 2E       		.uleb128 0x2e
 2237 0059 00       		.byte	0
 2238 005a 3F       		.uleb128 0x3f
 2239 005b 0C       		.uleb128 0xc
 2240 005c 03       		.uleb128 0x3
 2241 005d 0E       		.uleb128 0xe
 2242 005e 3A       		.uleb128 0x3a
 2243 005f 0B       		.uleb128 0xb
 2244 0060 3B       		.uleb128 0x3b
 2245 0061 0B       		.uleb128 0xb
 2246 0062 27       		.uleb128 0x27
 2247 0063 0C       		.uleb128 0xc
 2248 0064 11       		.uleb128 0x11
 2249 0065 01       		.uleb128 0x1
 2250 0066 12       		.uleb128 0x12
 2251 0067 01       		.uleb128 0x1
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 69


 2252 0068 40       		.uleb128 0x40
 2253 0069 06       		.uleb128 0x6
 2254 006a 9742     		.uleb128 0x2117
 2255 006c 0C       		.uleb128 0xc
 2256 006d 00       		.byte	0
 2257 006e 00       		.byte	0
 2258 006f 08       		.uleb128 0x8
 2259 0070 2E       		.uleb128 0x2e
 2260 0071 01       		.byte	0x1
 2261 0072 3F       		.uleb128 0x3f
 2262 0073 0C       		.uleb128 0xc
 2263 0074 03       		.uleb128 0x3
 2264 0075 0E       		.uleb128 0xe
 2265 0076 3A       		.uleb128 0x3a
 2266 0077 0B       		.uleb128 0xb
 2267 0078 3B       		.uleb128 0x3b
 2268 0079 0B       		.uleb128 0xb
 2269 007a 27       		.uleb128 0x27
 2270 007b 0C       		.uleb128 0xc
 2271 007c 11       		.uleb128 0x11
 2272 007d 01       		.uleb128 0x1
 2273 007e 12       		.uleb128 0x12
 2274 007f 01       		.uleb128 0x1
 2275 0080 40       		.uleb128 0x40
 2276 0081 06       		.uleb128 0x6
 2277 0082 9642     		.uleb128 0x2116
 2278 0084 0C       		.uleb128 0xc
 2279 0085 01       		.uleb128 0x1
 2280 0086 13       		.uleb128 0x13
 2281 0087 00       		.byte	0
 2282 0088 00       		.byte	0
 2283 0089 09       		.uleb128 0x9
 2284 008a 34       		.uleb128 0x34
 2285 008b 00       		.byte	0
 2286 008c 03       		.uleb128 0x3
 2287 008d 0E       		.uleb128 0xe
 2288 008e 3A       		.uleb128 0x3a
 2289 008f 0B       		.uleb128 0xb
 2290 0090 3B       		.uleb128 0x3b
 2291 0091 0B       		.uleb128 0xb
 2292 0092 49       		.uleb128 0x49
 2293 0093 13       		.uleb128 0x13
 2294 0094 02       		.uleb128 0x2
 2295 0095 0A       		.uleb128 0xa
 2296 0096 00       		.byte	0
 2297 0097 00       		.byte	0
 2298 0098 0A       		.uleb128 0xa
 2299 0099 2E       		.uleb128 0x2e
 2300 009a 00       		.byte	0
 2301 009b 3F       		.uleb128 0x3f
 2302 009c 0C       		.uleb128 0xc
 2303 009d 03       		.uleb128 0x3
 2304 009e 0E       		.uleb128 0xe
 2305 009f 3A       		.uleb128 0x3a
 2306 00a0 0B       		.uleb128 0xb
 2307 00a1 3B       		.uleb128 0x3b
 2308 00a2 05       		.uleb128 0x5
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 70


 2309 00a3 27       		.uleb128 0x27
 2310 00a4 0C       		.uleb128 0xc
 2311 00a5 49       		.uleb128 0x49
 2312 00a6 13       		.uleb128 0x13
 2313 00a7 11       		.uleb128 0x11
 2314 00a8 01       		.uleb128 0x1
 2315 00a9 12       		.uleb128 0x12
 2316 00aa 01       		.uleb128 0x1
 2317 00ab 40       		.uleb128 0x40
 2318 00ac 06       		.uleb128 0x6
 2319 00ad 9742     		.uleb128 0x2117
 2320 00af 0C       		.uleb128 0xc
 2321 00b0 00       		.byte	0
 2322 00b1 00       		.byte	0
 2323 00b2 0B       		.uleb128 0xb
 2324 00b3 2E       		.uleb128 0x2e
 2325 00b4 01       		.byte	0x1
 2326 00b5 3F       		.uleb128 0x3f
 2327 00b6 0C       		.uleb128 0xc
 2328 00b7 03       		.uleb128 0x3
 2329 00b8 0E       		.uleb128 0xe
 2330 00b9 3A       		.uleb128 0x3a
 2331 00ba 0B       		.uleb128 0xb
 2332 00bb 3B       		.uleb128 0x3b
 2333 00bc 05       		.uleb128 0x5
 2334 00bd 27       		.uleb128 0x27
 2335 00be 0C       		.uleb128 0xc
 2336 00bf 11       		.uleb128 0x11
 2337 00c0 01       		.uleb128 0x1
 2338 00c1 12       		.uleb128 0x12
 2339 00c2 01       		.uleb128 0x1
 2340 00c3 40       		.uleb128 0x40
 2341 00c4 06       		.uleb128 0x6
 2342 00c5 9742     		.uleb128 0x2117
 2343 00c7 0C       		.uleb128 0xc
 2344 00c8 01       		.uleb128 0x1
 2345 00c9 13       		.uleb128 0x13
 2346 00ca 00       		.byte	0
 2347 00cb 00       		.byte	0
 2348 00cc 0C       		.uleb128 0xc
 2349 00cd 05       		.uleb128 0x5
 2350 00ce 00       		.byte	0
 2351 00cf 03       		.uleb128 0x3
 2352 00d0 0E       		.uleb128 0xe
 2353 00d1 3A       		.uleb128 0x3a
 2354 00d2 0B       		.uleb128 0xb
 2355 00d3 3B       		.uleb128 0x3b
 2356 00d4 05       		.uleb128 0x5
 2357 00d5 49       		.uleb128 0x49
 2358 00d6 13       		.uleb128 0x13
 2359 00d7 02       		.uleb128 0x2
 2360 00d8 0A       		.uleb128 0xa
 2361 00d9 00       		.byte	0
 2362 00da 00       		.byte	0
 2363 00db 0D       		.uleb128 0xd
 2364 00dc 2E       		.uleb128 0x2e
 2365 00dd 01       		.byte	0x1
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 71


 2366 00de 3F       		.uleb128 0x3f
 2367 00df 0C       		.uleb128 0xc
 2368 00e0 03       		.uleb128 0x3
 2369 00e1 0E       		.uleb128 0xe
 2370 00e2 3A       		.uleb128 0x3a
 2371 00e3 0B       		.uleb128 0xb
 2372 00e4 3B       		.uleb128 0x3b
 2373 00e5 05       		.uleb128 0x5
 2374 00e6 27       		.uleb128 0x27
 2375 00e7 0C       		.uleb128 0xc
 2376 00e8 49       		.uleb128 0x49
 2377 00e9 13       		.uleb128 0x13
 2378 00ea 11       		.uleb128 0x11
 2379 00eb 01       		.uleb128 0x1
 2380 00ec 12       		.uleb128 0x12
 2381 00ed 01       		.uleb128 0x1
 2382 00ee 40       		.uleb128 0x40
 2383 00ef 06       		.uleb128 0x6
 2384 00f0 9742     		.uleb128 0x2117
 2385 00f2 0C       		.uleb128 0xc
 2386 00f3 01       		.uleb128 0x1
 2387 00f4 13       		.uleb128 0x13
 2388 00f5 00       		.byte	0
 2389 00f6 00       		.byte	0
 2390 00f7 0E       		.uleb128 0xe
 2391 00f8 34       		.uleb128 0x34
 2392 00f9 00       		.byte	0
 2393 00fa 03       		.uleb128 0x3
 2394 00fb 0E       		.uleb128 0xe
 2395 00fc 3A       		.uleb128 0x3a
 2396 00fd 0B       		.uleb128 0xb
 2397 00fe 3B       		.uleb128 0x3b
 2398 00ff 05       		.uleb128 0x5
 2399 0100 49       		.uleb128 0x49
 2400 0101 13       		.uleb128 0x13
 2401 0102 02       		.uleb128 0x2
 2402 0103 0A       		.uleb128 0xa
 2403 0104 00       		.byte	0
 2404 0105 00       		.byte	0
 2405 0106 0F       		.uleb128 0xf
 2406 0107 2E       		.uleb128 0x2e
 2407 0108 00       		.byte	0
 2408 0109 3F       		.uleb128 0x3f
 2409 010a 0C       		.uleb128 0xc
 2410 010b 03       		.uleb128 0x3
 2411 010c 0E       		.uleb128 0xe
 2412 010d 3A       		.uleb128 0x3a
 2413 010e 0B       		.uleb128 0xb
 2414 010f 3B       		.uleb128 0x3b
 2415 0110 05       		.uleb128 0x5
 2416 0111 27       		.uleb128 0x27
 2417 0112 0C       		.uleb128 0xc
 2418 0113 49       		.uleb128 0x49
 2419 0114 13       		.uleb128 0x13
 2420 0115 11       		.uleb128 0x11
 2421 0116 01       		.uleb128 0x1
 2422 0117 12       		.uleb128 0x12
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 72


 2423 0118 01       		.uleb128 0x1
 2424 0119 40       		.uleb128 0x40
 2425 011a 06       		.uleb128 0x6
 2426 011b 9642     		.uleb128 0x2116
 2427 011d 0C       		.uleb128 0xc
 2428 011e 00       		.byte	0
 2429 011f 00       		.byte	0
 2430 0120 10       		.uleb128 0x10
 2431 0121 2E       		.uleb128 0x2e
 2432 0122 01       		.byte	0x1
 2433 0123 3F       		.uleb128 0x3f
 2434 0124 0C       		.uleb128 0xc
 2435 0125 03       		.uleb128 0x3
 2436 0126 0E       		.uleb128 0xe
 2437 0127 3A       		.uleb128 0x3a
 2438 0128 0B       		.uleb128 0xb
 2439 0129 3B       		.uleb128 0x3b
 2440 012a 05       		.uleb128 0x5
 2441 012b 27       		.uleb128 0x27
 2442 012c 0C       		.uleb128 0xc
 2443 012d 11       		.uleb128 0x11
 2444 012e 01       		.uleb128 0x1
 2445 012f 12       		.uleb128 0x12
 2446 0130 01       		.uleb128 0x1
 2447 0131 40       		.uleb128 0x40
 2448 0132 06       		.uleb128 0x6
 2449 0133 9642     		.uleb128 0x2116
 2450 0135 0C       		.uleb128 0xc
 2451 0136 01       		.uleb128 0x1
 2452 0137 13       		.uleb128 0x13
 2453 0138 00       		.byte	0
 2454 0139 00       		.byte	0
 2455 013a 11       		.uleb128 0x11
 2456 013b 0F       		.uleb128 0xf
 2457 013c 00       		.byte	0
 2458 013d 0B       		.uleb128 0xb
 2459 013e 0B       		.uleb128 0xb
 2460 013f 49       		.uleb128 0x49
 2461 0140 13       		.uleb128 0x13
 2462 0141 00       		.byte	0
 2463 0142 00       		.byte	0
 2464 0143 12       		.uleb128 0x12
 2465 0144 26       		.uleb128 0x26
 2466 0145 00       		.byte	0
 2467 0146 49       		.uleb128 0x49
 2468 0147 13       		.uleb128 0x13
 2469 0148 00       		.byte	0
 2470 0149 00       		.byte	0
 2471 014a 13       		.uleb128 0x13
 2472 014b 0B       		.uleb128 0xb
 2473 014c 01       		.byte	0x1
 2474 014d 11       		.uleb128 0x11
 2475 014e 01       		.uleb128 0x1
 2476 014f 12       		.uleb128 0x12
 2477 0150 01       		.uleb128 0x1
 2478 0151 00       		.byte	0
 2479 0152 00       		.byte	0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 73


 2480 0153 14       		.uleb128 0x14
 2481 0154 34       		.uleb128 0x34
 2482 0155 00       		.byte	0
 2483 0156 03       		.uleb128 0x3
 2484 0157 0E       		.uleb128 0xe
 2485 0158 3A       		.uleb128 0x3a
 2486 0159 0B       		.uleb128 0xb
 2487 015a 3B       		.uleb128 0x3b
 2488 015b 0B       		.uleb128 0xb
 2489 015c 49       		.uleb128 0x49
 2490 015d 13       		.uleb128 0x13
 2491 015e 3F       		.uleb128 0x3f
 2492 015f 0C       		.uleb128 0xc
 2493 0160 02       		.uleb128 0x2
 2494 0161 0A       		.uleb128 0xa
 2495 0162 00       		.byte	0
 2496 0163 00       		.byte	0
 2497 0164 00       		.byte	0
 2498              		.section	.debug_loc,"",%progbits
 2499              	.Ldebug_loc0:
 2500              	.LLST0:
 2501 0000 00000000 		.4byte	.LFB0
 2502 0004 02000000 		.4byte	.LCFI0
 2503 0008 0200     		.2byte	0x2
 2504 000a 7D       		.byte	0x7d
 2505 000b 00       		.sleb128 0
 2506 000c 02000000 		.4byte	.LCFI0
 2507 0010 04000000 		.4byte	.LCFI1
 2508 0014 0200     		.2byte	0x2
 2509 0016 7D       		.byte	0x7d
 2510 0017 08       		.sleb128 8
 2511 0018 04000000 		.4byte	.LCFI1
 2512 001c 24000000 		.4byte	.LFE0
 2513 0020 0200     		.2byte	0x2
 2514 0022 77       		.byte	0x77
 2515 0023 08       		.sleb128 8
 2516 0024 00000000 		.4byte	0
 2517 0028 00000000 		.4byte	0
 2518              	.LLST1:
 2519 002c 00000000 		.4byte	.LFB1
 2520 0030 02000000 		.4byte	.LCFI2
 2521 0034 0200     		.2byte	0x2
 2522 0036 7D       		.byte	0x7d
 2523 0037 00       		.sleb128 0
 2524 0038 02000000 		.4byte	.LCFI2
 2525 003c 04000000 		.4byte	.LCFI3
 2526 0040 0200     		.2byte	0x2
 2527 0042 7D       		.byte	0x7d
 2528 0043 08       		.sleb128 8
 2529 0044 04000000 		.4byte	.LCFI3
 2530 0048 3C000000 		.4byte	.LFE1
 2531 004c 0200     		.2byte	0x2
 2532 004e 77       		.byte	0x77
 2533 004f 08       		.sleb128 8
 2534 0050 00000000 		.4byte	0
 2535 0054 00000000 		.4byte	0
 2536              	.LLST2:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 74


 2537 0058 00000000 		.4byte	.LFB2
 2538 005c 02000000 		.4byte	.LCFI4
 2539 0060 0200     		.2byte	0x2
 2540 0062 7D       		.byte	0x7d
 2541 0063 00       		.sleb128 0
 2542 0064 02000000 		.4byte	.LCFI4
 2543 0068 04000000 		.4byte	.LCFI5
 2544 006c 0200     		.2byte	0x2
 2545 006e 7D       		.byte	0x7d
 2546 006f 0C       		.sleb128 12
 2547 0070 04000000 		.4byte	.LCFI5
 2548 0074 06000000 		.4byte	.LCFI6
 2549 0078 0200     		.2byte	0x2
 2550 007a 7D       		.byte	0x7d
 2551 007b 18       		.sleb128 24
 2552 007c 06000000 		.4byte	.LCFI6
 2553 0080 60000000 		.4byte	.LFE2
 2554 0084 0200     		.2byte	0x2
 2555 0086 77       		.byte	0x77
 2556 0087 18       		.sleb128 24
 2557 0088 00000000 		.4byte	0
 2558 008c 00000000 		.4byte	0
 2559              	.LLST3:
 2560 0090 00000000 		.4byte	.LFB3
 2561 0094 02000000 		.4byte	.LCFI7
 2562 0098 0200     		.2byte	0x2
 2563 009a 7D       		.byte	0x7d
 2564 009b 00       		.sleb128 0
 2565 009c 02000000 		.4byte	.LCFI7
 2566 00a0 04000000 		.4byte	.LCFI8
 2567 00a4 0200     		.2byte	0x2
 2568 00a6 7D       		.byte	0x7d
 2569 00a7 0C       		.sleb128 12
 2570 00a8 04000000 		.4byte	.LCFI8
 2571 00ac 06000000 		.4byte	.LCFI9
 2572 00b0 0200     		.2byte	0x2
 2573 00b2 7D       		.byte	0x7d
 2574 00b3 18       		.sleb128 24
 2575 00b4 06000000 		.4byte	.LCFI9
 2576 00b8 60000000 		.4byte	.LFE3
 2577 00bc 0200     		.2byte	0x2
 2578 00be 77       		.byte	0x77
 2579 00bf 18       		.sleb128 24
 2580 00c0 00000000 		.4byte	0
 2581 00c4 00000000 		.4byte	0
 2582              	.LLST4:
 2583 00c8 00000000 		.4byte	.LFB4
 2584 00cc 02000000 		.4byte	.LCFI10
 2585 00d0 0200     		.2byte	0x2
 2586 00d2 7D       		.byte	0x7d
 2587 00d3 00       		.sleb128 0
 2588 00d4 02000000 		.4byte	.LCFI10
 2589 00d8 04000000 		.4byte	.LCFI11
 2590 00dc 0200     		.2byte	0x2
 2591 00de 7D       		.byte	0x7d
 2592 00df 08       		.sleb128 8
 2593 00e0 04000000 		.4byte	.LCFI11
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 75


 2594 00e4 0C000000 		.4byte	.LFE4
 2595 00e8 0200     		.2byte	0x2
 2596 00ea 77       		.byte	0x77
 2597 00eb 08       		.sleb128 8
 2598 00ec 00000000 		.4byte	0
 2599 00f0 00000000 		.4byte	0
 2600              	.LLST5:
 2601 00f4 00000000 		.4byte	.LFB5
 2602 00f8 02000000 		.4byte	.LCFI12
 2603 00fc 0200     		.2byte	0x2
 2604 00fe 7D       		.byte	0x7d
 2605 00ff 00       		.sleb128 0
 2606 0100 02000000 		.4byte	.LCFI12
 2607 0104 04000000 		.4byte	.LCFI13
 2608 0108 0200     		.2byte	0x2
 2609 010a 7D       		.byte	0x7d
 2610 010b 08       		.sleb128 8
 2611 010c 04000000 		.4byte	.LCFI13
 2612 0110 06000000 		.4byte	.LCFI14
 2613 0114 0200     		.2byte	0x2
 2614 0116 7D       		.byte	0x7d
 2615 0117 10       		.sleb128 16
 2616 0118 06000000 		.4byte	.LCFI14
 2617 011c 12000000 		.4byte	.LFE5
 2618 0120 0200     		.2byte	0x2
 2619 0122 77       		.byte	0x77
 2620 0123 10       		.sleb128 16
 2621 0124 00000000 		.4byte	0
 2622 0128 00000000 		.4byte	0
 2623              	.LLST6:
 2624 012c 00000000 		.4byte	.LFB6
 2625 0130 02000000 		.4byte	.LCFI15
 2626 0134 0200     		.2byte	0x2
 2627 0136 7D       		.byte	0x7d
 2628 0137 00       		.sleb128 0
 2629 0138 02000000 		.4byte	.LCFI15
 2630 013c 04000000 		.4byte	.LCFI16
 2631 0140 0200     		.2byte	0x2
 2632 0142 7D       		.byte	0x7d
 2633 0143 08       		.sleb128 8
 2634 0144 04000000 		.4byte	.LCFI16
 2635 0148 06000000 		.4byte	.LCFI17
 2636 014c 0200     		.2byte	0x2
 2637 014e 7D       		.byte	0x7d
 2638 014f 10       		.sleb128 16
 2639 0150 06000000 		.4byte	.LCFI17
 2640 0154 20000000 		.4byte	.LFE6
 2641 0158 0200     		.2byte	0x2
 2642 015a 77       		.byte	0x77
 2643 015b 10       		.sleb128 16
 2644 015c 00000000 		.4byte	0
 2645 0160 00000000 		.4byte	0
 2646              	.LLST7:
 2647 0164 00000000 		.4byte	.LFB7
 2648 0168 02000000 		.4byte	.LCFI18
 2649 016c 0200     		.2byte	0x2
 2650 016e 7D       		.byte	0x7d
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 76


 2651 016f 00       		.sleb128 0
 2652 0170 02000000 		.4byte	.LCFI18
 2653 0174 04000000 		.4byte	.LCFI19
 2654 0178 0200     		.2byte	0x2
 2655 017a 7D       		.byte	0x7d
 2656 017b 08       		.sleb128 8
 2657 017c 04000000 		.4byte	.LCFI19
 2658 0180 06000000 		.4byte	.LCFI20
 2659 0184 0200     		.2byte	0x2
 2660 0186 7D       		.byte	0x7d
 2661 0187 10       		.sleb128 16
 2662 0188 06000000 		.4byte	.LCFI20
 2663 018c 20000000 		.4byte	.LFE7
 2664 0190 0200     		.2byte	0x2
 2665 0192 77       		.byte	0x77
 2666 0193 10       		.sleb128 16
 2667 0194 00000000 		.4byte	0
 2668 0198 00000000 		.4byte	0
 2669              	.LLST8:
 2670 019c 00000000 		.4byte	.LFB8
 2671 01a0 02000000 		.4byte	.LCFI21
 2672 01a4 0200     		.2byte	0x2
 2673 01a6 7D       		.byte	0x7d
 2674 01a7 00       		.sleb128 0
 2675 01a8 02000000 		.4byte	.LCFI21
 2676 01ac 04000000 		.4byte	.LCFI22
 2677 01b0 0200     		.2byte	0x2
 2678 01b2 7D       		.byte	0x7d
 2679 01b3 08       		.sleb128 8
 2680 01b4 04000000 		.4byte	.LCFI22
 2681 01b8 06000000 		.4byte	.LCFI23
 2682 01bc 0200     		.2byte	0x2
 2683 01be 7D       		.byte	0x7d
 2684 01bf 10       		.sleb128 16
 2685 01c0 06000000 		.4byte	.LCFI23
 2686 01c4 24000000 		.4byte	.LFE8
 2687 01c8 0200     		.2byte	0x2
 2688 01ca 77       		.byte	0x77
 2689 01cb 10       		.sleb128 16
 2690 01cc 00000000 		.4byte	0
 2691 01d0 00000000 		.4byte	0
 2692              	.LLST9:
 2693 01d4 00000000 		.4byte	.LFB9
 2694 01d8 02000000 		.4byte	.LCFI24
 2695 01dc 0200     		.2byte	0x2
 2696 01de 7D       		.byte	0x7d
 2697 01df 00       		.sleb128 0
 2698 01e0 02000000 		.4byte	.LCFI24
 2699 01e4 04000000 		.4byte	.LCFI25
 2700 01e8 0200     		.2byte	0x2
 2701 01ea 7D       		.byte	0x7d
 2702 01eb 08       		.sleb128 8
 2703 01ec 04000000 		.4byte	.LCFI25
 2704 01f0 06000000 		.4byte	.LCFI26
 2705 01f4 0200     		.2byte	0x2
 2706 01f6 7D       		.byte	0x7d
 2707 01f7 10       		.sleb128 16
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 77


 2708 01f8 06000000 		.4byte	.LCFI26
 2709 01fc 4C000000 		.4byte	.LFE9
 2710 0200 0200     		.2byte	0x2
 2711 0202 77       		.byte	0x77
 2712 0203 10       		.sleb128 16
 2713 0204 00000000 		.4byte	0
 2714 0208 00000000 		.4byte	0
 2715              	.LLST10:
 2716 020c 00000000 		.4byte	.LFB10
 2717 0210 02000000 		.4byte	.LCFI27
 2718 0214 0200     		.2byte	0x2
 2719 0216 7D       		.byte	0x7d
 2720 0217 00       		.sleb128 0
 2721 0218 02000000 		.4byte	.LCFI27
 2722 021c 04000000 		.4byte	.LCFI28
 2723 0220 0200     		.2byte	0x2
 2724 0222 7D       		.byte	0x7d
 2725 0223 10       		.sleb128 16
 2726 0224 04000000 		.4byte	.LCFI28
 2727 0228 22000000 		.4byte	.LFE10
 2728 022c 0200     		.2byte	0x2
 2729 022e 77       		.byte	0x77
 2730 022f 10       		.sleb128 16
 2731 0230 00000000 		.4byte	0
 2732 0234 00000000 		.4byte	0
 2733              	.LLST11:
 2734 0238 00000000 		.4byte	.LFB11
 2735 023c 02000000 		.4byte	.LCFI29
 2736 0240 0200     		.2byte	0x2
 2737 0242 7D       		.byte	0x7d
 2738 0243 00       		.sleb128 0
 2739 0244 02000000 		.4byte	.LCFI29
 2740 0248 04000000 		.4byte	.LCFI30
 2741 024c 0200     		.2byte	0x2
 2742 024e 7D       		.byte	0x7d
 2743 024f 08       		.sleb128 8
 2744 0250 04000000 		.4byte	.LCFI30
 2745 0254 06000000 		.4byte	.LCFI31
 2746 0258 0200     		.2byte	0x2
 2747 025a 7D       		.byte	0x7d
 2748 025b 10       		.sleb128 16
 2749 025c 06000000 		.4byte	.LCFI31
 2750 0260 30000000 		.4byte	.LFE11
 2751 0264 0200     		.2byte	0x2
 2752 0266 77       		.byte	0x77
 2753 0267 10       		.sleb128 16
 2754 0268 00000000 		.4byte	0
 2755 026c 00000000 		.4byte	0
 2756              	.LLST12:
 2757 0270 00000000 		.4byte	.LFB12
 2758 0274 02000000 		.4byte	.LCFI32
 2759 0278 0200     		.2byte	0x2
 2760 027a 7D       		.byte	0x7d
 2761 027b 00       		.sleb128 0
 2762 027c 02000000 		.4byte	.LCFI32
 2763 0280 04000000 		.4byte	.LCFI33
 2764 0284 0200     		.2byte	0x2
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 78


 2765 0286 7D       		.byte	0x7d
 2766 0287 0C       		.sleb128 12
 2767 0288 04000000 		.4byte	.LCFI33
 2768 028c 06000000 		.4byte	.LCFI34
 2769 0290 0200     		.2byte	0x2
 2770 0292 7D       		.byte	0x7d
 2771 0293 18       		.sleb128 24
 2772 0294 06000000 		.4byte	.LCFI34
 2773 0298 44000000 		.4byte	.LFE12
 2774 029c 0200     		.2byte	0x2
 2775 029e 77       		.byte	0x77
 2776 029f 18       		.sleb128 24
 2777 02a0 00000000 		.4byte	0
 2778 02a4 00000000 		.4byte	0
 2779              	.LLST13:
 2780 02a8 00000000 		.4byte	.LFB13
 2781 02ac 02000000 		.4byte	.LCFI35
 2782 02b0 0200     		.2byte	0x2
 2783 02b2 7D       		.byte	0x7d
 2784 02b3 00       		.sleb128 0
 2785 02b4 02000000 		.4byte	.LCFI35
 2786 02b8 04000000 		.4byte	.LCFI36
 2787 02bc 0200     		.2byte	0x2
 2788 02be 7D       		.byte	0x7d
 2789 02bf 08       		.sleb128 8
 2790 02c0 04000000 		.4byte	.LCFI36
 2791 02c4 06000000 		.4byte	.LCFI37
 2792 02c8 0200     		.2byte	0x2
 2793 02ca 7D       		.byte	0x7d
 2794 02cb 10       		.sleb128 16
 2795 02cc 06000000 		.4byte	.LCFI37
 2796 02d0 12000000 		.4byte	.LFE13
 2797 02d4 0200     		.2byte	0x2
 2798 02d6 77       		.byte	0x77
 2799 02d7 10       		.sleb128 16
 2800 02d8 00000000 		.4byte	0
 2801 02dc 00000000 		.4byte	0
 2802              	.LLST14:
 2803 02e0 00000000 		.4byte	.LFB14
 2804 02e4 02000000 		.4byte	.LCFI38
 2805 02e8 0200     		.2byte	0x2
 2806 02ea 7D       		.byte	0x7d
 2807 02eb 00       		.sleb128 0
 2808 02ec 02000000 		.4byte	.LCFI38
 2809 02f0 04000000 		.4byte	.LCFI39
 2810 02f4 0200     		.2byte	0x2
 2811 02f6 7D       		.byte	0x7d
 2812 02f7 08       		.sleb128 8
 2813 02f8 04000000 		.4byte	.LCFI39
 2814 02fc 06000000 		.4byte	.LCFI40
 2815 0300 0200     		.2byte	0x2
 2816 0302 7D       		.byte	0x7d
 2817 0303 10       		.sleb128 16
 2818 0304 06000000 		.4byte	.LCFI40
 2819 0308 20000000 		.4byte	.LFE14
 2820 030c 0200     		.2byte	0x2
 2821 030e 77       		.byte	0x77
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 79


 2822 030f 10       		.sleb128 16
 2823 0310 00000000 		.4byte	0
 2824 0314 00000000 		.4byte	0
 2825              	.LLST15:
 2826 0318 00000000 		.4byte	.LFB15
 2827 031c 02000000 		.4byte	.LCFI41
 2828 0320 0200     		.2byte	0x2
 2829 0322 7D       		.byte	0x7d
 2830 0323 00       		.sleb128 0
 2831 0324 02000000 		.4byte	.LCFI41
 2832 0328 04000000 		.4byte	.LCFI42
 2833 032c 0200     		.2byte	0x2
 2834 032e 7D       		.byte	0x7d
 2835 032f 08       		.sleb128 8
 2836 0330 04000000 		.4byte	.LCFI42
 2837 0334 06000000 		.4byte	.LCFI43
 2838 0338 0200     		.2byte	0x2
 2839 033a 7D       		.byte	0x7d
 2840 033b 10       		.sleb128 16
 2841 033c 06000000 		.4byte	.LCFI43
 2842 0340 20000000 		.4byte	.LFE15
 2843 0344 0200     		.2byte	0x2
 2844 0346 77       		.byte	0x77
 2845 0347 10       		.sleb128 16
 2846 0348 00000000 		.4byte	0
 2847 034c 00000000 		.4byte	0
 2848              	.LLST16:
 2849 0350 00000000 		.4byte	.LFB16
 2850 0354 02000000 		.4byte	.LCFI44
 2851 0358 0200     		.2byte	0x2
 2852 035a 7D       		.byte	0x7d
 2853 035b 00       		.sleb128 0
 2854 035c 02000000 		.4byte	.LCFI44
 2855 0360 04000000 		.4byte	.LCFI45
 2856 0364 0200     		.2byte	0x2
 2857 0366 7D       		.byte	0x7d
 2858 0367 08       		.sleb128 8
 2859 0368 04000000 		.4byte	.LCFI45
 2860 036c 06000000 		.4byte	.LCFI46
 2861 0370 0200     		.2byte	0x2
 2862 0372 7D       		.byte	0x7d
 2863 0373 10       		.sleb128 16
 2864 0374 06000000 		.4byte	.LCFI46
 2865 0378 20000000 		.4byte	.LFE16
 2866 037c 0200     		.2byte	0x2
 2867 037e 77       		.byte	0x77
 2868 037f 10       		.sleb128 16
 2869 0380 00000000 		.4byte	0
 2870 0384 00000000 		.4byte	0
 2871              	.LLST17:
 2872 0388 00000000 		.4byte	.LFB17
 2873 038c 02000000 		.4byte	.LCFI47
 2874 0390 0200     		.2byte	0x2
 2875 0392 7D       		.byte	0x7d
 2876 0393 00       		.sleb128 0
 2877 0394 02000000 		.4byte	.LCFI47
 2878 0398 04000000 		.4byte	.LCFI48
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 80


 2879 039c 0200     		.2byte	0x2
 2880 039e 7D       		.byte	0x7d
 2881 039f 08       		.sleb128 8
 2882 03a0 04000000 		.4byte	.LCFI48
 2883 03a4 06000000 		.4byte	.LCFI49
 2884 03a8 0200     		.2byte	0x2
 2885 03aa 7D       		.byte	0x7d
 2886 03ab 10       		.sleb128 16
 2887 03ac 06000000 		.4byte	.LCFI49
 2888 03b0 2C000000 		.4byte	.LFE17
 2889 03b4 0200     		.2byte	0x2
 2890 03b6 77       		.byte	0x77
 2891 03b7 10       		.sleb128 16
 2892 03b8 00000000 		.4byte	0
 2893 03bc 00000000 		.4byte	0
 2894              	.LLST18:
 2895 03c0 00000000 		.4byte	.LFB18
 2896 03c4 02000000 		.4byte	.LCFI50
 2897 03c8 0200     		.2byte	0x2
 2898 03ca 7D       		.byte	0x7d
 2899 03cb 00       		.sleb128 0
 2900 03cc 02000000 		.4byte	.LCFI50
 2901 03d0 04000000 		.4byte	.LCFI51
 2902 03d4 0200     		.2byte	0x2
 2903 03d6 7D       		.byte	0x7d
 2904 03d7 08       		.sleb128 8
 2905 03d8 04000000 		.4byte	.LCFI51
 2906 03dc 14000000 		.4byte	.LFE18
 2907 03e0 0200     		.2byte	0x2
 2908 03e2 77       		.byte	0x77
 2909 03e3 08       		.sleb128 8
 2910 03e4 00000000 		.4byte	0
 2911 03e8 00000000 		.4byte	0
 2912              	.LLST19:
 2913 03ec 00000000 		.4byte	.LFB19
 2914 03f0 02000000 		.4byte	.LCFI52
 2915 03f4 0200     		.2byte	0x2
 2916 03f6 7D       		.byte	0x7d
 2917 03f7 00       		.sleb128 0
 2918 03f8 02000000 		.4byte	.LCFI52
 2919 03fc 04000000 		.4byte	.LCFI53
 2920 0400 0200     		.2byte	0x2
 2921 0402 7D       		.byte	0x7d
 2922 0403 08       		.sleb128 8
 2923 0404 04000000 		.4byte	.LCFI53
 2924 0408 06000000 		.4byte	.LCFI54
 2925 040c 0200     		.2byte	0x2
 2926 040e 7D       		.byte	0x7d
 2927 040f 10       		.sleb128 16
 2928 0410 06000000 		.4byte	.LCFI54
 2929 0414 34000000 		.4byte	.LFE19
 2930 0418 0200     		.2byte	0x2
 2931 041a 77       		.byte	0x77
 2932 041b 10       		.sleb128 16
 2933 041c 00000000 		.4byte	0
 2934 0420 00000000 		.4byte	0
 2935              	.LLST20:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 81


 2936 0424 00000000 		.4byte	.LFB20
 2937 0428 02000000 		.4byte	.LCFI55
 2938 042c 0200     		.2byte	0x2
 2939 042e 7D       		.byte	0x7d
 2940 042f 00       		.sleb128 0
 2941 0430 02000000 		.4byte	.LCFI55
 2942 0434 04000000 		.4byte	.LCFI56
 2943 0438 0200     		.2byte	0x2
 2944 043a 7D       		.byte	0x7d
 2945 043b 08       		.sleb128 8
 2946 043c 04000000 		.4byte	.LCFI56
 2947 0440 06000000 		.4byte	.LCFI57
 2948 0444 0200     		.2byte	0x2
 2949 0446 7D       		.byte	0x7d
 2950 0447 18       		.sleb128 24
 2951 0448 06000000 		.4byte	.LCFI57
 2952 044c 54000000 		.4byte	.LFE20
 2953 0450 0200     		.2byte	0x2
 2954 0452 77       		.byte	0x77
 2955 0453 18       		.sleb128 24
 2956 0454 00000000 		.4byte	0
 2957 0458 00000000 		.4byte	0
 2958              	.LLST21:
 2959 045c 00000000 		.4byte	.LFB21
 2960 0460 02000000 		.4byte	.LCFI58
 2961 0464 0200     		.2byte	0x2
 2962 0466 7D       		.byte	0x7d
 2963 0467 00       		.sleb128 0
 2964 0468 02000000 		.4byte	.LCFI58
 2965 046c 04000000 		.4byte	.LCFI59
 2966 0470 0200     		.2byte	0x2
 2967 0472 7D       		.byte	0x7d
 2968 0473 08       		.sleb128 8
 2969 0474 04000000 		.4byte	.LCFI59
 2970 0478 06000000 		.4byte	.LCFI60
 2971 047c 0200     		.2byte	0x2
 2972 047e 7D       		.byte	0x7d
 2973 047f 18       		.sleb128 24
 2974 0480 06000000 		.4byte	.LCFI60
 2975 0484 58000000 		.4byte	.LFE21
 2976 0488 0200     		.2byte	0x2
 2977 048a 77       		.byte	0x77
 2978 048b 18       		.sleb128 24
 2979 048c 00000000 		.4byte	0
 2980 0490 00000000 		.4byte	0
 2981              	.LLST22:
 2982 0494 00000000 		.4byte	.LFB22
 2983 0498 02000000 		.4byte	.LCFI61
 2984 049c 0200     		.2byte	0x2
 2985 049e 7D       		.byte	0x7d
 2986 049f 00       		.sleb128 0
 2987 04a0 02000000 		.4byte	.LCFI61
 2988 04a4 04000000 		.4byte	.LCFI62
 2989 04a8 0200     		.2byte	0x2
 2990 04aa 7D       		.byte	0x7d
 2991 04ab 08       		.sleb128 8
 2992 04ac 04000000 		.4byte	.LCFI62
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 82


 2993 04b0 06000000 		.4byte	.LCFI63
 2994 04b4 0200     		.2byte	0x2
 2995 04b6 7D       		.byte	0x7d
 2996 04b7 10       		.sleb128 16
 2997 04b8 06000000 		.4byte	.LCFI63
 2998 04bc 34000000 		.4byte	.LFE22
 2999 04c0 0200     		.2byte	0x2
 3000 04c2 77       		.byte	0x77
 3001 04c3 10       		.sleb128 16
 3002 04c4 00000000 		.4byte	0
 3003 04c8 00000000 		.4byte	0
 3004              	.LLST23:
 3005 04cc 00000000 		.4byte	.LFB23
 3006 04d0 02000000 		.4byte	.LCFI64
 3007 04d4 0200     		.2byte	0x2
 3008 04d6 7D       		.byte	0x7d
 3009 04d7 00       		.sleb128 0
 3010 04d8 02000000 		.4byte	.LCFI64
 3011 04dc 04000000 		.4byte	.LCFI65
 3012 04e0 0200     		.2byte	0x2
 3013 04e2 7D       		.byte	0x7d
 3014 04e3 08       		.sleb128 8
 3015 04e4 04000000 		.4byte	.LCFI65
 3016 04e8 06000000 		.4byte	.LCFI66
 3017 04ec 0200     		.2byte	0x2
 3018 04ee 7D       		.byte	0x7d
 3019 04ef 10       		.sleb128 16
 3020 04f0 06000000 		.4byte	.LCFI66
 3021 04f4 48000000 		.4byte	.LFE23
 3022 04f8 0200     		.2byte	0x2
 3023 04fa 77       		.byte	0x77
 3024 04fb 10       		.sleb128 16
 3025 04fc 00000000 		.4byte	0
 3026 0500 00000000 		.4byte	0
 3027              	.LLST24:
 3028 0504 00000000 		.4byte	.LFB24
 3029 0508 02000000 		.4byte	.LCFI67
 3030 050c 0200     		.2byte	0x2
 3031 050e 7D       		.byte	0x7d
 3032 050f 00       		.sleb128 0
 3033 0510 02000000 		.4byte	.LCFI67
 3034 0514 04000000 		.4byte	.LCFI68
 3035 0518 0200     		.2byte	0x2
 3036 051a 7D       		.byte	0x7d
 3037 051b 0C       		.sleb128 12
 3038 051c 04000000 		.4byte	.LCFI68
 3039 0520 06000000 		.4byte	.LCFI69
 3040 0524 0200     		.2byte	0x2
 3041 0526 7D       		.byte	0x7d
 3042 0527 18       		.sleb128 24
 3043 0528 06000000 		.4byte	.LCFI69
 3044 052c 44000000 		.4byte	.LFE24
 3045 0530 0200     		.2byte	0x2
 3046 0532 77       		.byte	0x77
 3047 0533 18       		.sleb128 24
 3048 0534 00000000 		.4byte	0
 3049 0538 00000000 		.4byte	0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 83


 3050              	.LLST25:
 3051 053c 00000000 		.4byte	.LFB25
 3052 0540 02000000 		.4byte	.LCFI70
 3053 0544 0200     		.2byte	0x2
 3054 0546 7D       		.byte	0x7d
 3055 0547 00       		.sleb128 0
 3056 0548 02000000 		.4byte	.LCFI70
 3057 054c 04000000 		.4byte	.LCFI71
 3058 0550 0200     		.2byte	0x2
 3059 0552 7D       		.byte	0x7d
 3060 0553 08       		.sleb128 8
 3061 0554 04000000 		.4byte	.LCFI71
 3062 0558 06000000 		.4byte	.LCFI72
 3063 055c 0200     		.2byte	0x2
 3064 055e 7D       		.byte	0x7d
 3065 055f 18       		.sleb128 24
 3066 0560 06000000 		.4byte	.LCFI72
 3067 0564 B8000000 		.4byte	.LFE25
 3068 0568 0200     		.2byte	0x2
 3069 056a 77       		.byte	0x77
 3070 056b 18       		.sleb128 24
 3071 056c 00000000 		.4byte	0
 3072 0570 00000000 		.4byte	0
 3073              	.LLST26:
 3074 0574 00000000 		.4byte	.LFB26
 3075 0578 02000000 		.4byte	.LCFI73
 3076 057c 0200     		.2byte	0x2
 3077 057e 7D       		.byte	0x7d
 3078 057f 00       		.sleb128 0
 3079 0580 02000000 		.4byte	.LCFI73
 3080 0584 04000000 		.4byte	.LCFI74
 3081 0588 0200     		.2byte	0x2
 3082 058a 7D       		.byte	0x7d
 3083 058b 08       		.sleb128 8
 3084 058c 04000000 		.4byte	.LCFI74
 3085 0590 06000000 		.4byte	.LCFI75
 3086 0594 0200     		.2byte	0x2
 3087 0596 7D       		.byte	0x7d
 3088 0597 10       		.sleb128 16
 3089 0598 06000000 		.4byte	.LCFI75
 3090 059c 12000000 		.4byte	.LFE26
 3091 05a0 0200     		.2byte	0x2
 3092 05a2 77       		.byte	0x77
 3093 05a3 10       		.sleb128 16
 3094 05a4 00000000 		.4byte	0
 3095 05a8 00000000 		.4byte	0
 3096              		.section	.debug_aranges,"",%progbits
 3097 0000 EC000000 		.4byte	0xec
 3098 0004 0200     		.2byte	0x2
 3099 0006 00000000 		.4byte	.Ldebug_info0
 3100 000a 04       		.byte	0x4
 3101 000b 00       		.byte	0
 3102 000c 0000     		.2byte	0
 3103 000e 0000     		.2byte	0
 3104 0010 00000000 		.4byte	.LFB0
 3105 0014 24000000 		.4byte	.LFE0-.LFB0
 3106 0018 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 84


 3107 001c 3C000000 		.4byte	.LFE1-.LFB1
 3108 0020 00000000 		.4byte	.LFB2
 3109 0024 60000000 		.4byte	.LFE2-.LFB2
 3110 0028 00000000 		.4byte	.LFB3
 3111 002c 60000000 		.4byte	.LFE3-.LFB3
 3112 0030 00000000 		.4byte	.LFB4
 3113 0034 0C000000 		.4byte	.LFE4-.LFB4
 3114 0038 00000000 		.4byte	.LFB5
 3115 003c 12000000 		.4byte	.LFE5-.LFB5
 3116 0040 00000000 		.4byte	.LFB6
 3117 0044 20000000 		.4byte	.LFE6-.LFB6
 3118 0048 00000000 		.4byte	.LFB7
 3119 004c 20000000 		.4byte	.LFE7-.LFB7
 3120 0050 00000000 		.4byte	.LFB8
 3121 0054 24000000 		.4byte	.LFE8-.LFB8
 3122 0058 00000000 		.4byte	.LFB9
 3123 005c 4C000000 		.4byte	.LFE9-.LFB9
 3124 0060 00000000 		.4byte	.LFB10
 3125 0064 22000000 		.4byte	.LFE10-.LFB10
 3126 0068 00000000 		.4byte	.LFB11
 3127 006c 30000000 		.4byte	.LFE11-.LFB11
 3128 0070 00000000 		.4byte	.LFB12
 3129 0074 44000000 		.4byte	.LFE12-.LFB12
 3130 0078 00000000 		.4byte	.LFB13
 3131 007c 12000000 		.4byte	.LFE13-.LFB13
 3132 0080 00000000 		.4byte	.LFB14
 3133 0084 20000000 		.4byte	.LFE14-.LFB14
 3134 0088 00000000 		.4byte	.LFB15
 3135 008c 20000000 		.4byte	.LFE15-.LFB15
 3136 0090 00000000 		.4byte	.LFB16
 3137 0094 20000000 		.4byte	.LFE16-.LFB16
 3138 0098 00000000 		.4byte	.LFB17
 3139 009c 2C000000 		.4byte	.LFE17-.LFB17
 3140 00a0 00000000 		.4byte	.LFB18
 3141 00a4 14000000 		.4byte	.LFE18-.LFB18
 3142 00a8 00000000 		.4byte	.LFB19
 3143 00ac 34000000 		.4byte	.LFE19-.LFB19
 3144 00b0 00000000 		.4byte	.LFB20
 3145 00b4 54000000 		.4byte	.LFE20-.LFB20
 3146 00b8 00000000 		.4byte	.LFB21
 3147 00bc 58000000 		.4byte	.LFE21-.LFB21
 3148 00c0 00000000 		.4byte	.LFB22
 3149 00c4 34000000 		.4byte	.LFE22-.LFB22
 3150 00c8 00000000 		.4byte	.LFB23
 3151 00cc 48000000 		.4byte	.LFE23-.LFB23
 3152 00d0 00000000 		.4byte	.LFB24
 3153 00d4 44000000 		.4byte	.LFE24-.LFB24
 3154 00d8 00000000 		.4byte	.LFB25
 3155 00dc B8000000 		.4byte	.LFE25-.LFB25
 3156 00e0 00000000 		.4byte	.LFB26
 3157 00e4 12000000 		.4byte	.LFE26-.LFB26
 3158 00e8 00000000 		.4byte	0
 3159 00ec 00000000 		.4byte	0
 3160              		.section	.debug_ranges,"",%progbits
 3161              	.Ldebug_ranges0:
 3162 0000 00000000 		.4byte	.LFB0
 3163 0004 24000000 		.4byte	.LFE0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 85


 3164 0008 00000000 		.4byte	.LFB1
 3165 000c 3C000000 		.4byte	.LFE1
 3166 0010 00000000 		.4byte	.LFB2
 3167 0014 60000000 		.4byte	.LFE2
 3168 0018 00000000 		.4byte	.LFB3
 3169 001c 60000000 		.4byte	.LFE3
 3170 0020 00000000 		.4byte	.LFB4
 3171 0024 0C000000 		.4byte	.LFE4
 3172 0028 00000000 		.4byte	.LFB5
 3173 002c 12000000 		.4byte	.LFE5
 3174 0030 00000000 		.4byte	.LFB6
 3175 0034 20000000 		.4byte	.LFE6
 3176 0038 00000000 		.4byte	.LFB7
 3177 003c 20000000 		.4byte	.LFE7
 3178 0040 00000000 		.4byte	.LFB8
 3179 0044 24000000 		.4byte	.LFE8
 3180 0048 00000000 		.4byte	.LFB9
 3181 004c 4C000000 		.4byte	.LFE9
 3182 0050 00000000 		.4byte	.LFB10
 3183 0054 22000000 		.4byte	.LFE10
 3184 0058 00000000 		.4byte	.LFB11
 3185 005c 30000000 		.4byte	.LFE11
 3186 0060 00000000 		.4byte	.LFB12
 3187 0064 44000000 		.4byte	.LFE12
 3188 0068 00000000 		.4byte	.LFB13
 3189 006c 12000000 		.4byte	.LFE13
 3190 0070 00000000 		.4byte	.LFB14
 3191 0074 20000000 		.4byte	.LFE14
 3192 0078 00000000 		.4byte	.LFB15
 3193 007c 20000000 		.4byte	.LFE15
 3194 0080 00000000 		.4byte	.LFB16
 3195 0084 20000000 		.4byte	.LFE16
 3196 0088 00000000 		.4byte	.LFB17
 3197 008c 2C000000 		.4byte	.LFE17
 3198 0090 00000000 		.4byte	.LFB18
 3199 0094 14000000 		.4byte	.LFE18
 3200 0098 00000000 		.4byte	.LFB19
 3201 009c 34000000 		.4byte	.LFE19
 3202 00a0 00000000 		.4byte	.LFB20
 3203 00a4 54000000 		.4byte	.LFE20
 3204 00a8 00000000 		.4byte	.LFB21
 3205 00ac 58000000 		.4byte	.LFE21
 3206 00b0 00000000 		.4byte	.LFB22
 3207 00b4 34000000 		.4byte	.LFE22
 3208 00b8 00000000 		.4byte	.LFB23
 3209 00bc 48000000 		.4byte	.LFE23
 3210 00c0 00000000 		.4byte	.LFB24
 3211 00c4 44000000 		.4byte	.LFE24
 3212 00c8 00000000 		.4byte	.LFB25
 3213 00cc B8000000 		.4byte	.LFE25
 3214 00d0 00000000 		.4byte	.LFB26
 3215 00d4 12000000 		.4byte	.LFE26
 3216 00d8 00000000 		.4byte	0
 3217 00dc 00000000 		.4byte	0
 3218              		.section	.debug_line,"",%progbits
 3219              	.Ldebug_line0:
 3220 0000 ED020000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 86


 3220      02004500 
 3220      00000201 
 3220      FB0E0D00 
 3220      01010101 
 3221              	.LASF10:
 3222 0000 75696E74 		.ascii	"uint16\000"
 3222      313600
 3223              	.LASF54:
 3224 0007 55415254 		.ascii	"UART_1_ClearTxBuffer\000"
 3224      5F315F43 
 3224      6C656172 
 3224      54784275 
 3224      66666572 
 3225              	.LASF44:
 3226 001c 74784461 		.ascii	"txDataByte\000"
 3226      74614279 
 3226      746500
 3227              	.LASF46:
 3228 0027 55415254 		.ascii	"UART_1_PutChar\000"
 3228      5F315F50 
 3228      75744368 
 3228      617200
 3229              	.LASF48:
 3230 0036 73747269 		.ascii	"string\000"
 3230      6E6700
 3231              	.LASF55:
 3232 003d 55415254 		.ascii	"UART_1_SendBreak\000"
 3232      5F315F53 
 3232      656E6442 
 3232      7265616B 
 3232      00
 3233              	.LASF27:
 3234 004e 55415254 		.ascii	"UART_1_ReadRxData\000"
 3234      5F315F52 
 3234      65616452 
 3234      78446174 
 3234      6100
 3235              	.LASF7:
 3236 0060 6C6F6E67 		.ascii	"long long unsigned int\000"
 3236      206C6F6E 
 3236      6720756E 
 3236      7369676E 
 3236      65642069 
 3237              	.LASF53:
 3238 0077 55415254 		.ascii	"UART_1_GetTxBufferSize\000"
 3238      5F315F47 
 3238      65745478 
 3238      42756666 
 3238      65725369 
 3239              	.LASF6:
 3240 008e 6C6F6E67 		.ascii	"long long int\000"
 3240      206C6F6E 
 3240      6720696E 
 3240      7400
 3241              	.LASF0:
 3242 009c 7369676E 		.ascii	"signed char\000"
 3242      65642063 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 87


 3242      68617200 
 3243              	.LASF52:
 3244 00a8 55415254 		.ascii	"UART_1_PutCRLF\000"
 3244      5F315F50 
 3244      75744352 
 3244      4C4600
 3245              	.LASF4:
 3246 00b7 6C6F6E67 		.ascii	"long int\000"
 3246      20696E74 
 3246      00
 3247              	.LASF17:
 3248 00c0 55415254 		.ascii	"UART_1_Start\000"
 3248      5F315F53 
 3248      74617274 
 3248      00
 3249              	.LASF9:
 3250 00cd 75696E74 		.ascii	"uint8\000"
 3250      3800
 3251              	.LASF12:
 3252 00d3 646F7562 		.ascii	"double\000"
 3252      6C6500
 3253              	.LASF38:
 3254 00da 61646472 		.ascii	"addressMode\000"
 3254      6573734D 
 3254      6F646500 
 3255              	.LASF61:
 3256 00e6 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\UART_1.c\000"
 3256      6E657261 
 3256      7465645F 
 3256      536F7572 
 3256      63655C50 
 3257              	.LASF24:
 3258 0108 636F6E74 		.ascii	"control\000"
 3258      726F6C00 
 3259              	.LASF23:
 3260 0110 55415254 		.ascii	"UART_1_SetRxInterruptMode\000"
 3260      5F315F53 
 3260      65745278 
 3260      496E7465 
 3260      72727570 
 3261              	.LASF56:
 3262 012a 7265744D 		.ascii	"retMode\000"
 3262      6F646500 
 3263              	.LASF8:
 3264 0132 756E7369 		.ascii	"unsigned int\000"
 3264      676E6564 
 3264      20696E74 
 3264      00
 3265              	.LASF45:
 3266 013f 55415254 		.ascii	"UART_1_ReadTxStatus\000"
 3266      5F315F52 
 3266      65616454 
 3266      78537461 
 3266      74757300 
 3267              	.LASF5:
 3268 0153 6C6F6E67 		.ascii	"long unsigned int\000"
 3268      20756E73 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 88


 3268      69676E65 
 3268      6420696E 
 3268      7400
 3269              	.LASF35:
 3270 0165 73697A65 		.ascii	"size\000"
 3270      00
 3271              	.LASF3:
 3272 016a 73686F72 		.ascii	"short unsigned int\000"
 3272      7420756E 
 3272      7369676E 
 3272      65642069 
 3272      6E7400
 3273              	.LASF19:
 3274 017d 55415254 		.ascii	"UART_1_Enable\000"
 3274      5F315F45 
 3274      6E61626C 
 3274      6500
 3275              	.LASF59:
 3276 018b 55415254 		.ascii	"UART_1_SetTxAddressMode\000"
 3276      5F315F53 
 3276      65745478 
 3276      41646472 
 3276      6573734D 
 3277              	.LASF58:
 3278 01a3 74785F70 		.ascii	"tx_period\000"
 3278      6572696F 
 3278      6400
 3279              	.LASF25:
 3280 01ad 696E7453 		.ascii	"intSrc\000"
 3280      726300
 3281              	.LASF32:
 3282 01b4 55415254 		.ascii	"UART_1_ReadControlRegister\000"
 3282      5F315F52 
 3282      65616443 
 3282      6F6E7472 
 3282      6F6C5265 
 3283              	.LASF20:
 3284 01cf 55415254 		.ascii	"UART_1_Stop\000"
 3284      5F315F53 
 3284      746F7000 
 3285              	.LASF33:
 3286 01db 55415254 		.ascii	"UART_1_GetByte\000"
 3286      5F315F47 
 3286      65744279 
 3286      746500
 3287              	.LASF43:
 3288 01ea 55415254 		.ascii	"UART_1_WriteTxData\000"
 3288      5F315F57 
 3288      72697465 
 3288      54784461 
 3288      746100
 3289              	.LASF57:
 3290 01fd 746D7053 		.ascii	"tmpStat\000"
 3290      74617400 
 3291              	.LASF16:
 3292 0205 73697A65 		.ascii	"sizetype\000"
 3292      74797065 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 89


 3292      00
 3293              	.LASF39:
 3294 020e 55415254 		.ascii	"UART_1_SetRxAddress1\000"
 3294      5F315F53 
 3294      65745278 
 3294      41646472 
 3294      65737331 
 3295              	.LASF41:
 3296 0223 55415254 		.ascii	"UART_1_SetRxAddress2\000"
 3296      5F315F53 
 3296      65745278 
 3296      41646472 
 3296      65737332 
 3297              	.LASF40:
 3298 0238 61646472 		.ascii	"address\000"
 3298      65737300 
 3299              	.LASF62:
 3300 0240 433A5C70 		.ascii	"C:\\psoc\\i2c_test\\i2ctest.cydsn\000"
 3300      736F635C 
 3300      6932635F 
 3300      74657374 
 3300      5C693263 
 3301              	.LASF31:
 3302 025f 72785374 		.ascii	"rxStatus\000"
 3302      61747573 
 3302      00
 3303              	.LASF42:
 3304 0268 55415254 		.ascii	"UART_1_SetTxInterruptMode\000"
 3304      5F315F53 
 3304      65745478 
 3304      496E7465 
 3304      72727570 
 3305              	.LASF11:
 3306 0282 666C6F61 		.ascii	"float\000"
 3306      7400
 3307              	.LASF47:
 3308 0288 55415254 		.ascii	"UART_1_PutString\000"
 3308      5F315F50 
 3308      75745374 
 3308      72696E67 
 3308      00
 3309              	.LASF36:
 3310 0299 55415254 		.ascii	"UART_1_ClearRxBuffer\000"
 3310      5F315F43 
 3310      6C656172 
 3310      52784275 
 3310      66666572 
 3311              	.LASF37:
 3312 02ae 55415254 		.ascii	"UART_1_SetRxAddressMode\000"
 3312      5F315F53 
 3312      65745278 
 3312      41646472 
 3312      6573734D 
 3313              	.LASF60:
 3314 02c6 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 3314      4320342E 
 3314      372E3320 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 90


 3314      32303133 
 3314      30333132 
 3315 02f9 616E6368 		.ascii	"anch revision 196615]\000"
 3315      20726576 
 3315      6973696F 
 3315      6E203139 
 3315      36363135 
 3316              	.LASF15:
 3317 030f 72656738 		.ascii	"reg8\000"
 3317      00
 3318              	.LASF1:
 3319 0314 756E7369 		.ascii	"unsigned char\000"
 3319      676E6564 
 3319      20636861 
 3319      7200
 3320              	.LASF2:
 3321 0322 73686F72 		.ascii	"short int\000"
 3321      7420696E 
 3321      7400
 3322              	.LASF22:
 3323 032c 55415254 		.ascii	"UART_1_WriteControlRegister\000"
 3323      5F315F57 
 3323      72697465 
 3323      436F6E74 
 3323      726F6C52 
 3324              	.LASF63:
 3325 0348 55415254 		.ascii	"UART_1_initVar\000"
 3325      5F315F69 
 3325      6E697456 
 3325      617200
 3326              	.LASF51:
 3327 0357 62797465 		.ascii	"byteCount\000"
 3327      436F756E 
 3327      7400
 3328              	.LASF34:
 3329 0361 55415254 		.ascii	"UART_1_GetRxBufferSize\000"
 3329      5F315F47 
 3329      65745278 
 3329      42756666 
 3329      65725369 
 3330              	.LASF26:
 3331 0378 72784461 		.ascii	"rxData\000"
 3331      746100
 3332              	.LASF14:
 3333 037f 63686172 		.ascii	"char\000"
 3333      00
 3334              	.LASF13:
 3335 0384 63686172 		.ascii	"char8\000"
 3335      3800
 3336              	.LASF18:
 3337 038a 55415254 		.ascii	"UART_1_Init\000"
 3337      5F315F49 
 3337      6E697400 
 3338              	.LASF21:
 3339 0396 656E6162 		.ascii	"enableInterrupts\000"
 3339      6C65496E 
 3339      74657272 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccHKs2S7.s 			page 91


 3339      75707473 
 3339      00
 3340              	.LASF29:
 3341 03a7 73746174 		.ascii	"status\000"
 3341      757300
 3342              	.LASF28:
 3343 03ae 55415254 		.ascii	"UART_1_ReadRxStatus\000"
 3343      5F315F52 
 3343      65616452 
 3343      78537461 
 3343      74757300 
 3344              	.LASF30:
 3345 03c2 55415254 		.ascii	"UART_1_GetChar\000"
 3345      5F315F47 
 3345      65744368 
 3345      617200
 3346              	.LASF49:
 3347 03d1 6275665F 		.ascii	"buf_index\000"
 3347      696E6465 
 3347      7800
 3348              	.LASF50:
 3349 03db 55415254 		.ascii	"UART_1_PutArray\000"
 3349      5F315F50 
 3349      75744172 
 3349      72617900 
 3350              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
